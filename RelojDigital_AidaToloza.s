; Archivo: RelojDigital_AidaToloza.s
; Dispositivo: PIC16F887 
; Autor: Aida Toloza
; Copilador: pic-as (v2.30), MPLABX v5.40
;
; Programa: Reloj digital
; Hardware: 4 display de 7 segmentos, con 4 pushbutton y 5 leds.
;
; Creado: 10 de marzo , 2022
; Última modificación:  26 marzo, 2022
    
PROCESSOR 16F887
#include <xc.inc>

; CONFIGURACIÓN 1
  CONFIG  FOSC = INTRC_NOCLKOUT // Oscilador interno sin salidas
  CONFIG  WDTE = OFF		// WDT disabled (reinicio repetitivo del pic)
  CONFIG  PWRTE = OFF           // PWRT enabled (reinicio repetitivo del pic)
  CONFIG  MCLRE = OFF           // El pin de MCLR se utiliza como I/O
  CONFIG  CP = OFF              // Sin protección de código
  CONFIG  CPD = OFF             // Sin protección de datos
  CONFIG  BOREN = OFF           // Sin reinicio cuando el voltaje de alimentación baja de 4V
  CONFIG  IESO = OFF            // Reinicio sin cambio de reloj de interno a externo 
  CONFIG  FCMEN = OFF           // Cambio de reloj externo a interno en caso de fallo
  CONFIG  LVP = OFF              // Programación en bajo voltaje permitida

; CONFIGURACIÓN 2
  CONFIG  BOR4V = BOR40V        // Reinicio abajo de 4V, (BOR21V=2.1V)
  CONFIG  WRT = OFF             // Protección de autoescritura por el programa desactivado
  

PSECT resVect, class=CODE, abs, delta=2

;--------------------------VARIABLES UNIVERSALES -------------------------------

PSECT udata_bank0
  
VCTMR0      EQU  250    ; VALOR DE LA FORMALA PARA ENCONTRAR N
DETE_LED    EQU  63     ; VALOR PARA DETENER EL PARPADEO DE LOS LEDS
INI_TMR1L   EQU  220    ; VALOR INICIAL DEL TMR1 PARA TMR1L
INI_TMR1H   EQU  11     ; VALOR INICIAL DEL TMR1 PARA TMR1H
NTMR0       EQU  194    ; 194 LO QUE DA LAS FORMULAS 
C_TMR1      EQU  2      ; 2 OPCIONES QUE OCURRIRAN CON SE ACTIVE LA INTERRUPCION DEL TMR1
DELAY_DISP  EQU  63     ; VALOR INICIAL PARA HACER PARPADEAR LOS DISPLAY CUANDO ESTE EN MODO CONFIGURACION
C_BUZZER    EQU  125    ; TIEMPO INICIAL PARA QUE SUENE EL BUZZER 
INI_TMR2    EQU  125    ; VALOR DE LA FORMULA PARA ENCONTRAR LA COMPARACION DE LOS PRESCALER
VCTMR2      EQU  50     ; TIEMPO PARA EL TEMPORIZADOR
VCALARMA    EQU  250    ; VALOR DE CADA CUANTO ESTARA CONTANDO LA ALARMA DEL TIMER
FIN_ALARMA  EQU  60     ; VALOR PARA FINALIZAR LA ALARMA DEL TIMER
 
;--------------------------VARIABLES A UTILIZAR---------------------------------
 
MODO_TMR0:       DS 1   ; SE GUARDARA CUANDO SE ENTRA A INTERRUPCION DEL TMR0 PARA EL RELOJ
ACTIVAR_LED:     DS 1   ; VARIABLE PARA VER EL ESTADO DEL LED Y ENCENDERLO O APAGARLO SEGUN SEA EL CASO
MODO_TMR1:       DS 1   ; SE GUARDARA CUANDO SE ENTRA A INTERRUPCION DEL TMR1 PARA EL RELOJ
CONFIG_DIS:      DS 1   ; VARIABLE PARA HACER PARPADEAR LOS DISPLAY
ACTIVAR_BUZZER:  DS 1   ; CONTADOR USADO PARA HACER SONAR EL BUZZER
MODO_TMR2:       DS 1   ; SE GUARDARA CUANDO SE ENTRA A INTERRUPCION DEL TMR2 PARA EL RELOJ
SEG_ALARMA:      DS 1   ; USADO PARA GUARDAR LOS SEGUNDO DESDE QUE SE ACTIVO EL BUZZER
MIN_ALARMA:      DS 1   ; USADO PARA GUARDAR LOS MINUTOS DESDE QUE SE ACTIVO EL BUZZER
DELAY_CORTO:	 DS 1   ; SE GUARDAR EL RETRASO CORTO
DELAY_LARGO:	 DS 1   ; SE GUARDA EL RETRASO LARGO
BANDERAS_DIS:    DS 1   ; DISPLAY QUE SERA ENCENDIDO
BANDERAS_MODO:   DS 1   ; BANDERAS QUE INDICAN QUE ALGUNA CONDICION SE CUMPLIO
	                ; BIT 0  GUARDAR CAMBIOS 
	                ; BIT 1  MODO EDICION 
	                ; BIT 2  EDITAR MINUTO/MES O EDITAR MES/DIA
	                ; BIT 3  VALOR ANTERIOR DE LOS DISPLAY 
	                ; BIT 4  PARPADEAR DE LOS DISPLAYS
	                ; BIT 5  SONAR EL BUZZER PARA AL GUARDAR UN DATO
	                ; BIT 6  ACTIVAR LA ALARMA DEL TIMER
BANDERAS_RB:     DS 1   ; BANDERAS PARA INDICAR QUE ALGUNA CONDICION SE CUMPLIO DEL PUERTO B
	                ; BIT 0, DISMINUIR
	                ; BIT 1, AUMENTAR
	                ; BIT 2, PRESIONO RB0
	                ; BIT 3; PRESIONO RB1
	                ; BIT 4; PRESIONO RB2
	                ; BIT 5; PRESIONO RB5
ESTADO:          DS 1   ; SELECCION DEL MODO DE OPERACION
NUEVO_VALOR:     DS 1   ; VALOR A GUARDAR EL VALOR DEL PUERTO B 
MANTENER_VALOR:  DS 1   ; VALOR ANTERIOR DEL PUERTO B
DIS_PARTE1:      DS 1   ; GUARDA EL VALOR EN EL DISPLAY 1 Y 2 
DIS_PARTE2:      DS 1   ; GUARDA EL VALOR EN EL DISPLAY 3 Y 4
 
;-----------------------VARIABLES PARA MODO HORA -------------------------------
    
SEG_HORA:        DS 1   ; GUARDA EL VALOR DE LOS SEGUNDOS
MIN_HORA:        DS 1   ; GUARDA EL VALOR DE LOS MINUTOS 
HORAS:	         DS 1	; GUARDA LA HORA 
	
;-----------------VARIABLES PARA MODO CONFIGURACION HORA -----------------------

MINUTO_EDITAR:   DS 1   ; GUARDA LOS MINUTOS CONFIGURADOS
HORA_EDITAR:     DS 1   ; GUARDA LAS HORAS CONFIGURADOS
  
;----------------------VARIABLES PARA MODO FECHA -------------------------------

MES_DECI:         DS 1  ; GUARDA EL VALOR DEL MES EN DEC
MES_BIN:         DS 1   ; GUARDA EL VALOR DEL MES EN BINARIO
DIA:             DS 1   ; GUARDA EL VALOR DEL DIA EN BI
DIA_MAX:         DS 1   ; GUARDA EL DIA MAXIMO POSIBLE SEGUN EL MES
 
;---------------VARIABLES PARA MODO CONFIGURACION FECHA-------------------------

MES_DECI_EDITAR:  DS 1   ; GUARDA EL MES CONFIGURADOS EN BI
MES_BIN_EDITAR:   DS 1   ; GUARDA EL MES CONFIGURADOS EN BINARIO
DIA_EDITAR:       DS 1   ; GUARDA EL DIA CONFIGURADOS
 
;----------------------VARIABLES PARA MODO TIMER -------------------------------

SEG_TIMER:       DS 1   ; GUARDA EL VALOR DE LOS SEGUNDOS 
MIN_TIMER:       DS 1   ; GUARDA EL VALOR DE LOS MINUTOS
 
;-----------------------VARIABLES PARA MODO HORA -------------------------------

SEG_TIMER_CONFIG:DS 1   ; GUARDA LOS SEGUNDOS CONFIGURADOS
MIN_TIMER_CONFIG:DS 1   ; GUARDA LOS MINUTOS CONFIGURADOS
 
;--------------------------VARIABLES DE MEMORIA --------------------------------

SAVE_TEMP:       DS 1   ; SE USA PARA GUARDAR TEMPORALMENTE EL VALOR ESCRITO EN EL PUERTO B
W_TEMP:          DS 1 
STATUS_TEMP:     DS 1 

    
;----------------------------VECTOR DEL RESET ----------------------------------
    
PSECT code, delta=2, abs   
ORG 0x0000			    ; posición 0000h para el reset

resVect:
    goto    MAIN

;------------------------VECTOR DEL INTERRUPCIONES -----------------------------

PSECT intVect, class=code, delta=2, abs
ORG 0x0004
    
PUSH:
    MOVWF   W_TEMP
    SWAPF   STATUS, W
    MOVWF   STATUS_TEMP
    
ISR:
    BTFSC   INTCON, 2	    ; Interrupcion de TMR0?
    GOTO    INT_TMR0
    
    BTFSC   PIR1,   0	    ; Interrupcion de TMR1?
    GOTO    INT_TMR1
    
    BTFSC   PIR1,   1	    ; Interrupcion de TMR2?
    GOTO    INT_TMR2
    
    GOTO    POP
    
POP:
    SWAPF   STATUS_TEMP, W
    MOVWF   STATUS
    SWAPF   W_TEMP, F
    SWAPF   W_TEMP, W
    RETFIE

;------------------------SUBRUTINAS DE INTERRUPCIONES---------------------------

;---------------------INTERRUPCION TIMER 0 (MODO HORA)--------------------------
    
INT_TMR0: ; SE EJECUTA CADA 4 ciclos de reloj 
    MOVLW   NTMR0
    MOVWF   TMR0
    BCF	    INTCON, 2
    
    ;-------------------CONFIGURACION DE LOS SEGUNDOS---------------------------
    
    CONFIG_SEG:
    DECFSZ  MODO_TMR0		    ; SE VE CUANTO TIENE DE SEGUNDOS
    GOTO    TERMINAR_CONFIG_HORA    ; SE VA GUARDAR LOS VALORES 
    MOVLW   VCTMR0                  ; EL VALOR INICIAL DEL TMR0 DE LA FORMULA SE PASA A VALOR DEL MODO
    MOVWF   MODO_TMR0		    	
    INCF    SEG_HORA,F		    ; SE INCREMENTA EL VALOR DE LOS SEGUNDOS	

    ;-------CONFIGURACION PARA INDICAR QUE SE GUARDARON LAS CONFIGURACIONES-----
    
    TERMINAR_CONFIG_HORA:
    BTFSS   BANDERAS_MODO,6         ; SE VERIFICA SI SE ENCENDIO LA BANDERA 6
    GOTO    SONAR_BUZZER            ; SE VA SONAR EL BUZZER PARA INDICAR QUE SE GUARDARON LOS VALORES
    
    DECFSZ  SEG_ALARMA              ; SE VERIFICA CUANTOS MINUTOS SE TIENE
    GOTO    SONAR_BUZZER            
   
    MOVLW   VCALARMA		    
    MOVWF   SEG_ALARMA
    DECFSZ  MIN_ALARMA,F 
    GOTO    SONAR_BUZZER
   
    BCF	    BANDERAS_MODO,6
    MOVLW   FIN_ALARMA
    MOVWF   MIN_ALARMA
    
    ;------------------CONFIGURACION PARA SONAR EL BUZZER ----------------------
   
    SONAR_BUZZER:
    
    BTFSS   BANDERAS_MODO,5    ; SE VERIFICA SI SE ENCENDIO LA BANDERA 5
    GOTO    PARPADEAR_DIS      ; SE TERMINAR DE PARPADEAR LOS DISPLAY
    
    BSF	    PORTE,1            ; SE ACTIVA EL PUERTO DEL BUSSER
    DECF    ACTIVAR_BUZZER,F   
    BTFSS   STATUS,2 
    GOTO    PARPADEAR_DIS
    
    MOVLW   C_BUZZER
    MOVWF   ACTIVAR_BUZZER
    BCF	    PORTE,1
    BCF	    BANDERAS_MODO, 5   ; SE LIMPIA LA BANDERA 
    
    ;-----------CONFIGURACIONES PARA PARPADEAR LOS DISPLAYS---------------------
    
    PARPADEAR_DIS:
    
    DECFSZ   CONFIG_DIS,F      ; SI LO ANTERIOR DA 0 SE SALTA EL GOTO
    GOTO     PARPADEAR_LEDS
    
    MOVLW    DELAY_DISP
    MOVWF    CONFIG_DIS
    
    MOVF     BANDERAS_MODO,W
    ANDLW    11101111B         ; SE CONSERVAN TODOS MENOS EL BIT 4 
    MOVWF    SAVE_TEMP
    COMF     BANDERAS_MODO, W
    ANDLW    0010000B          ; SE CONSERVA SOLO EL BIT4 
    ADDWF    SAVE_TEMP,W
    MOVWF    BANDERAS_MODO
    
;-------------------PARPADEAR A CADA SEGUNDO LOS LEDS --------------------------
    
    PARPADEAR_LEDS:            ; SE DETIENE DE PARPADEAR LOS LEDS PORQUE SE ESTA EN MODO CONFIGURACION
    
    DECFSZ   ACTIVAR_LED,F     ; SI DA 0 ES QUE YA PASARON 500 MS
    GOTO     POP
   
    ;---------------SI ESTA EN MODO MODO_TODOS_NORMAL PARPADEAN CADA 500 MS----------------
    
    MOVF     PORTE,W
    BTFSS    BANDERAS_MODO,6    
    ANDLW    1011B              ; SE CONSERVAN TODOS MENOS RE2 
    BTFSC    BANDERAS_MODO,6 
    ANDLW    1001B

    MOVWF    SAVE_TEMP
    COMF     PORTE, W
    BTFSS    BANDERAS_MODO,6
    ANDLW    0100B              ; SE CONSERVA SOLO RE2 
    BTFSC    BANDERAS_MODO,6
    ANDLW    0110B              ; SE CONSERVA SOLO RE2 Y RE1 PARA HACER SONAR LA ALARMA DEL TEMPORIZADOR
    ADDWF    SAVE_TEMP,W
    MOVWF    PORTE
    MOVLW    DETE_LED
    MOVWF    ACTIVAR_LED
    GOTO     POP
    
;----------------INTERRUPCION TIMER 1 (MODO CONFIGURACION)----------------------
    
INT_TMR1:
    
    MOVLW   INI_TMR1H
    MOVWF   TMR1H
    MOVLW   INI_TMR1L
    MOVWF   TMR1L
    BCF	    PIR1,0              ; SE LIMPIA EL FLAG DE LA INTERRUPCION
    
    DECF    MODO_TMR1
    BTFSS   STATUS,2		; SI LO ANTERIOR DA 0 SE EJECUTA EL CODIGO QUE LE SIGUE
    GOTO    POP
    
    MOVLW   C_TMR1
    MOVWF   MODO_TMR1
    BCF	    T1CON,0		; SE APAGA EL TMR1
    BCF	    BANDERAS_MODO,1	; SE SALE DEL MODO EDICION
    BCF	    BANDERAS_MODO,2	; SE COLOCA EN DIA/HORA EN LA EDICION
    BSF	    BANDERAS_MODO,5	; SE ACTIVA QUE SUENE EL BUZZER
    
    BTFSC   ESTADO,0		; SI ESTABA ACTIVO ES QUE SE ESTABA EDITANDO LA HORA
    GOTO    CONGIG_HORA
    BTFSC   ESTADO,1		; SE ESTABA EN 1, ES QUE SE ESTABA EDITANDO LA FECHA
    GOTO    CONFIG_FECHA
    BTFSC   ESTADO,2		; SI ESTABA EN 1, ES QUE SE ESTABA EDITANDO EL CRONOMETRO
    GOTO    CONGIG_TIMER
    
    CONGIG_HORA:		; SE ESTABA EDITANDO LA HORA Y SE GUARDAN LOS VALORES ESTABLECIDOS
    MOVF    MINUTO_EDITAR,W
    MOVWF   MIN_HORA
    MOVF    HORA_EDITAR,W
    MOVWF   HORAS
    CLRF    SEG_HORA
    GOTO    POP
    
    CONFIG_FECHA:		; SE ESTABA EDITANDO LA FECHA Y SE GUARDAN LOS VALORES ESTABLECIDOS
    MOVF    MES_DECI_EDITAR,W
    MOVWF   MES_DECI
    MOVF    DIA_EDITAR,W
    MOVWF   DIA
    MOVF    MES_BIN_EDITAR,W
    MOVWF   MES_BIN
    GOTO    POP
    
    CONGIG_TIMER:
    BSF	    T2CON,2		 ; SE ENCIENDE EL TEMPORIZADOR
    MOVF    SEG_TIMER_CONFIG,W
    MOVWF   SEG_TIMER
    MOVF    MIN_TIMER_CONFIG,W
    MOVWF   MIN_TIMER
    
INT_TMR2:
    BCF	    PIR1,1		 ; SE LIMPIA
    DECFSZ  MODO_TMR2,F
    GOTO    POP
    
    MOVLW   VCTMR2
    MOVWF   MODO_TMR2
    DECFSZ  SEG_TIMER,F
    GOTO    MODO_TIMER_NORMAL
    ;----------------- SE VERIFICA SE SE AGOTO EL TIEMPO -----------------------
    
    MOVLW   0
    SUBWF   MIN_TIMER,W		 ; LA UNICA FORMA DE QUE ESTO DE 0 ES SI MINUTOS ES 0
    BTFSS   STATUS,2		 ; 1 SI LO ANTERIOR DA 0
    GOTO    MODO_TIMER_NORMAL

    BSF	    BANDERAS_MODO,6	 ; SUENA LA ALARMA DEL TEMPORIZADOR
    BCF	    T2CON,2		 ; SE APAGA EL TMR2
    CLRF    TMR2		 ; SE LIMPIA EL REGISTRO DEL TMR2
    CLRF    SEG_TIMER
    GOTO    POP			 ; SE SALE DE LA INTERRUPCION
    
    MODO_TIMER_NORMAL:
    ;----------------------- SE VERIFICA SI PASA DE 00 A 59---------------------
    MOVLW   255
    SUBWF   SEG_TIMER,W
    BTFSS   STATUS,2		 ; SI DA 0 ES QUE SI SE PASO DE 00 A 59
    GOTO    POP
    
    MOVLW   01011001B		 ; 59 EN BI
    MOVWF   SEG_TIMER
 
    DESCONTAR_TIMER:
    ;-------------SI NO SE ACABO EL TIEMPO DE DECREMENTAN LOS MINUTOS-----------
    DECF    MIN_TIMER 
    
    
;-------------------------------- TABLAS ---------------------------------------
PSECT code, delta=2,abs 
ORG 0x00D0
 
TABLA:
    CLRF    PCLATH		; Limpiamos registro PCLATH
    ANDLW   0x0F		; No saltar más del tamaño de la tabla
    ADDWF   PCL
    RETLW   00111111B		; 0
    RETLW   00000110B		; 1
    RETLW   01011011B		; 2
    RETLW   01001111B		; 3
    RETLW   01100110B		; 4
    RETLW   01101101B		; 5
    RETLW   01111101B		; 6
    RETLW   00000111B		; 7
    RETLW   01111111B		; 8
    RETLW   01100111B		; 9
    RETLW   01110111B		; A
    RETLW   01111100B		; B
    RETLW   00111001B		; C
    RETLW   01011110B		; D
    RETLW   01111001B		; E
    RETLW   01110001B		; F
    ;------------------TABLA PARA LOS DIAS DE LOS MESES-------------------------

ORG 0x00E8    
TABLA_MESES:
    CLRF    PCLATH
    BTFSC   BANDERAS_MODO, 1    ; SI SE ESTA EN MODO EDICION SE  PASA ESTE VALOR 
    MOVF    MES_BIN_EDITAR,W
    BTFSS   BANDERAS_MODO,1     ; SI SE ESTA EN MODO VISUALIZACION SE PASA ESTE VALOR 
    MOVF    MES_BIN,W
    andlw   0x0F
    addwf   PCL
    NOP                         ; VARIABLE PARA 0 (EN FUNCIONAMIENTO NORMAL NO DEBERIA EJECUTARSE)
    RETLW   00110010B           ; 31 EN BI  ENERO
    RETLW   00101001B           ; 28 EN BI FEBRERO
    RETLW   00110010B           ; 31 EN BI  MARZO
    RETLW   00110001B		; 30 EN BI ABRIL
    RETLW   00110010B		; 31 EN BI  MAYO
    RETLW   00110001B		; 30 EN BI JUNIO
    RETLW   00110010B		; 31 EN BI  JULIO
    RETLW   00110010B		; 31 EN BI  AGOSTO
    RETLW   00110001B		; 30 EN BI SEPTIEMBRE
    RETLW   00110010B		; 31 EN BI  OCTUBRE
    RETLW   00110001B		; 30 EN BI NOVIEMBRE
    RETLW   00110010B		; 31 EN BI  DICIEMBRE    
    
;------------------------------- CONFIGURACION ---------------------------------
    
PSECT code, delta=2, abs
ORG 0x00120			; posición 100h para el codigo


MAIN:
    CALL    CONFIG_IO	    ; Configuración de I/O
    
CONFIG_IO:
    BSF	    STATUS,6
    BSF	    STATUS,5	    ;BANCO 3
    
    CLRF    ANSEL
    CLRF    ANSELH	    ;PUERTOS A, E Y B COMO I/O DIGITALES
    
    
    BCF	    STATUS,6	    ; BANCO 1 

    
    MOVLW   255
    MOVWF   TRISB	    ; PUERTO B COMO ENTRADA DIGITAL
    CLRF    TRISA	    ; PUERTO A COMO SALIDA
    CLRF    TRISE	    ; PUERTO E COMO SALIDA
    CLRF    TRISC	    ; PUERTO C, PARA EL DISPLAY
    CLRF    TRISD	    ; PUERTO D, PARA CONTROLAR LOS DISPLAYS
    
    MOVLW   00000011B	    ; PULL UPS ACTIVAS, PRESCALER DE 1:16 ASIGNADO AL TMR0 
    MOVWF   OPTION_REG 
    MOVLW   0000011B	    ; TMR2 Y TMR1 INTERUPCCION ACTIVADA
    MOVWF   PIE1
    
    MOVLW   INI_TMR2
    MOVWF   PR2		    ; CUENTA 125 VECES SE EJECUTA LA INTERRUPCION CADA 20mS
     
    MOVLW   11100000B	    ; INTERRUPCIONES ACTIVADAS, TMR0 INTERRUPCION ACTIVADA, PORTB INT ACTIVADA
    MOVWF   INTCON
    
    
    BCF	    STATUS,5	    ; BANCO 0
    
    MOVLW   01100000B	    ; APAGADO, GATE MODE ES ACTIVE LOW, Y CON PREESCALER DE 1:4
    MOVWF   T1CON	    ; SE USARA PARA EL PARPADEO DE LOS DISPLAY CUANDO SE ESTE EN MODO DE EDICION
    MOVLW   1001010B
    MOVWF   T2CON	    ; PRESSCALER 16 POST ESCALER DE 10 SE USA PARA EL CRONOMETRO OVERFLOW CADA 20mS
    
    CLRF    PORTD
    CLRF    PORTC
    CLRF    PORTE
    MOVLW   NTMR0	    ; CUENTA DEL TMR0 INICIA EN 131 PARA QUE LA INTERRUPCION SE EJECUTE CADA
    MOVWF   TMR0	    ; 4 ms 
    MOVLW   INI_TMR1H
    MOVWF   TMR1H
    MOVLW   INI_TMR1L
    MOVWF   TMR1L
    
    MOVLW   DETE_LED
    MOVWF   ACTIVAR_LED
    MOVLW   VCTMR0
    MOVWF   MODO_TMR0
    CLRF    SEG_HORA
    CLRF    MIN_HORA
    CLRF    HORAS
    CLRF    BANDERAS_MODO
    CLRF    MIN_TIMER
    CLRF    SEG_TIMER
    MOVLW   255
    MOVWF   NUEVO_VALOR
    MOVWF   MANTENER_VALOR
    
    MOVLW   C_TMR1
    MOVWF   MODO_TMR1
    
    MOVLW   00000001B
    MOVWF   BANDERAS_DIS
    MOVWF   ESTADO
    MOVWF   DIA
    MOVWF   MES_DECI
    MOVWF   MES_BIN
    MOVLW   C_BUZZER
    MOVWF   ACTIVAR_BUZZER
    MOVLW   VCTMR2
    MOVWF   MODO_TMR2
    MOVWF   PORTA
    
    
    MOVLW   FIN_ALARMA
    MOVWF   MIN_ALARMA
    MOVLW   VCALARMA
    MOVWF   SEG_ALARMA
    
    
;-----Código que se va a estar ejecutando mientras no hayan interrupciones------
    
LOOP: ;AQUI SE VERIFICA QUE LOS SEGUNDOS HALLAN PASADO PARA PASAR A SEGUNDOS O CAMBIO DE DIA
    
    MOVLW   60
    SUBWF   SEG_HORA,W
    BTFSC   STATUS,2		    ; SI SE CONTO 1 SEGUNDO SE EJECUTA 
    CALL    VALOR_RELOJ
    BTFSC   BANDERAS_MODO,0	    ; SI SE ACTIVA LA BANDERA DE FECHA ENTONCES SE CAMBIA LA FECHA
    CALL    VALOR_FECHA
    
    ;--------------- CONTROL DEL TEMPORIZADOR ----------------------------------
    BTFSC   T2CON,2		    ; SE VERIFICA QUE EL TEMPORIZADOR ESTE EN FUNCIONAMIENTO
    CALL    VALOR_TEMPORIZADOR
   
    ;---------CONTROL DE LA PESISTENCIA DE VISION PARA LOS DISPLAYS-------------
    
    ADDLW   0			    ;SE ASEGURA QUE EL BIT CARRY DE STATUS ESTE EN 0 PARA QUE EL CORRIEMENTO DE BIS SEA 
    BTFSS   BANDERAS_DIS,3
    GOTO    MODO_TODOS_NORMAL
   
    CLRF    BANDERAS_DIS
    MOVLW   255
    ADDLW   1

    MODO_TODOS_NORMAL:
    RLF	    BANDERAS_DIS            ; SE CORREN 1 ESPACIO A LA IZQUIERDA LOS BITS
    
    ;-------------------------- LECTURA DEL PUERTOB ----------------------------
    
   
    MOVF    NUEVO_VALOR,W	    ; SI HAY UN FLANCO DE SUBIDA EN CUALQUIERA DE LOS PUERTOS ENTONCES SE CAMBIA DE ESTADO
    MOVWF   MANTENER_VALOR
    CALL    DELAY_US		    ; DA TIEMPO A QUE LA SALIDA SE ESTABILICE
    MOVF    PORTB,W
    MOVWF   NUEVO_VALOR
    
    
    BTFSC   MANTENER_VALOR,5	    ; SE VERIFICA SI SE PRESIONO EL BOTON PARA ENTRAR EN MODO EDICION
    GOTO    MANTANER_ESTADO_ACTUAL
    
    BTFSC   NUEVO_VALOR,5
    BSF	    BANDERAS_MODO,1
    
   
    
    MANTANER_ESTADO_ACTUAL:         ; SE VERIFICA SI SE PRESIONO EL BOTON PARA CAMBIAR DE OPCION 
   
    BTFSC   BANDERAS_MODO,1         ; SE VERIFICA QUE NO SI SE ENCUENTRA EN EL MODO EDICION
    GOTO    OPCIONES		    ; SI SE ENCUENTRA EN ESTE MODO NO SE ATIENDE A RB2 PARA EL CAMBIO DE MODO
    
    ;SI SE ENCUENTRA EN MODO VISUALIZACION, FLANCO DE SUBIDA EN RB2 
    BTFSC   MANTENER_VALOR,2	    ; SI EL ANTERIOR ES 1 SE VERIFICA QUE EL VALOR ACTUAL SEA 0
    GOTO    OPCIONES
    
    BTFSS   NUEVO_VALOR,2	    ; SI ES 0 SE CAMBIA DE ESTADO
    GOTO    OPCIONES                ; SE LLEGA A AQUI SI SE DETECTA UN FLANCO DE SUBIDA
    BTFSS   ESTADO,2		    ; SI ES 0 ES QUE TODAVIA NO SE HA ENTRADO A LA ESTADO 3
    GOTO    OPCIONES_NORMAL
    
    MOVLW   1
    MOVWF   ESTADO
    GOTO    OPCIONES
    
    OPCIONES_NORMAL:
    MOVLW   0
    ADDLW   0                       ; SE ASEGURA QUE EL BIT C DE STATUS ESTE EN 0
    RLF	    ESTADO	


OPCIONES:    ; SE DECIDE A QUE MODO ENTRAR
    MOVF    ESTADO,W
    MOVWF   PORTA		    
    BTFSC   ESTADO,0
    GOTO    OPCION_RELOJ
    BTFSC   ESTADO,1
    GOTO    OPCION_FECHA
    BTFSC   ESTADO,2
    GOTO    OPCION_TIMER
    GOTO    LOOP
    
    OPCION_RELOJ:                    ; SE VERIFICA SI SE ENCUENTRA EN MODO EDITAR O NO
    BTFSS   BANDERAS_MODO,1
    GOTO    NO_EDITAR_HORA
    GOTO    SI_EDITAR_HORA
    
    NO_EDITAR_HORA:
    MOVF    MIN_HORA,W
    MOVWF   DIS_PARTE1
    MOVF    HORAS,W
    MOVWF   DIS_PARTE2
    CALL    DISPLAY_NO_EDITAR
   
    GOTO    LOOP
    
    SI_EDITAR_HORA:
    CALL    EDITAR_HORA
    MOVF    MINUTO_EDITAR,W
    MOVWF   DIS_PARTE1
    MOVF    HORA_EDITAR,W
    MOVWF   DIS_PARTE2
    CALL    DISPLAY_EDITAR
    GOTO    LOOP
    
    OPCION_FECHA:
    BTFSS   BANDERAS_MODO,1
    GOTO    NO_EDITAR_FECHA
    GOTO    SI_EDITAR_FECHA
    
    NO_EDITAR_FECHA:
    MOVF    DIA,W
    MOVWF   DIS_PARTE2
    MOVF    MES_DECI,W
    MOVWF   DIS_PARTE1
    CALL    DISPLAY_NO_EDITAR
    
    GOTO    LOOP
    
    SI_EDITAR_FECHA:
    CALL    EDITAR_FECHA
    MOVF    MES_DECI_EDITAR,W
    MOVWF   DIS_PARTE1
    MOVF    DIA_EDITAR,W
    MOVWF   DIS_PARTE2
    CALL    DISPLAY_EDITAR
    GOTO    LOOP
    
    OPCION_TIMER:
    BTFSS   BANDERAS_MODO,1
    GOTO    NO_EDITAR_TIMER
    GOTO    SI_EDITAR_TIMER
    
    NO_EDITAR_TIMER:
    BTFSC   MANTENER_VALOR,1	    ; SI SE HACE UN FLANCO DE SUBIDA EN RB1 SE APAGA LA ALARMA
    GOTO    SEGUIR_NO_EDITAR
    
    BTFSS   NUEVO_VALOR,1
    GOTO    SEGUIR_NO_EDITAR
    
    BCF	    BANDERAS_MODO,6
    BCF	    PORTE,1
    MOVLW   VCALARMA
    MOVWF   SEG_ALARMA
    MOVLW   FIN_ALARMA
    MOVWF   MIN_ALARMA
    
    SEGUIR_NO_EDITAR:
    MOVF    SEG_TIMER,W
    MOVWF   DIS_PARTE1
    MOVF    MIN_TIMER,W
    MOVWF   DIS_PARTE2
    CALL    DISPLAY_NO_EDITAR
    GOTO    LOOP
    
    SI_EDITAR_TIMER:
    CALL    EDITAR_TEMPORIZADOR
    MOVF    SEG_TIMER_CONFIG,W
    MOVWF   DIS_PARTE1
    MOVF    MIN_TIMER_CONFIG,W
    MOVWF   DIS_PARTE2
    CALL    DISPLAY_EDITAR
    
    GOTO    LOOP
    

;--------------------- SUBRUTINAS DE DISPLAY NORMAL-----------------------------
    
    DISPLAY_NO_EDITAR:
    BTFSC   BANDERAS_DIS,1
    GOTO     DISP_1_2
    BTFSC   BANDERAS_DIS,2
    GOTO    DISP_2_1
    BTFSC   BANDERAS_DIS,3
    GOTO    DISP_2_2
    
    MOVF    DIS_PARTE1,W          ; SI NINGUNO DE LOS ANTERIORES SE DIO ES QUE SE TENIA QUE ENTRAR AQUI
    ANDLW   00001111B             ; SE CONSERVA EL NIBBLE MENOS SIGNFICATIVO
    CALL    TABLA
    GOTO    MOSTRAR_VALOR
    
    DISP_1_2:
    SWAPF   DIS_PARTE1,W 
    ANDLW   00001111B		  ; SE CONSERVA EL VALOR DEL BIT MENOS SIGNIFICATIVO
    CALL    TABLA
    GOTO    MOSTRAR_VALOR
    
    DISP_2_1:
    MOVF    DIS_PARTE2,W
    ANDLW   00001111B
    CALL    TABLA
    GOTO    MOSTRAR_VALOR
    
    DISP_2_2:
    SWAPF   DIS_PARTE2,W
    ANDLW   00001111B
    CALL    TABLA
   
    MOSTRAR_VALOR:
    CLRF    PORTD
    MOVWF   PORTC
    MOVF    BANDERAS_DIS,W
    MOVWF   PORTD
    RETURN
    
DISPLAY_EDITAR:   ;AQUI SE CONFIGURA PARA QUE PARPADEEN
    MOVLW   0			   ; W SOLO SE SOBREESCRIBE SI EL DISPLAY TIENE QUE ESTAR ENCENDIDO
    BTFSC   BANDERAS_DIS,1
    GOTO    DISPLAY_1_2_EDITAR
    BTFSC   BANDERAS_DIS,2
    GOTO    DISPLAY_2_1_EDITAR
    BTFSC   BANDERAS_DIS,3
    GOTO    DISPLAY_2_2_EDITAR
    
    
    BTFSS   BANDERAS_MODO,4	   ; SI SE LLEGA AQUI ES QUE ESTE ERA EL QUE SE TENIA QUE ENCENDER
    GOTO    DISPLAY_1_1_EDITAR_NORMAL
    
    
    BTFSS   BANDERAS_MODO,2
    GOTO    MOSTRAR_DISPLAY_EDITAR
    
    DISPLAY_1_1_EDITAR_NORMAL:
    MOVF    DIS_PARTE1,W
    ANDLW   00001111B		    ; SE CONSERVA EL NIBBLE MENOS SIGNFICATIVO
    CALL    TABLA
    GOTO    MOSTRAR_DISPLAY_EDITAR
    
    DISPLAY_1_2_EDITAR:
    BTFSS   BANDERAS_MODO,4
    GOTO    DISPLAY_1_2_EDITAR_NORMAL
    
    BTFSS   BANDERAS_MODO,2
    GOTO    MOSTRAR_DISPLAY_EDITAR
    
    DISPLAY_1_2_EDITAR_NORMAL:
    SWAPF   DIS_PARTE1,W 
    ANDLW   00001111B		    ; SE CONSERVA EL VALOR DEL BIT MENOS SIGNIFICATIVO
    CALL    TABLA
    GOTO    MOSTRAR_DISPLAY_EDITAR
    
    DISPLAY_2_1_EDITAR:
     BTFSS  BANDERAS_MODO,4
    GOTO    DISPLAY_2_1_EDITAR_NORMAL
    
    BTFSC   BANDERAS_MODO,2
    GOTO    MOSTRAR_DISPLAY_EDITAR   ; SE APAGAN TODOS LOS BITS DEL PUERTO C
    
    DISPLAY_2_1_EDITAR_NORMAL:
    MOVF    DIS_PARTE2,W
    ANDLW   00001111B
    CALL    TABLA
    GOTO    MOSTRAR_DISPLAY_EDITAR
    
    DISPLAY_2_2_EDITAR:
    BTFSS   BANDERAS_MODO,4
    GOTO    DISPLAY_2_2_EDITAR_NORMAL
    
    BTFSC   BANDERAS_MODO,2
    GOTO    MOSTRAR_DISPLAY_EDITAR    ; SE APAGAN TODOS LOS BITS DEL PUERTO C
    
    DISPLAY_2_2_EDITAR_NORMAL:
    SWAPF   DIS_PARTE2,W
    ANDLW   00001111B
    CALL    TABLA
    
    MOSTRAR_DISPLAY_EDITAR:
    CLRF    PORTD
    MOVWF   PORTC
    MOVF    BANDERAS_DIS,W
    MOVWF   PORTD
    RETURN
    
    
;---------------- SUBRUTINAS PARA CAMBIAR DE BINARIO A DECIMAL -----------------------
    
PASAR_B_AUMENTO:             ; PARA ESTA RUTA SE USA EL PASO POR REFERENCIA DE PARAMETRO, USANDO EL DIRECCIONAMIENTO INDIRECTO
    BCF	    BANDERAS_RB,1         ; PARA QUE NO SE TENGA QUE LIMPIAR DE FORMA EXTERNA
    MOVF    INDF,W		  ; VALOR AL QUE APUNTA EL SFR SE MUEVE W 
    ANDLW   00001111B		  ; SE QUEDA CON EL DIGITO MENOR
    SUBLW   10			  ; SI ES 10 ES QUE SE DEBE DE CORREGIR
    BTFSS   STATUS,2
    RETURN
    
    BSF	    BANDERAS_RB,1         ; SE INDICA QUE SE TUVO QUE REALIZAR LA CORRECCION
    MOVLW   6 
    ADDWF   INDF,F                ; SE LE SUMA 6 PARA CORREGIR
    RETURN                        ; SE REGRESA

PASAR_B_DISMINUCION:		  ; PARA ESTA RUTA SE USA EL PASO POR REFERENCIA DE PARAMETRO, USANDO EL DIRECCIONAMIENTO INDIRECTO
    BCF	    BANDERAS_RB,0	  ; PARA QUE NO SE TENGA QUE LIMPIAR DE FORMA EXTERNA
    MOVF    INDF,W		  ; VALOR AL QUE APUNTA EL SFR SE MUEVE W 
    ANDLW   00001111B             ; SE QUEDA CON EL DIGITO MENOR
    SUBLW   15			  ; SI ES 15 ES QUE SE DEBE DE CORREGIR
    BTFSS   STATUS,2
    RETURN
    
    BSF	    BANDERAS_RB,0	  ; SE INDICA QUE SE TUVO QUE REALIZAR LA CORRECCION
    MOVLW   6 
    SUBWF   INDF,F		  ; SE LE RESTA 6 PARA CORREGIR
    RETURN		          ; SE REGRESA
    
VALOR_TEMPORIZADOR:		  ; EN ESTA SUBRUTINA UNICAMENTE SE CORRIGEN LOS VALORES BI
    MOVLW   SEG_TIMER		  ; EL VALOR DE LA VARIABLE SEGUNDOS SE DISMINUYE EN LA INTERRUPCION DEL TMR2 AQUI SE CORRIGE EL BI
    MOVWF   FSR			  ; SE PASA LA DIRECCION DE ESTA VARIABLE A SFR PARA EL PASO POR REFERENCIA
    CALL    PASAR_B_DISMINUCION   ; SE CORRIGE EL B DE SEGUNDOS
   
    MOVLW   MIN_TIMER
    MOVWF   FSR			   ; PASO POR REFERENCIA
    CALL    PASAR_B_DISMINUCION    ; SE CORRIGE EL BI
    RETURN 

VALOR_FECHA:			   ; SUBRUTINA ENCARGADA DE REALIZAR EL CONTROL DE LA HORA Y LA FECHA DEL RELOJ
    BCF	    BANDERAS_MODO,0	   ; SE APAGA LA BANDERA DE CAMBIO DE FECHA
    INCF    DIA,F                  ; SE AUMENTA EL VALOR
   
    MOVLW   DIA
    MOVWF   FSR                    ; PASO POR REFERENCIA
    CALL    PASAR_B_AUMENTO        ; SE CORRIGE LA CODIFICACION BI
    
    CALL    TABLA_MESES	           ; AQUI SE VERIFICA SI EL NUEVO VALOR PARA EL DIA ES VALIDO O SI YA SE ENCUENTRA EN EL MES SIGUIENTE
    SUBWF   DIA,W
    BTFSS   STATUS,2               ; SI LO ANTERIOR DA 0 SE SALTA LA SIGUENTE INSTRUCCION
    RETURN
    
    MOVLW   1                      ; SI  SE SALTA AQUI SIGUE
    MOVWF   DIA
    INCF    MES_BIN,F
    INCF    MES_DECI,F
    
    MOVLW   MES_DECI                ; SE CORRIGE EL BI SI ES NECESARIO
    MOVWF   FSR                    ; PASO POR REFERENCIA
    CALL    PASAR_B_AUMENTO        ; SE CORRIGE
     
    MOVLW   13                     ; SE VERIFICA QUE NO SE PASE DE 12 MESES
    SUBWF   MES_BIN,W
    BTFSS   STATUS,2               ; SI DA 0 SE SALTA LA SIGUEINTE INSTRUCCION 
    RETURN
    
    MOVLW 1                        ; SE REINICIA LA CUENTA
    MOVWF   MES_BIN
    MOVWF   MES_DECI
    RETURN                         ; FIN DEL VALOR FECHA

VALOR_RELOJ:                       ; SE CONTROLA EN VALOR DEL RELOJ
    INCF    MIN_HORA,F
    CLRF    SEG_HORA
    
    MOVLW   MIN_HORA
    MOVWF   FSR                    ; PASO POR REFERENCIA DE LA VARIABLE
    CALL    PASAR_B_AUMENTO ; SE CORRIGE
    
    MOVLW   01100000B              ; SE VERIFICA QUE LLEGUE A 60 
    SUBWF   MIN_HORA,W
    BTFSS   STATUS,2 
    RETURN                         ; SI NO ES 60 NO ES NECESARIO SUMAR 1 A LAS HORAS
    
    CLRF    MIN_HORA               ; SI SI LLEGO A 60 SE INCREMENTAN LAS HORAS 
    INCF    HORAS, F
    
    MOVLW   00100100B              ; SE VERIFICA QUE NO SE LLEGE A 24
    SUBWF   HORAS,W
    BTFSS   STATUS, 2              ; SI LLEGA A ESTO SE LIMPIA EL VALOR DE HORAS Y TERMINA LA RUTINA
    GOTO    CORRECCION_HORA
    
    CLRF    HORAS
    BSF	    BANDERAS_MODO,0        ; ESTE BIT INDICA QUE HAY QUE INCREMENTAR LA FECHA
    RETURN                         ; SI ES 24 SE SABE QUE NO ES NECESARIO CORREGIR LA CODIFICACION BI
    
    CORRECCION_HORA:
    MOVLW   HORAS
    MOVWF   FSR			   ; PASO POR REFERNCIA
    CALL    PASAR_B_AUMENTO ; SE CORRIGE EL BI
    RETURN                         ; FIN DE LA CORRECCION

EDITAR_HORA:                       ; CUANDO SE ENTRA EN ESTE MODO RB2 REALIZA LA FUNCION DE SELECTOR DE EDICION DE HORA O MINUTO
    BTFSC   BANDERAS_MODO,3        ; RB5 DETERMINA CUANDO SE SALE DE ESTE MODO
    GOTO    SI_YA_SE_ENTRO_ANTES   ; SE ENTRA A ESTA PARTE SOLO CUANDO ES LA PRIMERA VEZ

    BSF	    BANDERAS_MODO,3	   ; PARA QUE NO SE VUELVA A ENTRAR AQUI HASTA QUE SE SALGA DEL MODO EDICION
    MOVF    HORAS,W
    MOVWF   HORA_EDITAR
    
    BSF	    T1CON,0		   ; SE ACTIVA EL TIMER 1
    
    MOVF    MIN_HORA,W
    MOVWF   MINUTO_EDITAR	   ; SE GUARDAN LOS VALORES EN EL INSTANTE QUE SE ENTRA AL MODO DE EDICION
   
    MOVF    NUEVO_VALOR,W          ; SE ACTUALIZAN ESTOS REGISTROS YA QUE SI NO SE HACE, AL SER LA CONDICION
    MOVWF   MANTENER_VALOR         ; DE ENTRADA IGUAL QUE LA DE SALIDA, SOLO SE VA A EJECUTAR 1 VEZ
    CALL    DELAY_US               ; DA TIEMPO A QUE LA SALIDA SE ESTABILICE
    MOVF    PORTB,W
    MOVWF   NUEVO_VALOR
    
    SI_YA_SE_ENTRO_ANTES:          ; SE EVITA EL PARPADEO DE LOS LEDS DEL CENTRO
    BSF	    PORTE,2
    CALL    FLANCO_SUBIDA_RB0      ; SE REVISAN LOS FLANCOS DE SUBIDA
    CALL    FLANCO_SUBIDA_RB1      ; SE MIRA SI HUBO UN FLANCO EN AUMENTAR O DISMINUIR
    
    
    CALL    FLANCO_SUBIDA_RB2	   ; SE HACE EL CAMBIO ENTRE 0 O 1 PARA EL VALOR A EDITAR (SE VERIFICA QUE HAYA OCURRIDO FLANCO DE SUBIDA)
    BTFSS   BANDERAS_RB,4          ; SI ESTE ES 1 ES QUE SI HUBO FLANCO DE SUBIDA
    GOTO    CAMBIAR                ; SE HACE EL CAMBIO DEL VALOR A EDITAR 

    BTFSS   BANDERAS_MODO,2        ; SE VE SI ESTA EN 1
    GOTO    CAMBIAR_0
    
    BCF	    BANDERAS_MODO,2        ; SE  LIMPIA SI ESTA EN 1
    GOTO    CAMBIAR
    
    CAMBIAR_0:                     ; SI NO ESTA EN 1 ESTA EN CERO ENTONCES 
    BSF	    BANDERAS_MODO,2 
    
    CAMBIAR:
    BTFSC   BANDERAS_MODO,2	   ; SE VE SI LA EDICION ESTA EN HORAS(1) O MINUTOS(0)
    GOTO    EDIT_HOUR
    
    
    EDIT_MINUTE:
    BTFSS   BANDERAS_RB,2          ; SI ESTA BANDERA ESTA EN 1 ES QUE HUBO FLANCO DE SUBIDA
    GOTO    INCREMENTAR_MINUTE     ; SI HUBO UN FLANCO DE SUBIDA SE EN RB0 SE EJECUTA ESTO  DECREMENTAR

    DECF    MINUTO_EDITAR,F        ; PRIMERO SE VERIFICA SI SE PASO DE 00 A 59
    
    MOVLW   255			   ; ESTE VALOR HABRIA SI SE LE RESTA 1 A 0X00H 
    SUBWF   MINUTO_EDITAR,W
    BTFSS   STATUS,2               ; SI ES 1 SE SALTA
    GOTO    CORREGIR_BI_MINUTO_EDITAR
    
    MOVLW   01011001B              ; 59 EN BI
    MOVWF   MINUTO_EDITAR
    
    CORREGIR_BI_MINUTO_EDITAR:
    MOVLW   MINUTO_EDITAR
    MOVWF   FSR                    ; PASO POR REFERENCIA
    CALL    PASAR_B_DISMINUCION
    
    INCREMENTAR_MINUTE:            ; SE VERIFICA SI SE DEBE INCREMENTAR 
    GOTO    SALIR
    INCF    MINUTO_EDITAR,F        ; CORRECION DE BI CUANDO SE PASA DE X9 A (X+1)0
    MOVLW   MINUTO_EDITAR
    MOVWF   FSR                 
    CALL    PASAR_B_AUMENTO        ; VERIFICAR SI SE PASA DE 59 A 00
   
    MOVLW   01100000B              ; 60 EN BI
    SUBWF   MINUTO_EDITAR,W
    BTFSC   STATUS,2               ; SI DA 0 SE REINICIA
    CLRF    MINUTO_EDITAR
    
    GOTO    SALIR 
    
    EDIT_HOUR:                     ; SI HUBO UN FLANCO DE SUBIDA EN RB0 SE DECREMENTA EN 1 LAS HORAS
    BTFSS   BANDERAS_RB, 2         ; RB0
    GOTO    INCREMENTAR_HOUR
   
    DECF    HORA_EDITAR,F          ;SI HUBO UN FLANCO DE SUBIDA SE EN RB0 SE EJECUTA ESTO
    ;PRIMERO SE VERIFICA SI SE PASO DE 00 A 24
    MOVLW   255			   ; ESTE VALOR HABRIA SI SE LE RESTA 1 A 0X00H 
    SUBWF   HORA_EDITAR,W
    BTFSS   STATUS,2		   ; SI ES 1 SE SALTA
    GOTO    CORREGIR_BI_HORA_EDITAR
    
    MOVLW   00100011B		   ; 23 EN BI
    MOVWF   HORA_EDITAR
    
    CORREGIR_BI_HORA_EDITAR:       ; PASO POR REFERENCIA
    MOVLW   HORA_EDITAR
    MOVWF   FSR         
    CALL    PASAR_B_DISMINUCION
    
    INCREMENTAR_HOUR:		   ; SE VERIFICA SI SE DEBE INCREMENTAR
    BTFSS   BANDERAS_RB,3
    GOTO    SALIR
    INCF    HORA_EDITAR,F
    MOVLW   HORA_EDITAR
    MOVWF   FSR 
    CALL    PASAR_B_AUMENTO        ; VERIFICAR SI SE PASA DE 23 A 00

    MOVLW   00100100B              ; 24 EN BI
    SUBWF   HORA_EDITAR,W
    BTFSC   STATUS,2               ; SI DA 0 SE REINICIA
    CLRF    HORA_EDITAR

    SALIR:                         ; SALIDA SIN GUARDAR DATOS
    CALL    FLANCO_SUBIDA_RB5
    BTFSS   BANDERAS_RB,5 
    RETURN
    BCF	    BANDERAS_MODO,3	   ; SE DESHABILITA EL BIT DE VERIFICACION DE PRIMERA VEZ ENTRANDO A EDITAR HORA
    BCF	    BANDERAS_MODO,2	   ; SE COLOCA EN EDITAR MINUTO/MES 
    BCF	    BANDERAS_MODO,1	   ; SE DESHABILITA EL MODO DE EDICION
   
    MOVLW   INI_TMR1H              ; REINICIO DEL TMR1
    MOVWF   TMR1H
    MOVLW   INI_TMR1L
    MOVWF   TMR1L
    MOVLW   C_TMR1
    MOVWF   MODO_TMR1
    BCF	    T1CON,0		   ; SE APAGA EL TMR1
    RETURN 
    
EDITAR_FECHA:                      ; CUANDO SE ENTRA EN ESTE MODO RB2 REALIZA LA FUNCION DE SELECTOR DE EDICION DE HORA O MINUTO
    BTFSC   BANDERAS_MODO,3
    GOTO    SI_YA_SE_ENTRO_ANTES_FECHA
    BSF	    BANDERAS_MODO,3	   ; PARA QUE NO SE VUELVA A ENTRAR AQUI HASTA QUE SE SALGA DEL MODO EDICION
    MOVF    DIA,W
    MOVWF   DIA_EDITAR
    
    BSF	    T1CON,0		   ; SE ACTIVA EL TIMER 1
    
    MOVF    MES_DECI,W
    MOVWF   MES_DECI_EDITAR	   ; SE GUARDAN LOS VALORES EN EL INSTANTE QUE SE ENTRA AL MODO DE EDICION
   
    MOVF    MES_BIN,W
    MOVWF   MES_BIN_EDITAR
    MOVF    NUEVO_VALOR,W	   ; SE ACTUALIZAN ESTOS REGISTROS YA QUE SI NO SE HACE, AL SER LA CONDICION
    MOVWF   MANTENER_VALOR	   ; DE ENTRADA IGUAL QUE LA DE SALIDA, SOLO SE VA A EJECUTAR 1 VEZ
    CALL    DELAY_US		   ; DA TIEMPO A QUE LA SALIDA SE ESTABILICE
    MOVF    PORTB,W
    MOVWF   NUEVO_VALOR
    
    SI_YA_SE_ENTRO_ANTES_FECHA:
    BSF	    PORTE,2                 ; SE EVITA EL PARPADEO DE LOS LEDS DEL CENTRO 
    CALL    FLANCO_SUBIDA_RB0       ; SE REVISAN LOS FLANCOS DE SUBIDA
    CALL    FLANCO_SUBIDA_RB1       ; SE MIRA SI HUBO UN FLANCO EN AUMENTAR O DISMINUIR
    
    
    CALL    FLANCO_SUBIDA_RB2       ; SE VERIFICA QUE HAYA OCURRIDO FLANCO DE SUBIDA
    BTFSS   BANDERAS_RB,4	    ; FLANCO DE SUBIDA EN RB2
    GOTO    CAMBIAR_FECHA	    ; SE HACE EL CAMBIO DEL VALOR A EDITAR

    BTFSS   BANDERAS_MODO,2	    ; SE VE SI ESTA EN 1
    GOTO    CAMBIAR_1
    BCF	    BANDERAS_MODO,2	    ; SE  LIMPIA SI ESTA EN 1
    GOTO    CAMBIAR_FECHA
    
    CAMBIAR_1:			    ; SI NO ESTA EN 1 ESTA EN CERO ENTONCES 
    BSF	    BANDERAS_MODO,2 
    
  
    CAMBIAR_FECHA:
    CALL    TABLA_MESES		    ; SE GUARDA PARA SABER EL NUMERO MAXIMO DE DIAS EN EL MES SELECCIONADO
    MOVWF   DIA_MAX		    ; SE GUARDA EN DIA MAXIMO
    
    MOVF    DIA_MAX,W		    ; SE VERIFICA QUE EDITAR DIA NO SEA MAYOR QUE EL DIA ESTABLECIDO PARA EL MES
    SUBWF   DIA_EDITAR,W
    BTFSS   STATUS, 0		    ; SI C=1  QUIERE DECIR QUE DIA_MAX<= DIA_EDITAR Y ENTONCES SE CORRIGE
    GOTO    DECISION_FECHA
  
    DECF    DIA_MAX,W		    ; SI DIA_MAX <= DIA_EDITAR ENTONCES DIA_EDITAR=  DIA_MAX-1
    MOVWF   DIA_EDITAR 
    
    DECISION_FECHA:
    BTFSS   BANDERAS_MODO,2	    ; SE MIRA SI LO QUE SE DESEA EDITAR ES EL DIA O EL MES
    GOTO    EDIT_MONTH
    GOTO    EDIT_DAY
    
    EDIT_DAY:
    
    DECREMENTAR_DAY:		    ; SE COMPRUEBA QUE HAYA UN FLANCO DE SUBIDA EN RB0
    BTFSS    BANDERAS_RB,2	    ; FLANCO DE SUBIDA EN RB0 
    GOTO     INCREMENTAR_DAY	    ; SI HUBO UN FLANCO DE SUBIDA SE EN RB0 SE EJECUTA ESTO  DECREMENTAR 
    
    DECFSZ   DIA_EDITAR,F	    ; SI AL DECREMENTAR DA 0 ENTONCES HUBO UNDERFLOW
    GOTO     CORREGIR_BI_DIA_EDITAR
    
    DECF     DIA_MAX,W
    MOVWF    DIA_EDITAR
    
    CORREGIR_BI_DIA_EDITAR:	    ; PASO POR REFERENCIA
    MOVLW   DIA_EDITAR
    MOVWF   FSR 
    CALL    PASAR_B_DISMINUCION
    
    INCREMENTAR_DAY:		    ; SE VERIFICA SI SE DEBE INCREMENTAR(FLANCO DE SUBIDA EN RB1) 
    BTFSS   BANDERAS_RB,3
    GOTO    SALIR_FECHA
    INCF    DIA_EDITAR,F	    ; SI SE VERIFICA QUE SE DEBE INCREMENTAR SE EJECUTA ESTO
    MOVLW   DIA_EDITAR		    ; SE CORRIGE EL BI
    MOVWF   FSR			    ; PASO POR REFERENCIA
    CALL    PASAR_B_AUMENTO	    ;SE VERIFICA QUE NO SE HAYA PASADO DEL DIA MAXIMO PERMITIDO
    MOVF    DIA_MAX,W
    SUBWF   DIA_EDITAR,W
    BTFSS   STATUS,2		    ; Z=1 SI DIA_MAX = DIA_EDITAR    SE LIMPIAN LOS DIAS
    GOTO    SALIR_FECHA		    ; SE SALE DE LA RUTINA
    
    MOVLW   1
    MOVWF   DIA_EDITAR
    GOTO    SALIR_FECHA
    
    EDIT_MONTH:			    ; SE COMPRUEBA QUE HAYA UN FLANCO DE SUBIDA EN RB0 
    BTFSS   BANDERAS_RB,2
    GOTO    INCREMENTAR_MONTH
    
    DECF    MES_DECI_EDITAR,F	    ; SE DECREMENTA SI SE DETECTA UN FLANCO DE SUBIDA
    DECFSZ  MES_BIN_EDITAR,F	    ; SI DA CERO ES QUE HUBO UNDERFLOW Y SE COLOCA UN 1
    GOTO    CORREGIR_BI_MES_EDITAR
    
    MOVLW   12
    MOVWF   MES_BIN_EDITAR
    MOVLW   0x12		    ; 12 EN BI
    MOVWF   MES_DECI_EDITAR
    
    CORREGIR_BI_MES_EDITAR:
    MOVLW   MES_DECI_EDITAR
    MOVWF   FSR 
    CALL    PASAR_B_DISMINUCION
    
    INCREMENTAR_MONTH:		    ; SE VERIFICA SI SE DEBE INCREMENTAR(FLANCO DE SUBIDA EN RB1)
    BTFSS   BANDERAS_RB,3
    GOTO    SALIR_FECHA
    
    INCF    MES_DECI_EDITAR,F	    ; SI SE VERIFICA QUE SE DEBE INCREMENTAR SE EJECUTA ESTO
    INCF    MES_BIN_EDITAR,F
    MOVLW   13			    ; SE VERIFICA EL PASO DE 12 A 00 
    SUBWF   MES_BIN_EDITAR,W
    BTFSS   STATUS,2
    GOTO    CORREGIR_BI_MES_INCREMENTAR
    
    MOVLW   1
    MOVWF   MES_BIN_EDITAR
    MOVWF   MES_DECI_EDITAR
    
    CORREGIR_BI_MES_INCREMENTAR:
    MOVLW   MES_DECI_EDITAR
    MOVWF   FSR			    ; PASO POR REFERENCIA
    CALL    PASAR_B_AUMENTO	    ; LUEGO DE TODO SE LLEGA A ESTE PUNTO 
    
    SALIR_FECHA:		    ; SE VERIFICA QUE SI SE HA SALIDO SOLO PULSANDO EL BOTON (SALIDA SIN GUARDAR DATOS)
    CALL    FLANCO_SUBIDA_RB5	    ; SE VERIFICA QUE HAYA FLANCO DE SUBIDA EN RB5
    BTFSS   BANDERAS_RB,5 
    RETURN
   
    BCF	    BANDERAS_MODO,3	    ; SE DESHABILITA EL BIT DE VERIFICACION DE PRIMERA VEZ ENTRANDO A EDITAR HORA
    BCF	    BANDERAS_MODO,2	    ; SE COLOCA EN EDITAR MINUTO/DIA 
    BCF	    BANDERAS_MODO,1	    ; SE DESHABILITA EL MODO DE EDICION
    
    MOVLW   INI_TMR1H
    MOVWF   TMR1H
    MOVLW   INI_TMR1L
    MOVWF   TMR1L
    
    MOVLW   C_TMR1
    MOVWF   MODO_TMR1
    BCF	    T1CON,0		    ; SE APAGA EL TMR1
    
    RETURN

EDITAR_TEMPORIZADOR:		    ; CUANDO SE ENTRA EN ESTE MODO RB2 REALIZA LA FUNCION DE SELECTOR DE EDICION DE HORA O MINUTO
    
    
    BTFSC   BANDERAS_MODO,3	    ; RB5 DETERMINA CUANDO SE SALE DE ESTE MODO
    GOTO    SI_YA_SE_ENTRO_ANTES_TEMPORIZADOR ; SE ENTRA A ESTA PARTE SOLO CUANDO ES LA PRIMERA VEZ 
    BSF	    BANDERAS_MODO,3	    ; PARA QUE NO SE VUELVA A ENTRAR AQUI HASTA QUE SE SALGA DEL MODO EDICION
   
    MOVF    SEG_TIMER,W
    SUBLW   0			    ; SI ES CERO LO ANTERIOR Z=1 
    BTFSS   STATUS,2		    ; SE VERIFICA QUE LOS SEGUNDOS SEAN 0
    GOTO    IF_NOT_CERO		    ; YA QUE EL TIEMPO MINIMO PARA CONFIGURAR ES 1 SEGUNDO SE TIENE QUE VERIFICAR QUE EL TEMPORIZADOR
    
    MOVF    MIN_TIMER,W		    ; NUNCA SE COLOQUE EN 00 MINUTOS Y 00 SEGUNDOS AL EDITAR
    SUBLW   0			    ; UNICAMENTE SI W ES SERO Z=1
    BTFSS   STATUS,2		    ; SE VERIFICA QUE LOS MINUTOS SEAN 0
    GOTO    IF_NOT_CERO		    ; SI ES 0 MINUTOS Y 0 SEGUNDOS SE COLOCA EN 0 MINUTOS Y 1 SEGUNDO
    
    MOVLW   1
    MOVWF   SEG_TIMER_CONFIG
    GOTO    CONTINUE
    
    IF_NOT_CERO:
    MOVF    SEG_TIMER,W
    MOVWF   SEG_TIMER_CONFIG
    
    CONTINUE:
    BSF	    T1CON,0		    ; SE ACTIVA EL TIMER 1
    
    MOVF    MIN_TIMER,W
    MOVWF   MIN_TIMER_CONFIG	    ; SE GUARDAN LOS VALORES EN EL INSTANTE QUE SE ENTRA AL MODO DE EDICION
   
    MOVF    NUEVO_VALOR,W	    ; SE ACTUALIZAN ESTOS REGISTROS YA QUE SI NO SE HACE, AL SER LA CONDICION
    MOVWF   MANTENER_VALOR	    ; DE ENTRADA IGUAL QUE LA DE SALIDA, SOLO SE VA A EJECUTAR 1 VEZ
    CALL    DELAY_US		    ; DA TIEMPO A QUE LA SALIDA SE ESTABILICE
    MOVF    PORTB,W
    MOVWF   NUEVO_VALOR
    ;-----------------------------------------------------------------------------------------------------------------------------------
    SI_YA_SE_ENTRO_ANTES_TEMPORIZADOR:    ; SE EVITA EL PARPADEO DE LOS LEDS DEL CENTRO
    BSF	    PORTE,2			  ; SE HACE EL CAMBIO ENTRE 0 O 1 PARA EL VALOR A EDITAR (SE VERIFICA QUE HAYA OCURRIDO FLANCO DE SUBIDA)
    CALL    FLANCO_SUBIDA_RB0
    CALL    FLANCO_SUBIDA_RB1
    CALL    FLANCO_SUBIDA_RB2
    BTFSS   BANDERAS_RB,4 
    GOTO    CAMBIAR_TEMPORIZADOR          ; SE HACE EL CAMBIO DEL VALOR A EDITAR 
    BTFSS   BANDERAS_MODO,2		  ; SE VE SI ESTA EN 1
    GOTO    CAMBIAR_0_TEMPORIZADOR
    
    BCF	    BANDERAS_MODO,2		  ; SE  LIMPIA SI ESTA EN 1
    GOTO    CAMBIAR_TEMPORIZADOR
    
    CAMBIAR_0_TEMPORIZADOR:		  ; SI NO ESTA EN 1 ESTA EN CERO ENTONCES 
    BSF	    BANDERAS_MODO,2 
    
    CAMBIAR_TEMPORIZADOR:
    BTFSC   BANDERAS_MODO,2		  ; SE VE SI LA EDICION ESTA EN HORAS(1) O MINUTOS(0)
    GOTO    EDIT_MINUTE_TEMPORIZADOR
 
    EDIT_SECOND:			  ; SE VERIFICA SI SE DEBE DECREMENTAR
    
    DECREMENTAR_SECOND:
    BTFSS   BANDERAS_RB,2 
    GOTO    INCREMENTAR_SECOND
   
    DECF    SEG_TIMER_CONFIG,F		  ; SI HUBO UN FLANCO DE SUBIDA SE EN RB0 SE EJECUTA ESTO  DECREMENTAR 
    MOVF    MIN_TIMER_CONFIG,W            ; SE VERIFICA SI MIN_TIMER_CONFIG ES DIFERENCE DE CERO
    SUBLW   0				  ; SOLO SI ES 0 Z=1 
    BTFSS   STATUS,2 
    GOTO     CORREGIR_BI_TEMP_SEG_DEC
   
    MOVF    SEG_TIMER_CONFIG,W		   ; SI MINUTOS ES CERO SE EJECUTA ESTO  
    SUBLW   0				   ; SI ESTO DA CERO ENTONCES SE COLOCA EN 59 
    BTFSS   STATUS,2
    GOTO    CORREGIR_BI_TEMP_SEG_DEC
    
    MOVLW   01011001B			   ; 59 EN BI
    MOVWF   SEG_TIMER_CONFIG
    
    CORREGIR_BI_TEMP_SEG_DEC:		   ; PRIMERO SE VERIFICA SI SE PASO DE 00 A 59
    MOVLW   255				   ; ESTE VALOR HABRIA SI SE LE RESTA 1 A 0X00H 
    SUBWF   SEG_TIMER_CONFIG,W
    BTFSS   STATUS,2			   ; SI ES 1 SE SALTA EL GOTO
    GOTO    CORREGIR_BI_SEGUNDO_TEMPORIZADOR_EDITAR
    
    MOVLW   01011001B			   ; 59 EN BI
    MOVWF   SEG_TIMER_CONFIG
    
    CORREGIR_BI_SEGUNDO_TEMPORIZADOR_EDITAR:
    MOVLW   SEG_TIMER_CONFIG
    MOVWF   FSR 
    CALL    PASAR_B_DISMINUCION
    
    INCREMENTAR_SECOND:			   ; SE VERIFICA SI SE DEBE INCREMENTAR 
    BTFSS   BANDERAS_RB,3 
    GOTO    SALIR_TEMPORIZADOR
    INCF    SEG_TIMER_CONFIG,F
    
    MOVF    MIN_TIMER_CONFIG,W		   ; SE VERIFICA SI MIN_TIMER_CONFIG ES DIFERENCE DE CERO
    SUBLW   0				   ; SOLO SI ES 0 Z=1 
    BTFSS   STATUS,2 
    GOTO CORREGIR_BI_TEMP_SEG_INC
    
    MOVF    SEG_TIMER_CONFIG,W		   ; SI MINUTOS ES CERO SE EJECUTA ESTO 
    SUBLW   01011010B			   ; SI ESTO DA CERO
    BTFSS   STATUS,2
    GOTO    CORREGIR_BI_TEMP_SEG_INC
    
    MOVLW   1 
    MOVWF   SEG_TIMER_CONFIG
    
    CORREGIR_BI_TEMP_SEG_INC:
    MOVLW   SEG_TIMER_CONFIG
    MOVWF   FSR 
    CALL    PASAR_B_AUMENTO

    VERIFICAR_OVERFLOW_SEGUNDOS_TEMPORIZADOR_EDITAR:
    MOVLW   01100000B			    ; 60 EN BI
    SUBWF   SEG_TIMER_CONFIG,W
    BTFSC   STATUS,2			    ; SI DA 0 SE REINICIA
    CLRF    SEG_TIMER_CONFIG
    
    GOTO    SALIR_TEMPORIZADOR
    
    EDIT_MINUTE_TEMPORIZADOR:		    ; CADA VEZ QUE SE ENTRA AQUI SE VERIFICA SI SEGUNDOS ES 0 PARA ESTABLECER EL TIEMPO MINIMO
    MOVLW   0
    SUBWF   SEG_TIMER_CONFIG,W
    BTFSS   STATUS,2 
    GOTO    VER_PORTB			    ; SI SEG_HORA ES 0 ENTONCES SE VERIFICA QUE MINUTOS SEA 0 
    MOVLW   0
    SUBWF   MIN_TIMER_CONFIG,W
    BTFSS   STATUS,2 
    GOTO    VER_PORTB			    ; SI SE LLEGA HASTA AQUI ENTONCES ES QUE SE DEBE CORREGIR PARA NO DAR ESTADO DE PONER 0 MIN 0 SEG
    MOVLW   1
    MOVWF   SEG_TIMER_CONFIG
    
    VER_PORTB:				    ; SE VERIFICA SI SE DEBE DECREMENTAR
    BTFSS   BANDERAS_RB,2 
    GOTO    INCREMENTAR_MINUTE_TEMPORIZADOR
    DECF    MIN_TIMER_CONFIG,F
    MOVLW   255				    ; ESTE VALOR HABRIA SI SE LE RESTA 1 A 0X00H 
    SUBWF   MIN_TIMER_CONFIG,W
    BTFSS   STATUS,2			    ; SI ES 1 SE SALTA EL GOTO
    GOTO    CORREGIR_B_MINUTOS_TEMPORIZADOR_EDITAR
    
    MOVLW   10011001B ;99 EN BI
    MOVWF   MIN_TIMER_CONFIG
    
    CORREGIR_B_MINUTOS_TEMPORIZADOR_EDITAR:
    MOVLW   MIN_TIMER_CONFIG
    MOVWF   FSR ;PASO POR REFERENCIA
    CALL    PASAR_B_DISMINUCION
    
    INCREMENTAR_MINUTE_TEMPORIZADOR:
    BTFSS   BANDERAS_RB,3 
    GOTO    SALIR_TEMPORIZADOR		    ; SI SE LLEGA HASTA AQUI ES QUE SE DEBIA INCREMENTAR ----------------------
    INCF    MIN_TIMER_CONFIG,F
    MOVLW   MIN_TIMER_CONFIG
    MOVWF   FSR 
    CALL    PASAR_B_AUMENTO		    ; VERIFICAR SI SE PASA DE 99 A 00
    MOVLW   10100000B
    SUBWF   MIN_TIMER_CONFIG,W
    BTFSC   STATUS,2			    ; SI DA 0 SE REINICIA
    CLRF    MIN_TIMER_CONFIG
   
    SALIR_TEMPORIZADOR:			    ; SE VERIFICA QUE SI SE HA SALIDO SOLO PULSANDO EL BOTON (SALIDA SIN GUARDAR DATOS)
    CALL    FLANCO_SUBIDA_RB5
    BTFSS   BANDERAS_RB,5
    RETURN
    BCF	    BANDERAS_MODO,3		    ; SE DESHABILITA EL BIT DE VERIFICACION DE PRIMERA VEZ ENTRANDO A EDITAR HORA
    BCF	    BANDERAS_MODO,2		    ; SE COLOCA EN EDITAR MINUTO/DIA 
    BCF	    BANDERAS_MODO,1		    ; SE DESHABILITA EL MODO DE EDICION
    
    MOVLW   INI_TMR1H
    MOVWF   TMR1H
    MOVLW   INI_TMR1L
    MOVWF   TMR1L
    
    MOVLW   C_TMR1
    MOVWF   MODO_TMR1
    BCF	    T1CON,0			    ; SE APAGA EL TMR1
    
    RETURN 
    
; EN ESTA SECCION DEL CODIGO SE ENCUENTRAN RUTINAS QUE SE ENCARGAN REGISTRAR LA INTERACCION CON LAS ENTRADAS EXTERIORES AL PIC, COMO PULSACIONES DE BOTONES
 
FLANCO_SUBIDA_RB0:			    ; SE DETECTA UN FLANCO DE SUBIDA EN RB0
    BCF	    BANDERAS_RB,2		    ; SE LIMPIA PARA QUE NO SE TENGA QUE HACER DEFORMA EXTERNA
    BTFSC   MANTENER_VALOR,0
    RETURN				    ; SI SE EJECUTA ESTO ES QUE ESTA EN 1 O HUBO FLANCO DE BAJADA
    
    BTFSC   NUEVO_VALOR,0
    BSF	    BANDERAS_RB, 2		    ; SI SE EJECUTA ESTO ES QUE SI HUBO FLANCO DE SUBIDA
    RETURN
    
FLANCO_SUBIDA_RB1:			    ; SE DETECTA UN FLANCO DE SUBIDA EN RB0
    BCF	    BANDERAS_RB,3		    ; SE LIMPIA PARA QUE NO SE TENGA QUE HACER DEFORMA EXTERNA
    BTFSC   MANTENER_VALOR,1
    RETURN				    ; SI SE EJECUTA ESTO ES QUE ESTA EN 1 O HUBO FLANCO DE BAJADA
    
    BTFSC   NUEVO_VALOR,1
    BSF	    BANDERAS_RB, 3		    ; SI SE EJECUTA ESTO ES QUE SI HUBO FLANCO DE SUBIDA
    RETURN
    
FLANCO_SUBIDA_RB2:			    ; SE DETECTA UN FLANCO DE SUBIDA EN RB0
    BCF	    BANDERAS_RB,4		    ; SE LIMPIA PARA QUE NO SE TENGA QUE HACER DEFORMA EXTERNA
    BTFSC   MANTENER_VALOR,2
    RETURN				    ; SI SE EJECUTA ESTO ES QUE ESTA EN 1 O HUBO FLANCO DE BAJADA
    
    BTFSC   NUEVO_VALOR,2
    BSF	    BANDERAS_RB, 4		    ; SI SE EJECUTA ESTO ES QUE SI HUBO FLANCO DE SUBIDA
    RETURN
    
FLANCO_SUBIDA_RB5:			    ; SE DETECTA UN FLANCO DE SUBIDA EN RB0
    BCF	    BANDERAS_RB,5		    ; SE LIMPIA PARA QUE NO SE TENGA QUE HACER DEFORMA EXTERNA
    BTFSC   MANTENER_VALOR,5
    RETURN				    ; SI SE EJECUTA ESTO ES QUE ESTA EN 1 O HUBO FLANCO DE BAJADA
    
    BTFSC   NUEVO_VALOR,5
    BSF	    BANDERAS_RB, 5		    ; SI SE EJECUTA ESTO ES QUE SI HUBO FLANCO DE SUBIDA
    RETURN
    
DELAY_MS:				    ; RETARDO DE 1mS
    MOVLW   2
    MOVWF   DELAY_LARGO
    
REPITE:
    CALL    DELAY_US
    DECFSZ  DELAY_LARGO
    GOTO    REPITE
    RETURN
    
DELAY_US:				;RETARDO DE 500 uS
    MOVLW   166
    MOVWF   DELAY_CORTO
    DECFSZ  DELAY_CORTO, F
    GOTO $-1
    RETURN
    END


