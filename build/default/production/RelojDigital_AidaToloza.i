# 1 "RelojDigital_AidaToloza.s"
# 1 "<built-in>" 1
# 1 "RelojDigital_AidaToloza.s" 2
; Archivo: intento3.s
; Dispositivo: PIC16F887
; Autor: Aida Toloza
; Copilador: pic-as (v2.30), MPLABX v5.40
;
; Programa: Reloj digital
; Hardware: 4 display de 7 segmentos, con 4 pushbutton y 5 leds.
;
; Creado: 10 de marzo , 2022
; Última modificación: 19 marzo, 2022

PROCESSOR 16F887

# 1 "C:\\Program Files\\Microchip\\xc8\\v2.35\\pic\\include\\xc.inc" 1 3






# 1 "C:\\Program Files\\Microchip\\xc8\\v2.35\\pic\\include\\pic.inc" 1 3



# 1 "C:\\Program Files\\Microchip\\xc8\\v2.35\\pic\\include\\pic_as_chip_select.inc" 1 3
# 2774 "C:\\Program Files\\Microchip\\xc8\\v2.35\\pic\\include\\pic_as_chip_select.inc" 3
# 1 "C:\\Program Files\\Microchip\\xc8\\v2.35\\pic\\include\\proc\\pic16f887.inc" 1 3
# 48 "C:\\Program Files\\Microchip\\xc8\\v2.35\\pic\\include\\proc\\pic16f887.inc" 3
INDF equ 0000h



TMR0 equ 0001h



PCL equ 0002h



STATUS equ 0003h

STATUS_C_POSN equ 0000h
STATUS_C_POSITION equ 0000h
STATUS_C_SIZE equ 0001h
STATUS_C_LENGTH equ 0001h
STATUS_C_MASK equ 0001h
STATUS_DC_POSN equ 0001h
STATUS_DC_POSITION equ 0001h
STATUS_DC_SIZE equ 0001h
STATUS_DC_LENGTH equ 0001h
STATUS_DC_MASK equ 0002h
STATUS_Z_POSN equ 0002h
STATUS_Z_POSITION equ 0002h
STATUS_Z_SIZE equ 0001h
STATUS_Z_LENGTH equ 0001h
STATUS_Z_MASK equ 0004h
STATUS_nPD_POSN equ 0003h
STATUS_nPD_POSITION equ 0003h
STATUS_nPD_SIZE equ 0001h
STATUS_nPD_LENGTH equ 0001h
STATUS_nPD_MASK equ 0008h
STATUS_nTO_POSN equ 0004h
STATUS_nTO_POSITION equ 0004h
STATUS_nTO_SIZE equ 0001h
STATUS_nTO_LENGTH equ 0001h
STATUS_nTO_MASK equ 0010h
STATUS_RP_POSN equ 0005h
STATUS_RP_POSITION equ 0005h
STATUS_RP_SIZE equ 0002h
STATUS_RP_LENGTH equ 0002h
STATUS_RP_MASK equ 0060h
STATUS_IRP_POSN equ 0007h
STATUS_IRP_POSITION equ 0007h
STATUS_IRP_SIZE equ 0001h
STATUS_IRP_LENGTH equ 0001h
STATUS_IRP_MASK equ 0080h
STATUS_RP0_POSN equ 0005h
STATUS_RP0_POSITION equ 0005h
STATUS_RP0_SIZE equ 0001h
STATUS_RP0_LENGTH equ 0001h
STATUS_RP0_MASK equ 0020h
STATUS_RP1_POSN equ 0006h
STATUS_RP1_POSITION equ 0006h
STATUS_RP1_SIZE equ 0001h
STATUS_RP1_LENGTH equ 0001h
STATUS_RP1_MASK equ 0040h
STATUS_CARRY_POSN equ 0000h
STATUS_CARRY_POSITION equ 0000h
STATUS_CARRY_SIZE equ 0001h
STATUS_CARRY_LENGTH equ 0001h
STATUS_CARRY_MASK equ 0001h
STATUS_ZERO_POSN equ 0002h
STATUS_ZERO_POSITION equ 0002h
STATUS_ZERO_SIZE equ 0001h
STATUS_ZERO_LENGTH equ 0001h
STATUS_ZERO_MASK equ 0004h



FSR equ 0004h



PORTA equ 0005h

PORTA_RA0_POSN equ 0000h
PORTA_RA0_POSITION equ 0000h
PORTA_RA0_SIZE equ 0001h
PORTA_RA0_LENGTH equ 0001h
PORTA_RA0_MASK equ 0001h
PORTA_RA1_POSN equ 0001h
PORTA_RA1_POSITION equ 0001h
PORTA_RA1_SIZE equ 0001h
PORTA_RA1_LENGTH equ 0001h
PORTA_RA1_MASK equ 0002h
PORTA_RA2_POSN equ 0002h
PORTA_RA2_POSITION equ 0002h
PORTA_RA2_SIZE equ 0001h
PORTA_RA2_LENGTH equ 0001h
PORTA_RA2_MASK equ 0004h
PORTA_RA3_POSN equ 0003h
PORTA_RA3_POSITION equ 0003h
PORTA_RA3_SIZE equ 0001h
PORTA_RA3_LENGTH equ 0001h
PORTA_RA3_MASK equ 0008h
PORTA_RA4_POSN equ 0004h
PORTA_RA4_POSITION equ 0004h
PORTA_RA4_SIZE equ 0001h
PORTA_RA4_LENGTH equ 0001h
PORTA_RA4_MASK equ 0010h
PORTA_RA5_POSN equ 0005h
PORTA_RA5_POSITION equ 0005h
PORTA_RA5_SIZE equ 0001h
PORTA_RA5_LENGTH equ 0001h
PORTA_RA5_MASK equ 0020h
PORTA_RA6_POSN equ 0006h
PORTA_RA6_POSITION equ 0006h
PORTA_RA6_SIZE equ 0001h
PORTA_RA6_LENGTH equ 0001h
PORTA_RA6_MASK equ 0040h
PORTA_RA7_POSN equ 0007h
PORTA_RA7_POSITION equ 0007h
PORTA_RA7_SIZE equ 0001h
PORTA_RA7_LENGTH equ 0001h
PORTA_RA7_MASK equ 0080h



PORTB equ 0006h

PORTB_RB0_POSN equ 0000h
PORTB_RB0_POSITION equ 0000h
PORTB_RB0_SIZE equ 0001h
PORTB_RB0_LENGTH equ 0001h
PORTB_RB0_MASK equ 0001h
PORTB_RB1_POSN equ 0001h
PORTB_RB1_POSITION equ 0001h
PORTB_RB1_SIZE equ 0001h
PORTB_RB1_LENGTH equ 0001h
PORTB_RB1_MASK equ 0002h
PORTB_RB2_POSN equ 0002h
PORTB_RB2_POSITION equ 0002h
PORTB_RB2_SIZE equ 0001h
PORTB_RB2_LENGTH equ 0001h
PORTB_RB2_MASK equ 0004h
PORTB_RB3_POSN equ 0003h
PORTB_RB3_POSITION equ 0003h
PORTB_RB3_SIZE equ 0001h
PORTB_RB3_LENGTH equ 0001h
PORTB_RB3_MASK equ 0008h
PORTB_RB4_POSN equ 0004h
PORTB_RB4_POSITION equ 0004h
PORTB_RB4_SIZE equ 0001h
PORTB_RB4_LENGTH equ 0001h
PORTB_RB4_MASK equ 0010h
PORTB_RB5_POSN equ 0005h
PORTB_RB5_POSITION equ 0005h
PORTB_RB5_SIZE equ 0001h
PORTB_RB5_LENGTH equ 0001h
PORTB_RB5_MASK equ 0020h
PORTB_RB6_POSN equ 0006h
PORTB_RB6_POSITION equ 0006h
PORTB_RB6_SIZE equ 0001h
PORTB_RB6_LENGTH equ 0001h
PORTB_RB6_MASK equ 0040h
PORTB_RB7_POSN equ 0007h
PORTB_RB7_POSITION equ 0007h
PORTB_RB7_SIZE equ 0001h
PORTB_RB7_LENGTH equ 0001h
PORTB_RB7_MASK equ 0080h



PORTC equ 0007h

PORTC_RC0_POSN equ 0000h
PORTC_RC0_POSITION equ 0000h
PORTC_RC0_SIZE equ 0001h
PORTC_RC0_LENGTH equ 0001h
PORTC_RC0_MASK equ 0001h
PORTC_RC1_POSN equ 0001h
PORTC_RC1_POSITION equ 0001h
PORTC_RC1_SIZE equ 0001h
PORTC_RC1_LENGTH equ 0001h
PORTC_RC1_MASK equ 0002h
PORTC_RC2_POSN equ 0002h
PORTC_RC2_POSITION equ 0002h
PORTC_RC2_SIZE equ 0001h
PORTC_RC2_LENGTH equ 0001h
PORTC_RC2_MASK equ 0004h
PORTC_RC3_POSN equ 0003h
PORTC_RC3_POSITION equ 0003h
PORTC_RC3_SIZE equ 0001h
PORTC_RC3_LENGTH equ 0001h
PORTC_RC3_MASK equ 0008h
PORTC_RC4_POSN equ 0004h
PORTC_RC4_POSITION equ 0004h
PORTC_RC4_SIZE equ 0001h
PORTC_RC4_LENGTH equ 0001h
PORTC_RC4_MASK equ 0010h
PORTC_RC5_POSN equ 0005h
PORTC_RC5_POSITION equ 0005h
PORTC_RC5_SIZE equ 0001h
PORTC_RC5_LENGTH equ 0001h
PORTC_RC5_MASK equ 0020h
PORTC_RC6_POSN equ 0006h
PORTC_RC6_POSITION equ 0006h
PORTC_RC6_SIZE equ 0001h
PORTC_RC6_LENGTH equ 0001h
PORTC_RC6_MASK equ 0040h
PORTC_RC7_POSN equ 0007h
PORTC_RC7_POSITION equ 0007h
PORTC_RC7_SIZE equ 0001h
PORTC_RC7_LENGTH equ 0001h
PORTC_RC7_MASK equ 0080h



PORTD equ 0008h

PORTD_RD0_POSN equ 0000h
PORTD_RD0_POSITION equ 0000h
PORTD_RD0_SIZE equ 0001h
PORTD_RD0_LENGTH equ 0001h
PORTD_RD0_MASK equ 0001h
PORTD_RD1_POSN equ 0001h
PORTD_RD1_POSITION equ 0001h
PORTD_RD1_SIZE equ 0001h
PORTD_RD1_LENGTH equ 0001h
PORTD_RD1_MASK equ 0002h
PORTD_RD2_POSN equ 0002h
PORTD_RD2_POSITION equ 0002h
PORTD_RD2_SIZE equ 0001h
PORTD_RD2_LENGTH equ 0001h
PORTD_RD2_MASK equ 0004h
PORTD_RD3_POSN equ 0003h
PORTD_RD3_POSITION equ 0003h
PORTD_RD3_SIZE equ 0001h
PORTD_RD3_LENGTH equ 0001h
PORTD_RD3_MASK equ 0008h
PORTD_RD4_POSN equ 0004h
PORTD_RD4_POSITION equ 0004h
PORTD_RD4_SIZE equ 0001h
PORTD_RD4_LENGTH equ 0001h
PORTD_RD4_MASK equ 0010h
PORTD_RD5_POSN equ 0005h
PORTD_RD5_POSITION equ 0005h
PORTD_RD5_SIZE equ 0001h
PORTD_RD5_LENGTH equ 0001h
PORTD_RD5_MASK equ 0020h
PORTD_RD6_POSN equ 0006h
PORTD_RD6_POSITION equ 0006h
PORTD_RD6_SIZE equ 0001h
PORTD_RD6_LENGTH equ 0001h
PORTD_RD6_MASK equ 0040h
PORTD_RD7_POSN equ 0007h
PORTD_RD7_POSITION equ 0007h
PORTD_RD7_SIZE equ 0001h
PORTD_RD7_LENGTH equ 0001h
PORTD_RD7_MASK equ 0080h



PORTE equ 0009h

PORTE_RE0_POSN equ 0000h
PORTE_RE0_POSITION equ 0000h
PORTE_RE0_SIZE equ 0001h
PORTE_RE0_LENGTH equ 0001h
PORTE_RE0_MASK equ 0001h
PORTE_RE1_POSN equ 0001h
PORTE_RE1_POSITION equ 0001h
PORTE_RE1_SIZE equ 0001h
PORTE_RE1_LENGTH equ 0001h
PORTE_RE1_MASK equ 0002h
PORTE_RE2_POSN equ 0002h
PORTE_RE2_POSITION equ 0002h
PORTE_RE2_SIZE equ 0001h
PORTE_RE2_LENGTH equ 0001h
PORTE_RE2_MASK equ 0004h
PORTE_RE3_POSN equ 0003h
PORTE_RE3_POSITION equ 0003h
PORTE_RE3_SIZE equ 0001h
PORTE_RE3_LENGTH equ 0001h
PORTE_RE3_MASK equ 0008h



PCLATH equ 000Ah



INTCON equ 000Bh

INTCON_RBIF_POSN equ 0000h
INTCON_RBIF_POSITION equ 0000h
INTCON_RBIF_SIZE equ 0001h
INTCON_RBIF_LENGTH equ 0001h
INTCON_RBIF_MASK equ 0001h
INTCON_INTF_POSN equ 0001h
INTCON_INTF_POSITION equ 0001h
INTCON_INTF_SIZE equ 0001h
INTCON_INTF_LENGTH equ 0001h
INTCON_INTF_MASK equ 0002h
INTCON_T0IF_POSN equ 0002h
INTCON_T0IF_POSITION equ 0002h
INTCON_T0IF_SIZE equ 0001h
INTCON_T0IF_LENGTH equ 0001h
INTCON_T0IF_MASK equ 0004h
INTCON_RBIE_POSN equ 0003h
INTCON_RBIE_POSITION equ 0003h
INTCON_RBIE_SIZE equ 0001h
INTCON_RBIE_LENGTH equ 0001h
INTCON_RBIE_MASK equ 0008h
INTCON_INTE_POSN equ 0004h
INTCON_INTE_POSITION equ 0004h
INTCON_INTE_SIZE equ 0001h
INTCON_INTE_LENGTH equ 0001h
INTCON_INTE_MASK equ 0010h
INTCON_T0IE_POSN equ 0005h
INTCON_T0IE_POSITION equ 0005h
INTCON_T0IE_SIZE equ 0001h
INTCON_T0IE_LENGTH equ 0001h
INTCON_T0IE_MASK equ 0020h
INTCON_PEIE_POSN equ 0006h
INTCON_PEIE_POSITION equ 0006h
INTCON_PEIE_SIZE equ 0001h
INTCON_PEIE_LENGTH equ 0001h
INTCON_PEIE_MASK equ 0040h
INTCON_GIE_POSN equ 0007h
INTCON_GIE_POSITION equ 0007h
INTCON_GIE_SIZE equ 0001h
INTCON_GIE_LENGTH equ 0001h
INTCON_GIE_MASK equ 0080h
INTCON_TMR0IF_POSN equ 0002h
INTCON_TMR0IF_POSITION equ 0002h
INTCON_TMR0IF_SIZE equ 0001h
INTCON_TMR0IF_LENGTH equ 0001h
INTCON_TMR0IF_MASK equ 0004h
INTCON_TMR0IE_POSN equ 0005h
INTCON_TMR0IE_POSITION equ 0005h
INTCON_TMR0IE_SIZE equ 0001h
INTCON_TMR0IE_LENGTH equ 0001h
INTCON_TMR0IE_MASK equ 0020h



PIR1 equ 000Ch

PIR1_TMR1IF_POSN equ 0000h
PIR1_TMR1IF_POSITION equ 0000h
PIR1_TMR1IF_SIZE equ 0001h
PIR1_TMR1IF_LENGTH equ 0001h
PIR1_TMR1IF_MASK equ 0001h
PIR1_TMR2IF_POSN equ 0001h
PIR1_TMR2IF_POSITION equ 0001h
PIR1_TMR2IF_SIZE equ 0001h
PIR1_TMR2IF_LENGTH equ 0001h
PIR1_TMR2IF_MASK equ 0002h
PIR1_CCP1IF_POSN equ 0002h
PIR1_CCP1IF_POSITION equ 0002h
PIR1_CCP1IF_SIZE equ 0001h
PIR1_CCP1IF_LENGTH equ 0001h
PIR1_CCP1IF_MASK equ 0004h
PIR1_SSPIF_POSN equ 0003h
PIR1_SSPIF_POSITION equ 0003h
PIR1_SSPIF_SIZE equ 0001h
PIR1_SSPIF_LENGTH equ 0001h
PIR1_SSPIF_MASK equ 0008h
PIR1_TXIF_POSN equ 0004h
PIR1_TXIF_POSITION equ 0004h
PIR1_TXIF_SIZE equ 0001h
PIR1_TXIF_LENGTH equ 0001h
PIR1_TXIF_MASK equ 0010h
PIR1_RCIF_POSN equ 0005h
PIR1_RCIF_POSITION equ 0005h
PIR1_RCIF_SIZE equ 0001h
PIR1_RCIF_LENGTH equ 0001h
PIR1_RCIF_MASK equ 0020h
PIR1_ADIF_POSN equ 0006h
PIR1_ADIF_POSITION equ 0006h
PIR1_ADIF_SIZE equ 0001h
PIR1_ADIF_LENGTH equ 0001h
PIR1_ADIF_MASK equ 0040h



PIR2 equ 000Dh

PIR2_CCP2IF_POSN equ 0000h
PIR2_CCP2IF_POSITION equ 0000h
PIR2_CCP2IF_SIZE equ 0001h
PIR2_CCP2IF_LENGTH equ 0001h
PIR2_CCP2IF_MASK equ 0001h
PIR2_ULPWUIF_POSN equ 0002h
PIR2_ULPWUIF_POSITION equ 0002h
PIR2_ULPWUIF_SIZE equ 0001h
PIR2_ULPWUIF_LENGTH equ 0001h
PIR2_ULPWUIF_MASK equ 0004h
PIR2_BCLIF_POSN equ 0003h
PIR2_BCLIF_POSITION equ 0003h
PIR2_BCLIF_SIZE equ 0001h
PIR2_BCLIF_LENGTH equ 0001h
PIR2_BCLIF_MASK equ 0008h
PIR2_EEIF_POSN equ 0004h
PIR2_EEIF_POSITION equ 0004h
PIR2_EEIF_SIZE equ 0001h
PIR2_EEIF_LENGTH equ 0001h
PIR2_EEIF_MASK equ 0010h
PIR2_C1IF_POSN equ 0005h
PIR2_C1IF_POSITION equ 0005h
PIR2_C1IF_SIZE equ 0001h
PIR2_C1IF_LENGTH equ 0001h
PIR2_C1IF_MASK equ 0020h
PIR2_C2IF_POSN equ 0006h
PIR2_C2IF_POSITION equ 0006h
PIR2_C2IF_SIZE equ 0001h
PIR2_C2IF_LENGTH equ 0001h
PIR2_C2IF_MASK equ 0040h
PIR2_OSFIF_POSN equ 0007h
PIR2_OSFIF_POSITION equ 0007h
PIR2_OSFIF_SIZE equ 0001h
PIR2_OSFIF_LENGTH equ 0001h
PIR2_OSFIF_MASK equ 0080h



TMR1L equ 000Eh



TMR1H equ 000Fh



T1CON equ 0010h

T1CON_TMR1ON_POSN equ 0000h
T1CON_TMR1ON_POSITION equ 0000h
T1CON_TMR1ON_SIZE equ 0001h
T1CON_TMR1ON_LENGTH equ 0001h
T1CON_TMR1ON_MASK equ 0001h
T1CON_TMR1CS_POSN equ 0001h
T1CON_TMR1CS_POSITION equ 0001h
T1CON_TMR1CS_SIZE equ 0001h
T1CON_TMR1CS_LENGTH equ 0001h
T1CON_TMR1CS_MASK equ 0002h
T1CON_nT1SYNC_POSN equ 0002h
T1CON_nT1SYNC_POSITION equ 0002h
T1CON_nT1SYNC_SIZE equ 0001h
T1CON_nT1SYNC_LENGTH equ 0001h
T1CON_nT1SYNC_MASK equ 0004h
T1CON_T1OSCEN_POSN equ 0003h
T1CON_T1OSCEN_POSITION equ 0003h
T1CON_T1OSCEN_SIZE equ 0001h
T1CON_T1OSCEN_LENGTH equ 0001h
T1CON_T1OSCEN_MASK equ 0008h
T1CON_T1CKPS_POSN equ 0004h
T1CON_T1CKPS_POSITION equ 0004h
T1CON_T1CKPS_SIZE equ 0002h
T1CON_T1CKPS_LENGTH equ 0002h
T1CON_T1CKPS_MASK equ 0030h
T1CON_TMR1GE_POSN equ 0006h
T1CON_TMR1GE_POSITION equ 0006h
T1CON_TMR1GE_SIZE equ 0001h
T1CON_TMR1GE_LENGTH equ 0001h
T1CON_TMR1GE_MASK equ 0040h
T1CON_T1GINV_POSN equ 0007h
T1CON_T1GINV_POSITION equ 0007h
T1CON_T1GINV_SIZE equ 0001h
T1CON_T1GINV_LENGTH equ 0001h
T1CON_T1GINV_MASK equ 0080h
T1CON_T1INSYNC_POSN equ 0002h
T1CON_T1INSYNC_POSITION equ 0002h
T1CON_T1INSYNC_SIZE equ 0001h
T1CON_T1INSYNC_LENGTH equ 0001h
T1CON_T1INSYNC_MASK equ 0004h
T1CON_T1CKPS0_POSN equ 0004h
T1CON_T1CKPS0_POSITION equ 0004h
T1CON_T1CKPS0_SIZE equ 0001h
T1CON_T1CKPS0_LENGTH equ 0001h
T1CON_T1CKPS0_MASK equ 0010h
T1CON_T1CKPS1_POSN equ 0005h
T1CON_T1CKPS1_POSITION equ 0005h
T1CON_T1CKPS1_SIZE equ 0001h
T1CON_T1CKPS1_LENGTH equ 0001h
T1CON_T1CKPS1_MASK equ 0020h
T1CON_T1GIV_POSN equ 0007h
T1CON_T1GIV_POSITION equ 0007h
T1CON_T1GIV_SIZE equ 0001h
T1CON_T1GIV_LENGTH equ 0001h
T1CON_T1GIV_MASK equ 0080h
T1CON_T1SYNC_POSN equ 0002h
T1CON_T1SYNC_POSITION equ 0002h
T1CON_T1SYNC_SIZE equ 0001h
T1CON_T1SYNC_LENGTH equ 0001h
T1CON_T1SYNC_MASK equ 0004h



TMR2 equ 0011h



T2CON equ 0012h

T2CON_T2CKPS_POSN equ 0000h
T2CON_T2CKPS_POSITION equ 0000h
T2CON_T2CKPS_SIZE equ 0002h
T2CON_T2CKPS_LENGTH equ 0002h
T2CON_T2CKPS_MASK equ 0003h
T2CON_TMR2ON_POSN equ 0002h
T2CON_TMR2ON_POSITION equ 0002h
T2CON_TMR2ON_SIZE equ 0001h
T2CON_TMR2ON_LENGTH equ 0001h
T2CON_TMR2ON_MASK equ 0004h
T2CON_TOUTPS_POSN equ 0003h
T2CON_TOUTPS_POSITION equ 0003h
T2CON_TOUTPS_SIZE equ 0004h
T2CON_TOUTPS_LENGTH equ 0004h
T2CON_TOUTPS_MASK equ 0078h
T2CON_T2CKPS0_POSN equ 0000h
T2CON_T2CKPS0_POSITION equ 0000h
T2CON_T2CKPS0_SIZE equ 0001h
T2CON_T2CKPS0_LENGTH equ 0001h
T2CON_T2CKPS0_MASK equ 0001h
T2CON_T2CKPS1_POSN equ 0001h
T2CON_T2CKPS1_POSITION equ 0001h
T2CON_T2CKPS1_SIZE equ 0001h
T2CON_T2CKPS1_LENGTH equ 0001h
T2CON_T2CKPS1_MASK equ 0002h
T2CON_TOUTPS0_POSN equ 0003h
T2CON_TOUTPS0_POSITION equ 0003h
T2CON_TOUTPS0_SIZE equ 0001h
T2CON_TOUTPS0_LENGTH equ 0001h
T2CON_TOUTPS0_MASK equ 0008h
T2CON_TOUTPS1_POSN equ 0004h
T2CON_TOUTPS1_POSITION equ 0004h
T2CON_TOUTPS1_SIZE equ 0001h
T2CON_TOUTPS1_LENGTH equ 0001h
T2CON_TOUTPS1_MASK equ 0010h
T2CON_TOUTPS2_POSN equ 0005h
T2CON_TOUTPS2_POSITION equ 0005h
T2CON_TOUTPS2_SIZE equ 0001h
T2CON_TOUTPS2_LENGTH equ 0001h
T2CON_TOUTPS2_MASK equ 0020h
T2CON_TOUTPS3_POSN equ 0006h
T2CON_TOUTPS3_POSITION equ 0006h
T2CON_TOUTPS3_SIZE equ 0001h
T2CON_TOUTPS3_LENGTH equ 0001h
T2CON_TOUTPS3_MASK equ 0040h



SSPBUF equ 0013h



SSPCON equ 0014h

SSPCON_SSPM_POSN equ 0000h
SSPCON_SSPM_POSITION equ 0000h
SSPCON_SSPM_SIZE equ 0004h
SSPCON_SSPM_LENGTH equ 0004h
SSPCON_SSPM_MASK equ 000Fh
SSPCON_CKP_POSN equ 0004h
SSPCON_CKP_POSITION equ 0004h
SSPCON_CKP_SIZE equ 0001h
SSPCON_CKP_LENGTH equ 0001h
SSPCON_CKP_MASK equ 0010h
SSPCON_SSPEN_POSN equ 0005h
SSPCON_SSPEN_POSITION equ 0005h
SSPCON_SSPEN_SIZE equ 0001h
SSPCON_SSPEN_LENGTH equ 0001h
SSPCON_SSPEN_MASK equ 0020h
SSPCON_SSPOV_POSN equ 0006h
SSPCON_SSPOV_POSITION equ 0006h
SSPCON_SSPOV_SIZE equ 0001h
SSPCON_SSPOV_LENGTH equ 0001h
SSPCON_SSPOV_MASK equ 0040h
SSPCON_WCOL_POSN equ 0007h
SSPCON_WCOL_POSITION equ 0007h
SSPCON_WCOL_SIZE equ 0001h
SSPCON_WCOL_LENGTH equ 0001h
SSPCON_WCOL_MASK equ 0080h
SSPCON_SSPM0_POSN equ 0000h
SSPCON_SSPM0_POSITION equ 0000h
SSPCON_SSPM0_SIZE equ 0001h
SSPCON_SSPM0_LENGTH equ 0001h
SSPCON_SSPM0_MASK equ 0001h
SSPCON_SSPM1_POSN equ 0001h
SSPCON_SSPM1_POSITION equ 0001h
SSPCON_SSPM1_SIZE equ 0001h
SSPCON_SSPM1_LENGTH equ 0001h
SSPCON_SSPM1_MASK equ 0002h
SSPCON_SSPM2_POSN equ 0002h
SSPCON_SSPM2_POSITION equ 0002h
SSPCON_SSPM2_SIZE equ 0001h
SSPCON_SSPM2_LENGTH equ 0001h
SSPCON_SSPM2_MASK equ 0004h
SSPCON_SSPM3_POSN equ 0003h
SSPCON_SSPM3_POSITION equ 0003h
SSPCON_SSPM3_SIZE equ 0001h
SSPCON_SSPM3_LENGTH equ 0001h
SSPCON_SSPM3_MASK equ 0008h



CCPR1L equ 0015h



CCPR1H equ 0016h



CCP1CON equ 0017h

CCP1CON_CCP1M_POSN equ 0000h
CCP1CON_CCP1M_POSITION equ 0000h
CCP1CON_CCP1M_SIZE equ 0004h
CCP1CON_CCP1M_LENGTH equ 0004h
CCP1CON_CCP1M_MASK equ 000Fh
CCP1CON_DC1B_POSN equ 0004h
CCP1CON_DC1B_POSITION equ 0004h
CCP1CON_DC1B_SIZE equ 0002h
CCP1CON_DC1B_LENGTH equ 0002h
CCP1CON_DC1B_MASK equ 0030h
CCP1CON_P1M_POSN equ 0006h
CCP1CON_P1M_POSITION equ 0006h
CCP1CON_P1M_SIZE equ 0002h
CCP1CON_P1M_LENGTH equ 0002h
CCP1CON_P1M_MASK equ 00C0h
CCP1CON_CCP1M0_POSN equ 0000h
CCP1CON_CCP1M0_POSITION equ 0000h
CCP1CON_CCP1M0_SIZE equ 0001h
CCP1CON_CCP1M0_LENGTH equ 0001h
CCP1CON_CCP1M0_MASK equ 0001h
CCP1CON_CCP1M1_POSN equ 0001h
CCP1CON_CCP1M1_POSITION equ 0001h
CCP1CON_CCP1M1_SIZE equ 0001h
CCP1CON_CCP1M1_LENGTH equ 0001h
CCP1CON_CCP1M1_MASK equ 0002h
CCP1CON_CCP1M2_POSN equ 0002h
CCP1CON_CCP1M2_POSITION equ 0002h
CCP1CON_CCP1M2_SIZE equ 0001h
CCP1CON_CCP1M2_LENGTH equ 0001h
CCP1CON_CCP1M2_MASK equ 0004h
CCP1CON_CCP1M3_POSN equ 0003h
CCP1CON_CCP1M3_POSITION equ 0003h
CCP1CON_CCP1M3_SIZE equ 0001h
CCP1CON_CCP1M3_LENGTH equ 0001h
CCP1CON_CCP1M3_MASK equ 0008h
CCP1CON_DC1B0_POSN equ 0004h
CCP1CON_DC1B0_POSITION equ 0004h
CCP1CON_DC1B0_SIZE equ 0001h
CCP1CON_DC1B0_LENGTH equ 0001h
CCP1CON_DC1B0_MASK equ 0010h
CCP1CON_DC1B1_POSN equ 0005h
CCP1CON_DC1B1_POSITION equ 0005h
CCP1CON_DC1B1_SIZE equ 0001h
CCP1CON_DC1B1_LENGTH equ 0001h
CCP1CON_DC1B1_MASK equ 0020h
CCP1CON_P1M0_POSN equ 0006h
CCP1CON_P1M0_POSITION equ 0006h
CCP1CON_P1M0_SIZE equ 0001h
CCP1CON_P1M0_LENGTH equ 0001h
CCP1CON_P1M0_MASK equ 0040h
CCP1CON_P1M1_POSN equ 0007h
CCP1CON_P1M1_POSITION equ 0007h
CCP1CON_P1M1_SIZE equ 0001h
CCP1CON_P1M1_LENGTH equ 0001h
CCP1CON_P1M1_MASK equ 0080h
CCP1CON_CCP1Y_POSN equ 0004h
CCP1CON_CCP1Y_POSITION equ 0004h
CCP1CON_CCP1Y_SIZE equ 0001h
CCP1CON_CCP1Y_LENGTH equ 0001h
CCP1CON_CCP1Y_MASK equ 0010h
CCP1CON_CCP1X_POSN equ 0005h
CCP1CON_CCP1X_POSITION equ 0005h
CCP1CON_CCP1X_SIZE equ 0001h
CCP1CON_CCP1X_LENGTH equ 0001h
CCP1CON_CCP1X_MASK equ 0020h



RCSTA equ 0018h

RCSTA_RX9D_POSN equ 0000h
RCSTA_RX9D_POSITION equ 0000h
RCSTA_RX9D_SIZE equ 0001h
RCSTA_RX9D_LENGTH equ 0001h
RCSTA_RX9D_MASK equ 0001h
RCSTA_OERR_POSN equ 0001h
RCSTA_OERR_POSITION equ 0001h
RCSTA_OERR_SIZE equ 0001h
RCSTA_OERR_LENGTH equ 0001h
RCSTA_OERR_MASK equ 0002h
RCSTA_FERR_POSN equ 0002h
RCSTA_FERR_POSITION equ 0002h
RCSTA_FERR_SIZE equ 0001h
RCSTA_FERR_LENGTH equ 0001h
RCSTA_FERR_MASK equ 0004h
RCSTA_ADDEN_POSN equ 0003h
RCSTA_ADDEN_POSITION equ 0003h
RCSTA_ADDEN_SIZE equ 0001h
RCSTA_ADDEN_LENGTH equ 0001h
RCSTA_ADDEN_MASK equ 0008h
RCSTA_CREN_POSN equ 0004h
RCSTA_CREN_POSITION equ 0004h
RCSTA_CREN_SIZE equ 0001h
RCSTA_CREN_LENGTH equ 0001h
RCSTA_CREN_MASK equ 0010h
RCSTA_SREN_POSN equ 0005h
RCSTA_SREN_POSITION equ 0005h
RCSTA_SREN_SIZE equ 0001h
RCSTA_SREN_LENGTH equ 0001h
RCSTA_SREN_MASK equ 0020h
RCSTA_RX9_POSN equ 0006h
RCSTA_RX9_POSITION equ 0006h
RCSTA_RX9_SIZE equ 0001h
RCSTA_RX9_LENGTH equ 0001h
RCSTA_RX9_MASK equ 0040h
RCSTA_SPEN_POSN equ 0007h
RCSTA_SPEN_POSITION equ 0007h
RCSTA_SPEN_SIZE equ 0001h
RCSTA_SPEN_LENGTH equ 0001h
RCSTA_SPEN_MASK equ 0080h
RCSTA_RCD8_POSN equ 0000h
RCSTA_RCD8_POSITION equ 0000h
RCSTA_RCD8_SIZE equ 0001h
RCSTA_RCD8_LENGTH equ 0001h
RCSTA_RCD8_MASK equ 0001h
RCSTA_RC9_POSN equ 0006h
RCSTA_RC9_POSITION equ 0006h
RCSTA_RC9_SIZE equ 0001h
RCSTA_RC9_LENGTH equ 0001h
RCSTA_RC9_MASK equ 0040h
RCSTA_nRC8_POSN equ 0006h
RCSTA_nRC8_POSITION equ 0006h
RCSTA_nRC8_SIZE equ 0001h
RCSTA_nRC8_LENGTH equ 0001h
RCSTA_nRC8_MASK equ 0040h
RCSTA_RC8_9_POSN equ 0006h
RCSTA_RC8_9_POSITION equ 0006h
RCSTA_RC8_9_SIZE equ 0001h
RCSTA_RC8_9_LENGTH equ 0001h
RCSTA_RC8_9_MASK equ 0040h



TXREG equ 0019h



RCREG equ 001Ah



CCPR2L equ 001Bh



CCPR2H equ 001Ch



CCP2CON equ 001Dh

CCP2CON_CCP2M_POSN equ 0000h
CCP2CON_CCP2M_POSITION equ 0000h
CCP2CON_CCP2M_SIZE equ 0004h
CCP2CON_CCP2M_LENGTH equ 0004h
CCP2CON_CCP2M_MASK equ 000Fh
CCP2CON_DC2B0_POSN equ 0004h
CCP2CON_DC2B0_POSITION equ 0004h
CCP2CON_DC2B0_SIZE equ 0001h
CCP2CON_DC2B0_LENGTH equ 0001h
CCP2CON_DC2B0_MASK equ 0010h
CCP2CON_DC2B1_POSN equ 0005h
CCP2CON_DC2B1_POSITION equ 0005h
CCP2CON_DC2B1_SIZE equ 0001h
CCP2CON_DC2B1_LENGTH equ 0001h
CCP2CON_DC2B1_MASK equ 0020h
CCP2CON_CCP2M0_POSN equ 0000h
CCP2CON_CCP2M0_POSITION equ 0000h
CCP2CON_CCP2M0_SIZE equ 0001h
CCP2CON_CCP2M0_LENGTH equ 0001h
CCP2CON_CCP2M0_MASK equ 0001h
CCP2CON_CCP2M1_POSN equ 0001h
CCP2CON_CCP2M1_POSITION equ 0001h
CCP2CON_CCP2M1_SIZE equ 0001h
CCP2CON_CCP2M1_LENGTH equ 0001h
CCP2CON_CCP2M1_MASK equ 0002h
CCP2CON_CCP2M2_POSN equ 0002h
CCP2CON_CCP2M2_POSITION equ 0002h
CCP2CON_CCP2M2_SIZE equ 0001h
CCP2CON_CCP2M2_LENGTH equ 0001h
CCP2CON_CCP2M2_MASK equ 0004h
CCP2CON_CCP2M3_POSN equ 0003h
CCP2CON_CCP2M3_POSITION equ 0003h
CCP2CON_CCP2M3_SIZE equ 0001h
CCP2CON_CCP2M3_LENGTH equ 0001h
CCP2CON_CCP2M3_MASK equ 0008h
CCP2CON_CCP2Y_POSN equ 0004h
CCP2CON_CCP2Y_POSITION equ 0004h
CCP2CON_CCP2Y_SIZE equ 0001h
CCP2CON_CCP2Y_LENGTH equ 0001h
CCP2CON_CCP2Y_MASK equ 0010h
CCP2CON_CCP2X_POSN equ 0005h
CCP2CON_CCP2X_POSITION equ 0005h
CCP2CON_CCP2X_SIZE equ 0001h
CCP2CON_CCP2X_LENGTH equ 0001h
CCP2CON_CCP2X_MASK equ 0020h



ADRESH equ 001Eh



ADCON0 equ 001Fh

ADCON0_ADON_POSN equ 0000h
ADCON0_ADON_POSITION equ 0000h
ADCON0_ADON_SIZE equ 0001h
ADCON0_ADON_LENGTH equ 0001h
ADCON0_ADON_MASK equ 0001h
ADCON0_GO_nDONE_POSN equ 0001h
ADCON0_GO_nDONE_POSITION equ 0001h
ADCON0_GO_nDONE_SIZE equ 0001h
ADCON0_GO_nDONE_LENGTH equ 0001h
ADCON0_GO_nDONE_MASK equ 0002h
ADCON0_CHS_POSN equ 0002h
ADCON0_CHS_POSITION equ 0002h
ADCON0_CHS_SIZE equ 0004h
ADCON0_CHS_LENGTH equ 0004h
ADCON0_CHS_MASK equ 003Ch
ADCON0_ADCS_POSN equ 0006h
ADCON0_ADCS_POSITION equ 0006h
ADCON0_ADCS_SIZE equ 0002h
ADCON0_ADCS_LENGTH equ 0002h
ADCON0_ADCS_MASK equ 00C0h
ADCON0_GO_POSN equ 0001h
ADCON0_GO_POSITION equ 0001h
ADCON0_GO_SIZE equ 0001h
ADCON0_GO_LENGTH equ 0001h
ADCON0_GO_MASK equ 0002h
ADCON0_CHS0_POSN equ 0002h
ADCON0_CHS0_POSITION equ 0002h
ADCON0_CHS0_SIZE equ 0001h
ADCON0_CHS0_LENGTH equ 0001h
ADCON0_CHS0_MASK equ 0004h
ADCON0_CHS1_POSN equ 0003h
ADCON0_CHS1_POSITION equ 0003h
ADCON0_CHS1_SIZE equ 0001h
ADCON0_CHS1_LENGTH equ 0001h
ADCON0_CHS1_MASK equ 0008h
ADCON0_CHS2_POSN equ 0004h
ADCON0_CHS2_POSITION equ 0004h
ADCON0_CHS2_SIZE equ 0001h
ADCON0_CHS2_LENGTH equ 0001h
ADCON0_CHS2_MASK equ 0010h
ADCON0_CHS3_POSN equ 0005h
ADCON0_CHS3_POSITION equ 0005h
ADCON0_CHS3_SIZE equ 0001h
ADCON0_CHS3_LENGTH equ 0001h
ADCON0_CHS3_MASK equ 0020h
ADCON0_ADCS0_POSN equ 0006h
ADCON0_ADCS0_POSITION equ 0006h
ADCON0_ADCS0_SIZE equ 0001h
ADCON0_ADCS0_LENGTH equ 0001h
ADCON0_ADCS0_MASK equ 0040h
ADCON0_ADCS1_POSN equ 0007h
ADCON0_ADCS1_POSITION equ 0007h
ADCON0_ADCS1_SIZE equ 0001h
ADCON0_ADCS1_LENGTH equ 0001h
ADCON0_ADCS1_MASK equ 0080h
ADCON0_nDONE_POSN equ 0001h
ADCON0_nDONE_POSITION equ 0001h
ADCON0_nDONE_SIZE equ 0001h
ADCON0_nDONE_LENGTH equ 0001h
ADCON0_nDONE_MASK equ 0002h
ADCON0_GO_DONE_POSN equ 0001h
ADCON0_GO_DONE_POSITION equ 0001h
ADCON0_GO_DONE_SIZE equ 0001h
ADCON0_GO_DONE_LENGTH equ 0001h
ADCON0_GO_DONE_MASK equ 0002h



OPTION_REG equ 0081h

OPTION_REG_PS_POSN equ 0000h
OPTION_REG_PS_POSITION equ 0000h
OPTION_REG_PS_SIZE equ 0003h
OPTION_REG_PS_LENGTH equ 0003h
OPTION_REG_PS_MASK equ 0007h
OPTION_REG_PSA_POSN equ 0003h
OPTION_REG_PSA_POSITION equ 0003h
OPTION_REG_PSA_SIZE equ 0001h
OPTION_REG_PSA_LENGTH equ 0001h
OPTION_REG_PSA_MASK equ 0008h
OPTION_REG_T0SE_POSN equ 0004h
OPTION_REG_T0SE_POSITION equ 0004h
OPTION_REG_T0SE_SIZE equ 0001h
OPTION_REG_T0SE_LENGTH equ 0001h
OPTION_REG_T0SE_MASK equ 0010h
OPTION_REG_T0CS_POSN equ 0005h
OPTION_REG_T0CS_POSITION equ 0005h
OPTION_REG_T0CS_SIZE equ 0001h
OPTION_REG_T0CS_LENGTH equ 0001h
OPTION_REG_T0CS_MASK equ 0020h
OPTION_REG_INTEDG_POSN equ 0006h
OPTION_REG_INTEDG_POSITION equ 0006h
OPTION_REG_INTEDG_SIZE equ 0001h
OPTION_REG_INTEDG_LENGTH equ 0001h
OPTION_REG_INTEDG_MASK equ 0040h
OPTION_REG_nRBPU_POSN equ 0007h
OPTION_REG_nRBPU_POSITION equ 0007h
OPTION_REG_nRBPU_SIZE equ 0001h
OPTION_REG_nRBPU_LENGTH equ 0001h
OPTION_REG_nRBPU_MASK equ 0080h
OPTION_REG_PS0_POSN equ 0000h
OPTION_REG_PS0_POSITION equ 0000h
OPTION_REG_PS0_SIZE equ 0001h
OPTION_REG_PS0_LENGTH equ 0001h
OPTION_REG_PS0_MASK equ 0001h
OPTION_REG_PS1_POSN equ 0001h
OPTION_REG_PS1_POSITION equ 0001h
OPTION_REG_PS1_SIZE equ 0001h
OPTION_REG_PS1_LENGTH equ 0001h
OPTION_REG_PS1_MASK equ 0002h
OPTION_REG_PS2_POSN equ 0002h
OPTION_REG_PS2_POSITION equ 0002h
OPTION_REG_PS2_SIZE equ 0001h
OPTION_REG_PS2_LENGTH equ 0001h
OPTION_REG_PS2_MASK equ 0004h



TRISA equ 0085h

TRISA_TRISA0_POSN equ 0000h
TRISA_TRISA0_POSITION equ 0000h
TRISA_TRISA0_SIZE equ 0001h
TRISA_TRISA0_LENGTH equ 0001h
TRISA_TRISA0_MASK equ 0001h
TRISA_TRISA1_POSN equ 0001h
TRISA_TRISA1_POSITION equ 0001h
TRISA_TRISA1_SIZE equ 0001h
TRISA_TRISA1_LENGTH equ 0001h
TRISA_TRISA1_MASK equ 0002h
TRISA_TRISA2_POSN equ 0002h
TRISA_TRISA2_POSITION equ 0002h
TRISA_TRISA2_SIZE equ 0001h
TRISA_TRISA2_LENGTH equ 0001h
TRISA_TRISA2_MASK equ 0004h
TRISA_TRISA3_POSN equ 0003h
TRISA_TRISA3_POSITION equ 0003h
TRISA_TRISA3_SIZE equ 0001h
TRISA_TRISA3_LENGTH equ 0001h
TRISA_TRISA3_MASK equ 0008h
TRISA_TRISA4_POSN equ 0004h
TRISA_TRISA4_POSITION equ 0004h
TRISA_TRISA4_SIZE equ 0001h
TRISA_TRISA4_LENGTH equ 0001h
TRISA_TRISA4_MASK equ 0010h
TRISA_TRISA5_POSN equ 0005h
TRISA_TRISA5_POSITION equ 0005h
TRISA_TRISA5_SIZE equ 0001h
TRISA_TRISA5_LENGTH equ 0001h
TRISA_TRISA5_MASK equ 0020h
TRISA_TRISA6_POSN equ 0006h
TRISA_TRISA6_POSITION equ 0006h
TRISA_TRISA6_SIZE equ 0001h
TRISA_TRISA6_LENGTH equ 0001h
TRISA_TRISA6_MASK equ 0040h
TRISA_TRISA7_POSN equ 0007h
TRISA_TRISA7_POSITION equ 0007h
TRISA_TRISA7_SIZE equ 0001h
TRISA_TRISA7_LENGTH equ 0001h
TRISA_TRISA7_MASK equ 0080h



TRISB equ 0086h

TRISB_TRISB0_POSN equ 0000h
TRISB_TRISB0_POSITION equ 0000h
TRISB_TRISB0_SIZE equ 0001h
TRISB_TRISB0_LENGTH equ 0001h
TRISB_TRISB0_MASK equ 0001h
TRISB_TRISB1_POSN equ 0001h
TRISB_TRISB1_POSITION equ 0001h
TRISB_TRISB1_SIZE equ 0001h
TRISB_TRISB1_LENGTH equ 0001h
TRISB_TRISB1_MASK equ 0002h
TRISB_TRISB2_POSN equ 0002h
TRISB_TRISB2_POSITION equ 0002h
TRISB_TRISB2_SIZE equ 0001h
TRISB_TRISB2_LENGTH equ 0001h
TRISB_TRISB2_MASK equ 0004h
TRISB_TRISB3_POSN equ 0003h
TRISB_TRISB3_POSITION equ 0003h
TRISB_TRISB3_SIZE equ 0001h
TRISB_TRISB3_LENGTH equ 0001h
TRISB_TRISB3_MASK equ 0008h
TRISB_TRISB4_POSN equ 0004h
TRISB_TRISB4_POSITION equ 0004h
TRISB_TRISB4_SIZE equ 0001h
TRISB_TRISB4_LENGTH equ 0001h
TRISB_TRISB4_MASK equ 0010h
TRISB_TRISB5_POSN equ 0005h
TRISB_TRISB5_POSITION equ 0005h
TRISB_TRISB5_SIZE equ 0001h
TRISB_TRISB5_LENGTH equ 0001h
TRISB_TRISB5_MASK equ 0020h
TRISB_TRISB6_POSN equ 0006h
TRISB_TRISB6_POSITION equ 0006h
TRISB_TRISB6_SIZE equ 0001h
TRISB_TRISB6_LENGTH equ 0001h
TRISB_TRISB6_MASK equ 0040h
TRISB_TRISB7_POSN equ 0007h
TRISB_TRISB7_POSITION equ 0007h
TRISB_TRISB7_SIZE equ 0001h
TRISB_TRISB7_LENGTH equ 0001h
TRISB_TRISB7_MASK equ 0080h



TRISC equ 0087h

TRISC_TRISC0_POSN equ 0000h
TRISC_TRISC0_POSITION equ 0000h
TRISC_TRISC0_SIZE equ 0001h
TRISC_TRISC0_LENGTH equ 0001h
TRISC_TRISC0_MASK equ 0001h
TRISC_TRISC1_POSN equ 0001h
TRISC_TRISC1_POSITION equ 0001h
TRISC_TRISC1_SIZE equ 0001h
TRISC_TRISC1_LENGTH equ 0001h
TRISC_TRISC1_MASK equ 0002h
TRISC_TRISC2_POSN equ 0002h
TRISC_TRISC2_POSITION equ 0002h
TRISC_TRISC2_SIZE equ 0001h
TRISC_TRISC2_LENGTH equ 0001h
TRISC_TRISC2_MASK equ 0004h
TRISC_TRISC3_POSN equ 0003h
TRISC_TRISC3_POSITION equ 0003h
TRISC_TRISC3_SIZE equ 0001h
TRISC_TRISC3_LENGTH equ 0001h
TRISC_TRISC3_MASK equ 0008h
TRISC_TRISC4_POSN equ 0004h
TRISC_TRISC4_POSITION equ 0004h
TRISC_TRISC4_SIZE equ 0001h
TRISC_TRISC4_LENGTH equ 0001h
TRISC_TRISC4_MASK equ 0010h
TRISC_TRISC5_POSN equ 0005h
TRISC_TRISC5_POSITION equ 0005h
TRISC_TRISC5_SIZE equ 0001h
TRISC_TRISC5_LENGTH equ 0001h
TRISC_TRISC5_MASK equ 0020h
TRISC_TRISC6_POSN equ 0006h
TRISC_TRISC6_POSITION equ 0006h
TRISC_TRISC6_SIZE equ 0001h
TRISC_TRISC6_LENGTH equ 0001h
TRISC_TRISC6_MASK equ 0040h
TRISC_TRISC7_POSN equ 0007h
TRISC_TRISC7_POSITION equ 0007h
TRISC_TRISC7_SIZE equ 0001h
TRISC_TRISC7_LENGTH equ 0001h
TRISC_TRISC7_MASK equ 0080h



TRISD equ 0088h

TRISD_TRISD0_POSN equ 0000h
TRISD_TRISD0_POSITION equ 0000h
TRISD_TRISD0_SIZE equ 0001h
TRISD_TRISD0_LENGTH equ 0001h
TRISD_TRISD0_MASK equ 0001h
TRISD_TRISD1_POSN equ 0001h
TRISD_TRISD1_POSITION equ 0001h
TRISD_TRISD1_SIZE equ 0001h
TRISD_TRISD1_LENGTH equ 0001h
TRISD_TRISD1_MASK equ 0002h
TRISD_TRISD2_POSN equ 0002h
TRISD_TRISD2_POSITION equ 0002h
TRISD_TRISD2_SIZE equ 0001h
TRISD_TRISD2_LENGTH equ 0001h
TRISD_TRISD2_MASK equ 0004h
TRISD_TRISD3_POSN equ 0003h
TRISD_TRISD3_POSITION equ 0003h
TRISD_TRISD3_SIZE equ 0001h
TRISD_TRISD3_LENGTH equ 0001h
TRISD_TRISD3_MASK equ 0008h
TRISD_TRISD4_POSN equ 0004h
TRISD_TRISD4_POSITION equ 0004h
TRISD_TRISD4_SIZE equ 0001h
TRISD_TRISD4_LENGTH equ 0001h
TRISD_TRISD4_MASK equ 0010h
TRISD_TRISD5_POSN equ 0005h
TRISD_TRISD5_POSITION equ 0005h
TRISD_TRISD5_SIZE equ 0001h
TRISD_TRISD5_LENGTH equ 0001h
TRISD_TRISD5_MASK equ 0020h
TRISD_TRISD6_POSN equ 0006h
TRISD_TRISD6_POSITION equ 0006h
TRISD_TRISD6_SIZE equ 0001h
TRISD_TRISD6_LENGTH equ 0001h
TRISD_TRISD6_MASK equ 0040h
TRISD_TRISD7_POSN equ 0007h
TRISD_TRISD7_POSITION equ 0007h
TRISD_TRISD7_SIZE equ 0001h
TRISD_TRISD7_LENGTH equ 0001h
TRISD_TRISD7_MASK equ 0080h



TRISE equ 0089h

TRISE_TRISE0_POSN equ 0000h
TRISE_TRISE0_POSITION equ 0000h
TRISE_TRISE0_SIZE equ 0001h
TRISE_TRISE0_LENGTH equ 0001h
TRISE_TRISE0_MASK equ 0001h
TRISE_TRISE1_POSN equ 0001h
TRISE_TRISE1_POSITION equ 0001h
TRISE_TRISE1_SIZE equ 0001h
TRISE_TRISE1_LENGTH equ 0001h
TRISE_TRISE1_MASK equ 0002h
TRISE_TRISE2_POSN equ 0002h
TRISE_TRISE2_POSITION equ 0002h
TRISE_TRISE2_SIZE equ 0001h
TRISE_TRISE2_LENGTH equ 0001h
TRISE_TRISE2_MASK equ 0004h
TRISE_TRISE3_POSN equ 0003h
TRISE_TRISE3_POSITION equ 0003h
TRISE_TRISE3_SIZE equ 0001h
TRISE_TRISE3_LENGTH equ 0001h
TRISE_TRISE3_MASK equ 0008h



PIE1 equ 008Ch

PIE1_TMR1IE_POSN equ 0000h
PIE1_TMR1IE_POSITION equ 0000h
PIE1_TMR1IE_SIZE equ 0001h
PIE1_TMR1IE_LENGTH equ 0001h
PIE1_TMR1IE_MASK equ 0001h
PIE1_TMR2IE_POSN equ 0001h
PIE1_TMR2IE_POSITION equ 0001h
PIE1_TMR2IE_SIZE equ 0001h
PIE1_TMR2IE_LENGTH equ 0001h
PIE1_TMR2IE_MASK equ 0002h
PIE1_CCP1IE_POSN equ 0002h
PIE1_CCP1IE_POSITION equ 0002h
PIE1_CCP1IE_SIZE equ 0001h
PIE1_CCP1IE_LENGTH equ 0001h
PIE1_CCP1IE_MASK equ 0004h
PIE1_SSPIE_POSN equ 0003h
PIE1_SSPIE_POSITION equ 0003h
PIE1_SSPIE_SIZE equ 0001h
PIE1_SSPIE_LENGTH equ 0001h
PIE1_SSPIE_MASK equ 0008h
PIE1_TXIE_POSN equ 0004h
PIE1_TXIE_POSITION equ 0004h
PIE1_TXIE_SIZE equ 0001h
PIE1_TXIE_LENGTH equ 0001h
PIE1_TXIE_MASK equ 0010h
PIE1_RCIE_POSN equ 0005h
PIE1_RCIE_POSITION equ 0005h
PIE1_RCIE_SIZE equ 0001h
PIE1_RCIE_LENGTH equ 0001h
PIE1_RCIE_MASK equ 0020h
PIE1_ADIE_POSN equ 0006h
PIE1_ADIE_POSITION equ 0006h
PIE1_ADIE_SIZE equ 0001h
PIE1_ADIE_LENGTH equ 0001h
PIE1_ADIE_MASK equ 0040h



PIE2 equ 008Dh

PIE2_CCP2IE_POSN equ 0000h
PIE2_CCP2IE_POSITION equ 0000h
PIE2_CCP2IE_SIZE equ 0001h
PIE2_CCP2IE_LENGTH equ 0001h
PIE2_CCP2IE_MASK equ 0001h
PIE2_ULPWUIE_POSN equ 0002h
PIE2_ULPWUIE_POSITION equ 0002h
PIE2_ULPWUIE_SIZE equ 0001h
PIE2_ULPWUIE_LENGTH equ 0001h
PIE2_ULPWUIE_MASK equ 0004h
PIE2_BCLIE_POSN equ 0003h
PIE2_BCLIE_POSITION equ 0003h
PIE2_BCLIE_SIZE equ 0001h
PIE2_BCLIE_LENGTH equ 0001h
PIE2_BCLIE_MASK equ 0008h
PIE2_EEIE_POSN equ 0004h
PIE2_EEIE_POSITION equ 0004h
PIE2_EEIE_SIZE equ 0001h
PIE2_EEIE_LENGTH equ 0001h
PIE2_EEIE_MASK equ 0010h
PIE2_C1IE_POSN equ 0005h
PIE2_C1IE_POSITION equ 0005h
PIE2_C1IE_SIZE equ 0001h
PIE2_C1IE_LENGTH equ 0001h
PIE2_C1IE_MASK equ 0020h
PIE2_C2IE_POSN equ 0006h
PIE2_C2IE_POSITION equ 0006h
PIE2_C2IE_SIZE equ 0001h
PIE2_C2IE_LENGTH equ 0001h
PIE2_C2IE_MASK equ 0040h
PIE2_OSFIE_POSN equ 0007h
PIE2_OSFIE_POSITION equ 0007h
PIE2_OSFIE_SIZE equ 0001h
PIE2_OSFIE_LENGTH equ 0001h
PIE2_OSFIE_MASK equ 0080h



PCON equ 008Eh

PCON_nBOR_POSN equ 0000h
PCON_nBOR_POSITION equ 0000h
PCON_nBOR_SIZE equ 0001h
PCON_nBOR_LENGTH equ 0001h
PCON_nBOR_MASK equ 0001h
PCON_nPOR_POSN equ 0001h
PCON_nPOR_POSITION equ 0001h
PCON_nPOR_SIZE equ 0001h
PCON_nPOR_LENGTH equ 0001h
PCON_nPOR_MASK equ 0002h
PCON_SBOREN_POSN equ 0004h
PCON_SBOREN_POSITION equ 0004h
PCON_SBOREN_SIZE equ 0001h
PCON_SBOREN_LENGTH equ 0001h
PCON_SBOREN_MASK equ 0010h
PCON_ULPWUE_POSN equ 0005h
PCON_ULPWUE_POSITION equ 0005h
PCON_ULPWUE_SIZE equ 0001h
PCON_ULPWUE_LENGTH equ 0001h
PCON_ULPWUE_MASK equ 0020h
PCON_nBO_POSN equ 0000h
PCON_nBO_POSITION equ 0000h
PCON_nBO_SIZE equ 0001h
PCON_nBO_LENGTH equ 0001h
PCON_nBO_MASK equ 0001h



OSCCON equ 008Fh

OSCCON_SCS_POSN equ 0000h
OSCCON_SCS_POSITION equ 0000h
OSCCON_SCS_SIZE equ 0001h
OSCCON_SCS_LENGTH equ 0001h
OSCCON_SCS_MASK equ 0001h
OSCCON_LTS_POSN equ 0001h
OSCCON_LTS_POSITION equ 0001h
OSCCON_LTS_SIZE equ 0001h
OSCCON_LTS_LENGTH equ 0001h
OSCCON_LTS_MASK equ 0002h
OSCCON_HTS_POSN equ 0002h
OSCCON_HTS_POSITION equ 0002h
OSCCON_HTS_SIZE equ 0001h
OSCCON_HTS_LENGTH equ 0001h
OSCCON_HTS_MASK equ 0004h
OSCCON_OSTS_POSN equ 0003h
OSCCON_OSTS_POSITION equ 0003h
OSCCON_OSTS_SIZE equ 0001h
OSCCON_OSTS_LENGTH equ 0001h
OSCCON_OSTS_MASK equ 0008h
OSCCON_IRCF_POSN equ 0004h
OSCCON_IRCF_POSITION equ 0004h
OSCCON_IRCF_SIZE equ 0003h
OSCCON_IRCF_LENGTH equ 0003h
OSCCON_IRCF_MASK equ 0070h
OSCCON_IRCF0_POSN equ 0004h
OSCCON_IRCF0_POSITION equ 0004h
OSCCON_IRCF0_SIZE equ 0001h
OSCCON_IRCF0_LENGTH equ 0001h
OSCCON_IRCF0_MASK equ 0010h
OSCCON_IRCF1_POSN equ 0005h
OSCCON_IRCF1_POSITION equ 0005h
OSCCON_IRCF1_SIZE equ 0001h
OSCCON_IRCF1_LENGTH equ 0001h
OSCCON_IRCF1_MASK equ 0020h
OSCCON_IRCF2_POSN equ 0006h
OSCCON_IRCF2_POSITION equ 0006h
OSCCON_IRCF2_SIZE equ 0001h
OSCCON_IRCF2_LENGTH equ 0001h
OSCCON_IRCF2_MASK equ 0040h



OSCTUNE equ 0090h

OSCTUNE_TUN_POSN equ 0000h
OSCTUNE_TUN_POSITION equ 0000h
OSCTUNE_TUN_SIZE equ 0005h
OSCTUNE_TUN_LENGTH equ 0005h
OSCTUNE_TUN_MASK equ 001Fh
OSCTUNE_TUN0_POSN equ 0000h
OSCTUNE_TUN0_POSITION equ 0000h
OSCTUNE_TUN0_SIZE equ 0001h
OSCTUNE_TUN0_LENGTH equ 0001h
OSCTUNE_TUN0_MASK equ 0001h
OSCTUNE_TUN1_POSN equ 0001h
OSCTUNE_TUN1_POSITION equ 0001h
OSCTUNE_TUN1_SIZE equ 0001h
OSCTUNE_TUN1_LENGTH equ 0001h
OSCTUNE_TUN1_MASK equ 0002h
OSCTUNE_TUN2_POSN equ 0002h
OSCTUNE_TUN2_POSITION equ 0002h
OSCTUNE_TUN2_SIZE equ 0001h
OSCTUNE_TUN2_LENGTH equ 0001h
OSCTUNE_TUN2_MASK equ 0004h
OSCTUNE_TUN3_POSN equ 0003h
OSCTUNE_TUN3_POSITION equ 0003h
OSCTUNE_TUN3_SIZE equ 0001h
OSCTUNE_TUN3_LENGTH equ 0001h
OSCTUNE_TUN3_MASK equ 0008h
OSCTUNE_TUN4_POSN equ 0004h
OSCTUNE_TUN4_POSITION equ 0004h
OSCTUNE_TUN4_SIZE equ 0001h
OSCTUNE_TUN4_LENGTH equ 0001h
OSCTUNE_TUN4_MASK equ 0010h



SSPCON2 equ 0091h

SSPCON2_SEN_POSN equ 0000h
SSPCON2_SEN_POSITION equ 0000h
SSPCON2_SEN_SIZE equ 0001h
SSPCON2_SEN_LENGTH equ 0001h
SSPCON2_SEN_MASK equ 0001h
SSPCON2_RSEN_POSN equ 0001h
SSPCON2_RSEN_POSITION equ 0001h
SSPCON2_RSEN_SIZE equ 0001h
SSPCON2_RSEN_LENGTH equ 0001h
SSPCON2_RSEN_MASK equ 0002h
SSPCON2_PEN_POSN equ 0002h
SSPCON2_PEN_POSITION equ 0002h
SSPCON2_PEN_SIZE equ 0001h
SSPCON2_PEN_LENGTH equ 0001h
SSPCON2_PEN_MASK equ 0004h
SSPCON2_RCEN_POSN equ 0003h
SSPCON2_RCEN_POSITION equ 0003h
SSPCON2_RCEN_SIZE equ 0001h
SSPCON2_RCEN_LENGTH equ 0001h
SSPCON2_RCEN_MASK equ 0008h
SSPCON2_ACKEN_POSN equ 0004h
SSPCON2_ACKEN_POSITION equ 0004h
SSPCON2_ACKEN_SIZE equ 0001h
SSPCON2_ACKEN_LENGTH equ 0001h
SSPCON2_ACKEN_MASK equ 0010h
SSPCON2_ACKDT_POSN equ 0005h
SSPCON2_ACKDT_POSITION equ 0005h
SSPCON2_ACKDT_SIZE equ 0001h
SSPCON2_ACKDT_LENGTH equ 0001h
SSPCON2_ACKDT_MASK equ 0020h
SSPCON2_ACKSTAT_POSN equ 0006h
SSPCON2_ACKSTAT_POSITION equ 0006h
SSPCON2_ACKSTAT_SIZE equ 0001h
SSPCON2_ACKSTAT_LENGTH equ 0001h
SSPCON2_ACKSTAT_MASK equ 0040h
SSPCON2_GCEN_POSN equ 0007h
SSPCON2_GCEN_POSITION equ 0007h
SSPCON2_GCEN_SIZE equ 0001h
SSPCON2_GCEN_LENGTH equ 0001h
SSPCON2_GCEN_MASK equ 0080h



PR2 equ 0092h



SSPADD equ 0093h



SSPMSK equ 0093h

SSPMSK_MSK0_POSN equ 0000h
SSPMSK_MSK0_POSITION equ 0000h
SSPMSK_MSK0_SIZE equ 0001h
SSPMSK_MSK0_LENGTH equ 0001h
SSPMSK_MSK0_MASK equ 0001h
SSPMSK_MSK1_POSN equ 0001h
SSPMSK_MSK1_POSITION equ 0001h
SSPMSK_MSK1_SIZE equ 0001h
SSPMSK_MSK1_LENGTH equ 0001h
SSPMSK_MSK1_MASK equ 0002h
SSPMSK_MSK2_POSN equ 0002h
SSPMSK_MSK2_POSITION equ 0002h
SSPMSK_MSK2_SIZE equ 0001h
SSPMSK_MSK2_LENGTH equ 0001h
SSPMSK_MSK2_MASK equ 0004h
SSPMSK_MSK3_POSN equ 0003h
SSPMSK_MSK3_POSITION equ 0003h
SSPMSK_MSK3_SIZE equ 0001h
SSPMSK_MSK3_LENGTH equ 0001h
SSPMSK_MSK3_MASK equ 0008h
SSPMSK_MSK4_POSN equ 0004h
SSPMSK_MSK4_POSITION equ 0004h
SSPMSK_MSK4_SIZE equ 0001h
SSPMSK_MSK4_LENGTH equ 0001h
SSPMSK_MSK4_MASK equ 0010h
SSPMSK_MSK5_POSN equ 0005h
SSPMSK_MSK5_POSITION equ 0005h
SSPMSK_MSK5_SIZE equ 0001h
SSPMSK_MSK5_LENGTH equ 0001h
SSPMSK_MSK5_MASK equ 0020h
SSPMSK_MSK6_POSN equ 0006h
SSPMSK_MSK6_POSITION equ 0006h
SSPMSK_MSK6_SIZE equ 0001h
SSPMSK_MSK6_LENGTH equ 0001h
SSPMSK_MSK6_MASK equ 0040h
SSPMSK_MSK7_POSN equ 0007h
SSPMSK_MSK7_POSITION equ 0007h
SSPMSK_MSK7_SIZE equ 0001h
SSPMSK_MSK7_LENGTH equ 0001h
SSPMSK_MSK7_MASK equ 0080h



SSPSTAT equ 0094h

SSPSTAT_BF_POSN equ 0000h
SSPSTAT_BF_POSITION equ 0000h
SSPSTAT_BF_SIZE equ 0001h
SSPSTAT_BF_LENGTH equ 0001h
SSPSTAT_BF_MASK equ 0001h
SSPSTAT_UA_POSN equ 0001h
SSPSTAT_UA_POSITION equ 0001h
SSPSTAT_UA_SIZE equ 0001h
SSPSTAT_UA_LENGTH equ 0001h
SSPSTAT_UA_MASK equ 0002h
SSPSTAT_R_nW_POSN equ 0002h
SSPSTAT_R_nW_POSITION equ 0002h
SSPSTAT_R_nW_SIZE equ 0001h
SSPSTAT_R_nW_LENGTH equ 0001h
SSPSTAT_R_nW_MASK equ 0004h
SSPSTAT_S_POSN equ 0003h
SSPSTAT_S_POSITION equ 0003h
SSPSTAT_S_SIZE equ 0001h
SSPSTAT_S_LENGTH equ 0001h
SSPSTAT_S_MASK equ 0008h
SSPSTAT_P_POSN equ 0004h
SSPSTAT_P_POSITION equ 0004h
SSPSTAT_P_SIZE equ 0001h
SSPSTAT_P_LENGTH equ 0001h
SSPSTAT_P_MASK equ 0010h
SSPSTAT_D_nA_POSN equ 0005h
SSPSTAT_D_nA_POSITION equ 0005h
SSPSTAT_D_nA_SIZE equ 0001h
SSPSTAT_D_nA_LENGTH equ 0001h
SSPSTAT_D_nA_MASK equ 0020h
SSPSTAT_CKE_POSN equ 0006h
SSPSTAT_CKE_POSITION equ 0006h
SSPSTAT_CKE_SIZE equ 0001h
SSPSTAT_CKE_LENGTH equ 0001h
SSPSTAT_CKE_MASK equ 0040h
SSPSTAT_SMP_POSN equ 0007h
SSPSTAT_SMP_POSITION equ 0007h
SSPSTAT_SMP_SIZE equ 0001h
SSPSTAT_SMP_LENGTH equ 0001h
SSPSTAT_SMP_MASK equ 0080h
SSPSTAT_R_POSN equ 0002h
SSPSTAT_R_POSITION equ 0002h
SSPSTAT_R_SIZE equ 0001h
SSPSTAT_R_LENGTH equ 0001h
SSPSTAT_R_MASK equ 0004h
SSPSTAT_D_POSN equ 0005h
SSPSTAT_D_POSITION equ 0005h
SSPSTAT_D_SIZE equ 0001h
SSPSTAT_D_LENGTH equ 0001h
SSPSTAT_D_MASK equ 0020h
SSPSTAT_I2C_READ_POSN equ 0002h
SSPSTAT_I2C_READ_POSITION equ 0002h
SSPSTAT_I2C_READ_SIZE equ 0001h
SSPSTAT_I2C_READ_LENGTH equ 0001h
SSPSTAT_I2C_READ_MASK equ 0004h
SSPSTAT_I2C_START_POSN equ 0003h
SSPSTAT_I2C_START_POSITION equ 0003h
SSPSTAT_I2C_START_SIZE equ 0001h
SSPSTAT_I2C_START_LENGTH equ 0001h
SSPSTAT_I2C_START_MASK equ 0008h
SSPSTAT_I2C_STOP_POSN equ 0004h
SSPSTAT_I2C_STOP_POSITION equ 0004h
SSPSTAT_I2C_STOP_SIZE equ 0001h
SSPSTAT_I2C_STOP_LENGTH equ 0001h
SSPSTAT_I2C_STOP_MASK equ 0010h
SSPSTAT_I2C_DATA_POSN equ 0005h
SSPSTAT_I2C_DATA_POSITION equ 0005h
SSPSTAT_I2C_DATA_SIZE equ 0001h
SSPSTAT_I2C_DATA_LENGTH equ 0001h
SSPSTAT_I2C_DATA_MASK equ 0020h
SSPSTAT_nW_POSN equ 0002h
SSPSTAT_nW_POSITION equ 0002h
SSPSTAT_nW_SIZE equ 0001h
SSPSTAT_nW_LENGTH equ 0001h
SSPSTAT_nW_MASK equ 0004h
SSPSTAT_nA_POSN equ 0005h
SSPSTAT_nA_POSITION equ 0005h
SSPSTAT_nA_SIZE equ 0001h
SSPSTAT_nA_LENGTH equ 0001h
SSPSTAT_nA_MASK equ 0020h
SSPSTAT_nWRITE_POSN equ 0002h
SSPSTAT_nWRITE_POSITION equ 0002h
SSPSTAT_nWRITE_SIZE equ 0001h
SSPSTAT_nWRITE_LENGTH equ 0001h
SSPSTAT_nWRITE_MASK equ 0004h
SSPSTAT_nADDRESS_POSN equ 0005h
SSPSTAT_nADDRESS_POSITION equ 0005h
SSPSTAT_nADDRESS_SIZE equ 0001h
SSPSTAT_nADDRESS_LENGTH equ 0001h
SSPSTAT_nADDRESS_MASK equ 0020h
SSPSTAT_R_W_POSN equ 0002h
SSPSTAT_R_W_POSITION equ 0002h
SSPSTAT_R_W_SIZE equ 0001h
SSPSTAT_R_W_LENGTH equ 0001h
SSPSTAT_R_W_MASK equ 0004h
SSPSTAT_D_A_POSN equ 0005h
SSPSTAT_D_A_POSITION equ 0005h
SSPSTAT_D_A_SIZE equ 0001h
SSPSTAT_D_A_LENGTH equ 0001h
SSPSTAT_D_A_MASK equ 0020h
SSPSTAT_READ_WRITE_POSN equ 0002h
SSPSTAT_READ_WRITE_POSITION equ 0002h
SSPSTAT_READ_WRITE_SIZE equ 0001h
SSPSTAT_READ_WRITE_LENGTH equ 0001h
SSPSTAT_READ_WRITE_MASK equ 0004h
SSPSTAT_DATA_ADDRESS_POSN equ 0005h
SSPSTAT_DATA_ADDRESS_POSITION equ 0005h
SSPSTAT_DATA_ADDRESS_SIZE equ 0001h
SSPSTAT_DATA_ADDRESS_LENGTH equ 0001h
SSPSTAT_DATA_ADDRESS_MASK equ 0020h



WPUB equ 0095h

WPUB_WPUB_POSN equ 0000h
WPUB_WPUB_POSITION equ 0000h
WPUB_WPUB_SIZE equ 0008h
WPUB_WPUB_LENGTH equ 0008h
WPUB_WPUB_MASK equ 00FFh
WPUB_WPUB0_POSN equ 0000h
WPUB_WPUB0_POSITION equ 0000h
WPUB_WPUB0_SIZE equ 0001h
WPUB_WPUB0_LENGTH equ 0001h
WPUB_WPUB0_MASK equ 0001h
WPUB_WPUB1_POSN equ 0001h
WPUB_WPUB1_POSITION equ 0001h
WPUB_WPUB1_SIZE equ 0001h
WPUB_WPUB1_LENGTH equ 0001h
WPUB_WPUB1_MASK equ 0002h
WPUB_WPUB2_POSN equ 0002h
WPUB_WPUB2_POSITION equ 0002h
WPUB_WPUB2_SIZE equ 0001h
WPUB_WPUB2_LENGTH equ 0001h
WPUB_WPUB2_MASK equ 0004h
WPUB_WPUB3_POSN equ 0003h
WPUB_WPUB3_POSITION equ 0003h
WPUB_WPUB3_SIZE equ 0001h
WPUB_WPUB3_LENGTH equ 0001h
WPUB_WPUB3_MASK equ 0008h
WPUB_WPUB4_POSN equ 0004h
WPUB_WPUB4_POSITION equ 0004h
WPUB_WPUB4_SIZE equ 0001h
WPUB_WPUB4_LENGTH equ 0001h
WPUB_WPUB4_MASK equ 0010h
WPUB_WPUB5_POSN equ 0005h
WPUB_WPUB5_POSITION equ 0005h
WPUB_WPUB5_SIZE equ 0001h
WPUB_WPUB5_LENGTH equ 0001h
WPUB_WPUB5_MASK equ 0020h
WPUB_WPUB6_POSN equ 0006h
WPUB_WPUB6_POSITION equ 0006h
WPUB_WPUB6_SIZE equ 0001h
WPUB_WPUB6_LENGTH equ 0001h
WPUB_WPUB6_MASK equ 0040h
WPUB_WPUB7_POSN equ 0007h
WPUB_WPUB7_POSITION equ 0007h
WPUB_WPUB7_SIZE equ 0001h
WPUB_WPUB7_LENGTH equ 0001h
WPUB_WPUB7_MASK equ 0080h



IOCB equ 0096h

IOCB_IOCB_POSN equ 0000h
IOCB_IOCB_POSITION equ 0000h
IOCB_IOCB_SIZE equ 0008h
IOCB_IOCB_LENGTH equ 0008h
IOCB_IOCB_MASK equ 00FFh
IOCB_IOCB0_POSN equ 0000h
IOCB_IOCB0_POSITION equ 0000h
IOCB_IOCB0_SIZE equ 0001h
IOCB_IOCB0_LENGTH equ 0001h
IOCB_IOCB0_MASK equ 0001h
IOCB_IOCB1_POSN equ 0001h
IOCB_IOCB1_POSITION equ 0001h
IOCB_IOCB1_SIZE equ 0001h
IOCB_IOCB1_LENGTH equ 0001h
IOCB_IOCB1_MASK equ 0002h
IOCB_IOCB2_POSN equ 0002h
IOCB_IOCB2_POSITION equ 0002h
IOCB_IOCB2_SIZE equ 0001h
IOCB_IOCB2_LENGTH equ 0001h
IOCB_IOCB2_MASK equ 0004h
IOCB_IOCB3_POSN equ 0003h
IOCB_IOCB3_POSITION equ 0003h
IOCB_IOCB3_SIZE equ 0001h
IOCB_IOCB3_LENGTH equ 0001h
IOCB_IOCB3_MASK equ 0008h
IOCB_IOCB4_POSN equ 0004h
IOCB_IOCB4_POSITION equ 0004h
IOCB_IOCB4_SIZE equ 0001h
IOCB_IOCB4_LENGTH equ 0001h
IOCB_IOCB4_MASK equ 0010h
IOCB_IOCB5_POSN equ 0005h
IOCB_IOCB5_POSITION equ 0005h
IOCB_IOCB5_SIZE equ 0001h
IOCB_IOCB5_LENGTH equ 0001h
IOCB_IOCB5_MASK equ 0020h
IOCB_IOCB6_POSN equ 0006h
IOCB_IOCB6_POSITION equ 0006h
IOCB_IOCB6_SIZE equ 0001h
IOCB_IOCB6_LENGTH equ 0001h
IOCB_IOCB6_MASK equ 0040h
IOCB_IOCB7_POSN equ 0007h
IOCB_IOCB7_POSITION equ 0007h
IOCB_IOCB7_SIZE equ 0001h
IOCB_IOCB7_LENGTH equ 0001h
IOCB_IOCB7_MASK equ 0080h



VRCON equ 0097h

VRCON_VR_POSN equ 0000h
VRCON_VR_POSITION equ 0000h
VRCON_VR_SIZE equ 0004h
VRCON_VR_LENGTH equ 0004h
VRCON_VR_MASK equ 000Fh
VRCON_VRSS_POSN equ 0004h
VRCON_VRSS_POSITION equ 0004h
VRCON_VRSS_SIZE equ 0001h
VRCON_VRSS_LENGTH equ 0001h
VRCON_VRSS_MASK equ 0010h
VRCON_VRR_POSN equ 0005h
VRCON_VRR_POSITION equ 0005h
VRCON_VRR_SIZE equ 0001h
VRCON_VRR_LENGTH equ 0001h
VRCON_VRR_MASK equ 0020h
VRCON_VROE_POSN equ 0006h
VRCON_VROE_POSITION equ 0006h
VRCON_VROE_SIZE equ 0001h
VRCON_VROE_LENGTH equ 0001h
VRCON_VROE_MASK equ 0040h
VRCON_VREN_POSN equ 0007h
VRCON_VREN_POSITION equ 0007h
VRCON_VREN_SIZE equ 0001h
VRCON_VREN_LENGTH equ 0001h
VRCON_VREN_MASK equ 0080h
VRCON_VR0_POSN equ 0000h
VRCON_VR0_POSITION equ 0000h
VRCON_VR0_SIZE equ 0001h
VRCON_VR0_LENGTH equ 0001h
VRCON_VR0_MASK equ 0001h
VRCON_VR1_POSN equ 0001h
VRCON_VR1_POSITION equ 0001h
VRCON_VR1_SIZE equ 0001h
VRCON_VR1_LENGTH equ 0001h
VRCON_VR1_MASK equ 0002h
VRCON_VR2_POSN equ 0002h
VRCON_VR2_POSITION equ 0002h
VRCON_VR2_SIZE equ 0001h
VRCON_VR2_LENGTH equ 0001h
VRCON_VR2_MASK equ 0004h
VRCON_VR3_POSN equ 0003h
VRCON_VR3_POSITION equ 0003h
VRCON_VR3_SIZE equ 0001h
VRCON_VR3_LENGTH equ 0001h
VRCON_VR3_MASK equ 0008h



TXSTA equ 0098h

TXSTA_TX9D_POSN equ 0000h
TXSTA_TX9D_POSITION equ 0000h
TXSTA_TX9D_SIZE equ 0001h
TXSTA_TX9D_LENGTH equ 0001h
TXSTA_TX9D_MASK equ 0001h
TXSTA_TRMT_POSN equ 0001h
TXSTA_TRMT_POSITION equ 0001h
TXSTA_TRMT_SIZE equ 0001h
TXSTA_TRMT_LENGTH equ 0001h
TXSTA_TRMT_MASK equ 0002h
TXSTA_BRGH_POSN equ 0002h
TXSTA_BRGH_POSITION equ 0002h
TXSTA_BRGH_SIZE equ 0001h
TXSTA_BRGH_LENGTH equ 0001h
TXSTA_BRGH_MASK equ 0004h
TXSTA_SENDB_POSN equ 0003h
TXSTA_SENDB_POSITION equ 0003h
TXSTA_SENDB_SIZE equ 0001h
TXSTA_SENDB_LENGTH equ 0001h
TXSTA_SENDB_MASK equ 0008h
TXSTA_SYNC_POSN equ 0004h
TXSTA_SYNC_POSITION equ 0004h
TXSTA_SYNC_SIZE equ 0001h
TXSTA_SYNC_LENGTH equ 0001h
TXSTA_SYNC_MASK equ 0010h
TXSTA_TXEN_POSN equ 0005h
TXSTA_TXEN_POSITION equ 0005h
TXSTA_TXEN_SIZE equ 0001h
TXSTA_TXEN_LENGTH equ 0001h
TXSTA_TXEN_MASK equ 0020h
TXSTA_TX9_POSN equ 0006h
TXSTA_TX9_POSITION equ 0006h
TXSTA_TX9_SIZE equ 0001h
TXSTA_TX9_LENGTH equ 0001h
TXSTA_TX9_MASK equ 0040h
TXSTA_CSRC_POSN equ 0007h
TXSTA_CSRC_POSITION equ 0007h
TXSTA_CSRC_SIZE equ 0001h
TXSTA_CSRC_LENGTH equ 0001h
TXSTA_CSRC_MASK equ 0080h
TXSTA_TXD8_POSN equ 0000h
TXSTA_TXD8_POSITION equ 0000h
TXSTA_TXD8_SIZE equ 0001h
TXSTA_TXD8_LENGTH equ 0001h
TXSTA_TXD8_MASK equ 0001h
TXSTA_nTX8_POSN equ 0006h
TXSTA_nTX8_POSITION equ 0006h
TXSTA_nTX8_SIZE equ 0001h
TXSTA_nTX8_LENGTH equ 0001h
TXSTA_nTX8_MASK equ 0040h
TXSTA_TX8_9_POSN equ 0006h
TXSTA_TX8_9_POSITION equ 0006h
TXSTA_TX8_9_SIZE equ 0001h
TXSTA_TX8_9_LENGTH equ 0001h
TXSTA_TX8_9_MASK equ 0040h



SPBRG equ 0099h

SPBRG_BRG0_POSN equ 0000h
SPBRG_BRG0_POSITION equ 0000h
SPBRG_BRG0_SIZE equ 0001h
SPBRG_BRG0_LENGTH equ 0001h
SPBRG_BRG0_MASK equ 0001h
SPBRG_BRG1_POSN equ 0001h
SPBRG_BRG1_POSITION equ 0001h
SPBRG_BRG1_SIZE equ 0001h
SPBRG_BRG1_LENGTH equ 0001h
SPBRG_BRG1_MASK equ 0002h
SPBRG_BRG2_POSN equ 0002h
SPBRG_BRG2_POSITION equ 0002h
SPBRG_BRG2_SIZE equ 0001h
SPBRG_BRG2_LENGTH equ 0001h
SPBRG_BRG2_MASK equ 0004h
SPBRG_BRG3_POSN equ 0003h
SPBRG_BRG3_POSITION equ 0003h
SPBRG_BRG3_SIZE equ 0001h
SPBRG_BRG3_LENGTH equ 0001h
SPBRG_BRG3_MASK equ 0008h
SPBRG_BRG4_POSN equ 0004h
SPBRG_BRG4_POSITION equ 0004h
SPBRG_BRG4_SIZE equ 0001h
SPBRG_BRG4_LENGTH equ 0001h
SPBRG_BRG4_MASK equ 0010h
SPBRG_BRG5_POSN equ 0005h
SPBRG_BRG5_POSITION equ 0005h
SPBRG_BRG5_SIZE equ 0001h
SPBRG_BRG5_LENGTH equ 0001h
SPBRG_BRG5_MASK equ 0020h
SPBRG_BRG6_POSN equ 0006h
SPBRG_BRG6_POSITION equ 0006h
SPBRG_BRG6_SIZE equ 0001h
SPBRG_BRG6_LENGTH equ 0001h
SPBRG_BRG6_MASK equ 0040h
SPBRG_BRG7_POSN equ 0007h
SPBRG_BRG7_POSITION equ 0007h
SPBRG_BRG7_SIZE equ 0001h
SPBRG_BRG7_LENGTH equ 0001h
SPBRG_BRG7_MASK equ 0080h



SPBRGH equ 009Ah

SPBRGH_SPBRGH_POSN equ 0000h
SPBRGH_SPBRGH_POSITION equ 0000h
SPBRGH_SPBRGH_SIZE equ 0008h
SPBRGH_SPBRGH_LENGTH equ 0008h
SPBRGH_SPBRGH_MASK equ 00FFh
SPBRGH_BRG8_POSN equ 0000h
SPBRGH_BRG8_POSITION equ 0000h
SPBRGH_BRG8_SIZE equ 0001h
SPBRGH_BRG8_LENGTH equ 0001h
SPBRGH_BRG8_MASK equ 0001h
SPBRGH_BRG9_POSN equ 0001h
SPBRGH_BRG9_POSITION equ 0001h
SPBRGH_BRG9_SIZE equ 0001h
SPBRGH_BRG9_LENGTH equ 0001h
SPBRGH_BRG9_MASK equ 0002h
SPBRGH_BRG10_POSN equ 0002h
SPBRGH_BRG10_POSITION equ 0002h
SPBRGH_BRG10_SIZE equ 0001h
SPBRGH_BRG10_LENGTH equ 0001h
SPBRGH_BRG10_MASK equ 0004h
SPBRGH_BRG11_POSN equ 0003h
SPBRGH_BRG11_POSITION equ 0003h
SPBRGH_BRG11_SIZE equ 0001h
SPBRGH_BRG11_LENGTH equ 0001h
SPBRGH_BRG11_MASK equ 0008h
SPBRGH_BRG12_POSN equ 0004h
SPBRGH_BRG12_POSITION equ 0004h
SPBRGH_BRG12_SIZE equ 0001h
SPBRGH_BRG12_LENGTH equ 0001h
SPBRGH_BRG12_MASK equ 0010h
SPBRGH_BRG13_POSN equ 0005h
SPBRGH_BRG13_POSITION equ 0005h
SPBRGH_BRG13_SIZE equ 0001h
SPBRGH_BRG13_LENGTH equ 0001h
SPBRGH_BRG13_MASK equ 0020h
SPBRGH_BRG14_POSN equ 0006h
SPBRGH_BRG14_POSITION equ 0006h
SPBRGH_BRG14_SIZE equ 0001h
SPBRGH_BRG14_LENGTH equ 0001h
SPBRGH_BRG14_MASK equ 0040h
SPBRGH_BRG15_POSN equ 0007h
SPBRGH_BRG15_POSITION equ 0007h
SPBRGH_BRG15_SIZE equ 0001h
SPBRGH_BRG15_LENGTH equ 0001h
SPBRGH_BRG15_MASK equ 0080h



PWM1CON equ 009Bh

PWM1CON_PDC_POSN equ 0000h
PWM1CON_PDC_POSITION equ 0000h
PWM1CON_PDC_SIZE equ 0007h
PWM1CON_PDC_LENGTH equ 0007h
PWM1CON_PDC_MASK equ 007Fh
PWM1CON_PRSEN_POSN equ 0007h
PWM1CON_PRSEN_POSITION equ 0007h
PWM1CON_PRSEN_SIZE equ 0001h
PWM1CON_PRSEN_LENGTH equ 0001h
PWM1CON_PRSEN_MASK equ 0080h
PWM1CON_PDC0_POSN equ 0000h
PWM1CON_PDC0_POSITION equ 0000h
PWM1CON_PDC0_SIZE equ 0001h
PWM1CON_PDC0_LENGTH equ 0001h
PWM1CON_PDC0_MASK equ 0001h
PWM1CON_PDC1_POSN equ 0001h
PWM1CON_PDC1_POSITION equ 0001h
PWM1CON_PDC1_SIZE equ 0001h
PWM1CON_PDC1_LENGTH equ 0001h
PWM1CON_PDC1_MASK equ 0002h
PWM1CON_PDC2_POSN equ 0002h
PWM1CON_PDC2_POSITION equ 0002h
PWM1CON_PDC2_SIZE equ 0001h
PWM1CON_PDC2_LENGTH equ 0001h
PWM1CON_PDC2_MASK equ 0004h
PWM1CON_PDC3_POSN equ 0003h
PWM1CON_PDC3_POSITION equ 0003h
PWM1CON_PDC3_SIZE equ 0001h
PWM1CON_PDC3_LENGTH equ 0001h
PWM1CON_PDC3_MASK equ 0008h
PWM1CON_PDC4_POSN equ 0004h
PWM1CON_PDC4_POSITION equ 0004h
PWM1CON_PDC4_SIZE equ 0001h
PWM1CON_PDC4_LENGTH equ 0001h
PWM1CON_PDC4_MASK equ 0010h
PWM1CON_PDC5_POSN equ 0005h
PWM1CON_PDC5_POSITION equ 0005h
PWM1CON_PDC5_SIZE equ 0001h
PWM1CON_PDC5_LENGTH equ 0001h
PWM1CON_PDC5_MASK equ 0020h
PWM1CON_PDC6_POSN equ 0006h
PWM1CON_PDC6_POSITION equ 0006h
PWM1CON_PDC6_SIZE equ 0001h
PWM1CON_PDC6_LENGTH equ 0001h
PWM1CON_PDC6_MASK equ 0040h



ECCPAS equ 009Ch

ECCPAS_PSSBD_POSN equ 0000h
ECCPAS_PSSBD_POSITION equ 0000h
ECCPAS_PSSBD_SIZE equ 0002h
ECCPAS_PSSBD_LENGTH equ 0002h
ECCPAS_PSSBD_MASK equ 0003h
ECCPAS_PSSAC_POSN equ 0002h
ECCPAS_PSSAC_POSITION equ 0002h
ECCPAS_PSSAC_SIZE equ 0002h
ECCPAS_PSSAC_LENGTH equ 0002h
ECCPAS_PSSAC_MASK equ 000Ch
ECCPAS_ECCPAS_POSN equ 0004h
ECCPAS_ECCPAS_POSITION equ 0004h
ECCPAS_ECCPAS_SIZE equ 0003h
ECCPAS_ECCPAS_LENGTH equ 0003h
ECCPAS_ECCPAS_MASK equ 0070h
ECCPAS_ECCPASE_POSN equ 0007h
ECCPAS_ECCPASE_POSITION equ 0007h
ECCPAS_ECCPASE_SIZE equ 0001h
ECCPAS_ECCPASE_LENGTH equ 0001h
ECCPAS_ECCPASE_MASK equ 0080h
ECCPAS_PSSBD0_POSN equ 0000h
ECCPAS_PSSBD0_POSITION equ 0000h
ECCPAS_PSSBD0_SIZE equ 0001h
ECCPAS_PSSBD0_LENGTH equ 0001h
ECCPAS_PSSBD0_MASK equ 0001h
ECCPAS_PSSBD1_POSN equ 0001h
ECCPAS_PSSBD1_POSITION equ 0001h
ECCPAS_PSSBD1_SIZE equ 0001h
ECCPAS_PSSBD1_LENGTH equ 0001h
ECCPAS_PSSBD1_MASK equ 0002h
ECCPAS_PSSAC0_POSN equ 0002h
ECCPAS_PSSAC0_POSITION equ 0002h
ECCPAS_PSSAC0_SIZE equ 0001h
ECCPAS_PSSAC0_LENGTH equ 0001h
ECCPAS_PSSAC0_MASK equ 0004h
ECCPAS_PSSAC1_POSN equ 0003h
ECCPAS_PSSAC1_POSITION equ 0003h
ECCPAS_PSSAC1_SIZE equ 0001h
ECCPAS_PSSAC1_LENGTH equ 0001h
ECCPAS_PSSAC1_MASK equ 0008h
ECCPAS_ECCPAS0_POSN equ 0004h
ECCPAS_ECCPAS0_POSITION equ 0004h
ECCPAS_ECCPAS0_SIZE equ 0001h
ECCPAS_ECCPAS0_LENGTH equ 0001h
ECCPAS_ECCPAS0_MASK equ 0010h
ECCPAS_ECCPAS1_POSN equ 0005h
ECCPAS_ECCPAS1_POSITION equ 0005h
ECCPAS_ECCPAS1_SIZE equ 0001h
ECCPAS_ECCPAS1_LENGTH equ 0001h
ECCPAS_ECCPAS1_MASK equ 0020h
ECCPAS_ECCPAS2_POSN equ 0006h
ECCPAS_ECCPAS2_POSITION equ 0006h
ECCPAS_ECCPAS2_SIZE equ 0001h
ECCPAS_ECCPAS2_LENGTH equ 0001h
ECCPAS_ECCPAS2_MASK equ 0040h



PSTRCON equ 009Dh

PSTRCON_STRA_POSN equ 0000h
PSTRCON_STRA_POSITION equ 0000h
PSTRCON_STRA_SIZE equ 0001h
PSTRCON_STRA_LENGTH equ 0001h
PSTRCON_STRA_MASK equ 0001h
PSTRCON_STRB_POSN equ 0001h
PSTRCON_STRB_POSITION equ 0001h
PSTRCON_STRB_SIZE equ 0001h
PSTRCON_STRB_LENGTH equ 0001h
PSTRCON_STRB_MASK equ 0002h
PSTRCON_STRC_POSN equ 0002h
PSTRCON_STRC_POSITION equ 0002h
PSTRCON_STRC_SIZE equ 0001h
PSTRCON_STRC_LENGTH equ 0001h
PSTRCON_STRC_MASK equ 0004h
PSTRCON_STRD_POSN equ 0003h
PSTRCON_STRD_POSITION equ 0003h
PSTRCON_STRD_SIZE equ 0001h
PSTRCON_STRD_LENGTH equ 0001h
PSTRCON_STRD_MASK equ 0008h
PSTRCON_STRSYNC_POSN equ 0004h
PSTRCON_STRSYNC_POSITION equ 0004h
PSTRCON_STRSYNC_SIZE equ 0001h
PSTRCON_STRSYNC_LENGTH equ 0001h
PSTRCON_STRSYNC_MASK equ 0010h



ADRESL equ 009Eh



ADCON1 equ 009Fh

ADCON1_VCFG0_POSN equ 0004h
ADCON1_VCFG0_POSITION equ 0004h
ADCON1_VCFG0_SIZE equ 0001h
ADCON1_VCFG0_LENGTH equ 0001h
ADCON1_VCFG0_MASK equ 0010h
ADCON1_VCFG1_POSN equ 0005h
ADCON1_VCFG1_POSITION equ 0005h
ADCON1_VCFG1_SIZE equ 0001h
ADCON1_VCFG1_LENGTH equ 0001h
ADCON1_VCFG1_MASK equ 0020h
ADCON1_ADFM_POSN equ 0007h
ADCON1_ADFM_POSITION equ 0007h
ADCON1_ADFM_SIZE equ 0001h
ADCON1_ADFM_LENGTH equ 0001h
ADCON1_ADFM_MASK equ 0080h



WDTCON equ 0105h

WDTCON_SWDTEN_POSN equ 0000h
WDTCON_SWDTEN_POSITION equ 0000h
WDTCON_SWDTEN_SIZE equ 0001h
WDTCON_SWDTEN_LENGTH equ 0001h
WDTCON_SWDTEN_MASK equ 0001h
WDTCON_WDTPS_POSN equ 0001h
WDTCON_WDTPS_POSITION equ 0001h
WDTCON_WDTPS_SIZE equ 0004h
WDTCON_WDTPS_LENGTH equ 0004h
WDTCON_WDTPS_MASK equ 001Eh
WDTCON_WDTPS0_POSN equ 0001h
WDTCON_WDTPS0_POSITION equ 0001h
WDTCON_WDTPS0_SIZE equ 0001h
WDTCON_WDTPS0_LENGTH equ 0001h
WDTCON_WDTPS0_MASK equ 0002h
WDTCON_WDTPS1_POSN equ 0002h
WDTCON_WDTPS1_POSITION equ 0002h
WDTCON_WDTPS1_SIZE equ 0001h
WDTCON_WDTPS1_LENGTH equ 0001h
WDTCON_WDTPS1_MASK equ 0004h
WDTCON_WDTPS2_POSN equ 0003h
WDTCON_WDTPS2_POSITION equ 0003h
WDTCON_WDTPS2_SIZE equ 0001h
WDTCON_WDTPS2_LENGTH equ 0001h
WDTCON_WDTPS2_MASK equ 0008h
WDTCON_WDTPS3_POSN equ 0004h
WDTCON_WDTPS3_POSITION equ 0004h
WDTCON_WDTPS3_SIZE equ 0001h
WDTCON_WDTPS3_LENGTH equ 0001h
WDTCON_WDTPS3_MASK equ 0010h



CM1CON0 equ 0107h

CM1CON0_C1CH_POSN equ 0000h
CM1CON0_C1CH_POSITION equ 0000h
CM1CON0_C1CH_SIZE equ 0002h
CM1CON0_C1CH_LENGTH equ 0002h
CM1CON0_C1CH_MASK equ 0003h
CM1CON0_C1R_POSN equ 0002h
CM1CON0_C1R_POSITION equ 0002h
CM1CON0_C1R_SIZE equ 0001h
CM1CON0_C1R_LENGTH equ 0001h
CM1CON0_C1R_MASK equ 0004h
CM1CON0_C1POL_POSN equ 0004h
CM1CON0_C1POL_POSITION equ 0004h
CM1CON0_C1POL_SIZE equ 0001h
CM1CON0_C1POL_LENGTH equ 0001h
CM1CON0_C1POL_MASK equ 0010h
CM1CON0_C1OE_POSN equ 0005h
CM1CON0_C1OE_POSITION equ 0005h
CM1CON0_C1OE_SIZE equ 0001h
CM1CON0_C1OE_LENGTH equ 0001h
CM1CON0_C1OE_MASK equ 0020h
CM1CON0_C1OUT_POSN equ 0006h
CM1CON0_C1OUT_POSITION equ 0006h
CM1CON0_C1OUT_SIZE equ 0001h
CM1CON0_C1OUT_LENGTH equ 0001h
CM1CON0_C1OUT_MASK equ 0040h
CM1CON0_C1ON_POSN equ 0007h
CM1CON0_C1ON_POSITION equ 0007h
CM1CON0_C1ON_SIZE equ 0001h
CM1CON0_C1ON_LENGTH equ 0001h
CM1CON0_C1ON_MASK equ 0080h
CM1CON0_C1CH0_POSN equ 0000h
CM1CON0_C1CH0_POSITION equ 0000h
CM1CON0_C1CH0_SIZE equ 0001h
CM1CON0_C1CH0_LENGTH equ 0001h
CM1CON0_C1CH0_MASK equ 0001h
CM1CON0_C1CH1_POSN equ 0001h
CM1CON0_C1CH1_POSITION equ 0001h
CM1CON0_C1CH1_SIZE equ 0001h
CM1CON0_C1CH1_LENGTH equ 0001h
CM1CON0_C1CH1_MASK equ 0002h



CM2CON0 equ 0108h

CM2CON0_C2CH_POSN equ 0000h
CM2CON0_C2CH_POSITION equ 0000h
CM2CON0_C2CH_SIZE equ 0002h
CM2CON0_C2CH_LENGTH equ 0002h
CM2CON0_C2CH_MASK equ 0003h
CM2CON0_C2R_POSN equ 0002h
CM2CON0_C2R_POSITION equ 0002h
CM2CON0_C2R_SIZE equ 0001h
CM2CON0_C2R_LENGTH equ 0001h
CM2CON0_C2R_MASK equ 0004h
CM2CON0_C2POL_POSN equ 0004h
CM2CON0_C2POL_POSITION equ 0004h
CM2CON0_C2POL_SIZE equ 0001h
CM2CON0_C2POL_LENGTH equ 0001h
CM2CON0_C2POL_MASK equ 0010h
CM2CON0_C2OE_POSN equ 0005h
CM2CON0_C2OE_POSITION equ 0005h
CM2CON0_C2OE_SIZE equ 0001h
CM2CON0_C2OE_LENGTH equ 0001h
CM2CON0_C2OE_MASK equ 0020h
CM2CON0_C2OUT_POSN equ 0006h
CM2CON0_C2OUT_POSITION equ 0006h
CM2CON0_C2OUT_SIZE equ 0001h
CM2CON0_C2OUT_LENGTH equ 0001h
CM2CON0_C2OUT_MASK equ 0040h
CM2CON0_C2ON_POSN equ 0007h
CM2CON0_C2ON_POSITION equ 0007h
CM2CON0_C2ON_SIZE equ 0001h
CM2CON0_C2ON_LENGTH equ 0001h
CM2CON0_C2ON_MASK equ 0080h
CM2CON0_C2CH0_POSN equ 0000h
CM2CON0_C2CH0_POSITION equ 0000h
CM2CON0_C2CH0_SIZE equ 0001h
CM2CON0_C2CH0_LENGTH equ 0001h
CM2CON0_C2CH0_MASK equ 0001h
CM2CON0_C2CH1_POSN equ 0001h
CM2CON0_C2CH1_POSITION equ 0001h
CM2CON0_C2CH1_SIZE equ 0001h
CM2CON0_C2CH1_LENGTH equ 0001h
CM2CON0_C2CH1_MASK equ 0002h



CM2CON1 equ 0109h

CM2CON1_C2SYNC_POSN equ 0000h
CM2CON1_C2SYNC_POSITION equ 0000h
CM2CON1_C2SYNC_SIZE equ 0001h
CM2CON1_C2SYNC_LENGTH equ 0001h
CM2CON1_C2SYNC_MASK equ 0001h
CM2CON1_T1GSS_POSN equ 0001h
CM2CON1_T1GSS_POSITION equ 0001h
CM2CON1_T1GSS_SIZE equ 0001h
CM2CON1_T1GSS_LENGTH equ 0001h
CM2CON1_T1GSS_MASK equ 0002h
CM2CON1_C2RSEL_POSN equ 0004h
CM2CON1_C2RSEL_POSITION equ 0004h
CM2CON1_C2RSEL_SIZE equ 0001h
CM2CON1_C2RSEL_LENGTH equ 0001h
CM2CON1_C2RSEL_MASK equ 0010h
CM2CON1_C1RSEL_POSN equ 0005h
CM2CON1_C1RSEL_POSITION equ 0005h
CM2CON1_C1RSEL_SIZE equ 0001h
CM2CON1_C1RSEL_LENGTH equ 0001h
CM2CON1_C1RSEL_MASK equ 0020h
CM2CON1_MC2OUT_POSN equ 0006h
CM2CON1_MC2OUT_POSITION equ 0006h
CM2CON1_MC2OUT_SIZE equ 0001h
CM2CON1_MC2OUT_LENGTH equ 0001h
CM2CON1_MC2OUT_MASK equ 0040h
CM2CON1_MC1OUT_POSN equ 0007h
CM2CON1_MC1OUT_POSITION equ 0007h
CM2CON1_MC1OUT_SIZE equ 0001h
CM2CON1_MC1OUT_LENGTH equ 0001h
CM2CON1_MC1OUT_MASK equ 0080h



EEDATA equ 010Ch



EEADR equ 010Dh



EEDATH equ 010Eh



EEADRH equ 010Fh



SRCON equ 0185h

SRCON_FVREN_POSN equ 0000h
SRCON_FVREN_POSITION equ 0000h
SRCON_FVREN_SIZE equ 0001h
SRCON_FVREN_LENGTH equ 0001h
SRCON_FVREN_MASK equ 0001h
SRCON_PULSR_POSN equ 0002h
SRCON_PULSR_POSITION equ 0002h
SRCON_PULSR_SIZE equ 0001h
SRCON_PULSR_LENGTH equ 0001h
SRCON_PULSR_MASK equ 0004h
SRCON_PULSS_POSN equ 0003h
SRCON_PULSS_POSITION equ 0003h
SRCON_PULSS_SIZE equ 0001h
SRCON_PULSS_LENGTH equ 0001h
SRCON_PULSS_MASK equ 0008h
SRCON_C2REN_POSN equ 0004h
SRCON_C2REN_POSITION equ 0004h
SRCON_C2REN_SIZE equ 0001h
SRCON_C2REN_LENGTH equ 0001h
SRCON_C2REN_MASK equ 0010h
SRCON_C1SEN_POSN equ 0005h
SRCON_C1SEN_POSITION equ 0005h
SRCON_C1SEN_SIZE equ 0001h
SRCON_C1SEN_LENGTH equ 0001h
SRCON_C1SEN_MASK equ 0020h
SRCON_SR0_POSN equ 0006h
SRCON_SR0_POSITION equ 0006h
SRCON_SR0_SIZE equ 0001h
SRCON_SR0_LENGTH equ 0001h
SRCON_SR0_MASK equ 0040h
SRCON_SR1_POSN equ 0007h
SRCON_SR1_POSITION equ 0007h
SRCON_SR1_SIZE equ 0001h
SRCON_SR1_LENGTH equ 0001h
SRCON_SR1_MASK equ 0080h



BAUDCTL equ 0187h

BAUDCTL_ABDEN_POSN equ 0000h
BAUDCTL_ABDEN_POSITION equ 0000h
BAUDCTL_ABDEN_SIZE equ 0001h
BAUDCTL_ABDEN_LENGTH equ 0001h
BAUDCTL_ABDEN_MASK equ 0001h
BAUDCTL_WUE_POSN equ 0001h
BAUDCTL_WUE_POSITION equ 0001h
BAUDCTL_WUE_SIZE equ 0001h
BAUDCTL_WUE_LENGTH equ 0001h
BAUDCTL_WUE_MASK equ 0002h
BAUDCTL_BRG16_POSN equ 0003h
BAUDCTL_BRG16_POSITION equ 0003h
BAUDCTL_BRG16_SIZE equ 0001h
BAUDCTL_BRG16_LENGTH equ 0001h
BAUDCTL_BRG16_MASK equ 0008h
BAUDCTL_SCKP_POSN equ 0004h
BAUDCTL_SCKP_POSITION equ 0004h
BAUDCTL_SCKP_SIZE equ 0001h
BAUDCTL_SCKP_LENGTH equ 0001h
BAUDCTL_SCKP_MASK equ 0010h
BAUDCTL_RCIDL_POSN equ 0006h
BAUDCTL_RCIDL_POSITION equ 0006h
BAUDCTL_RCIDL_SIZE equ 0001h
BAUDCTL_RCIDL_LENGTH equ 0001h
BAUDCTL_RCIDL_MASK equ 0040h
BAUDCTL_ABDOVF_POSN equ 0007h
BAUDCTL_ABDOVF_POSITION equ 0007h
BAUDCTL_ABDOVF_SIZE equ 0001h
BAUDCTL_ABDOVF_LENGTH equ 0001h
BAUDCTL_ABDOVF_MASK equ 0080h



ANSEL equ 0188h

ANSEL_ANS0_POSN equ 0000h
ANSEL_ANS0_POSITION equ 0000h
ANSEL_ANS0_SIZE equ 0001h
ANSEL_ANS0_LENGTH equ 0001h
ANSEL_ANS0_MASK equ 0001h
ANSEL_ANS1_POSN equ 0001h
ANSEL_ANS1_POSITION equ 0001h
ANSEL_ANS1_SIZE equ 0001h
ANSEL_ANS1_LENGTH equ 0001h
ANSEL_ANS1_MASK equ 0002h
ANSEL_ANS2_POSN equ 0002h
ANSEL_ANS2_POSITION equ 0002h
ANSEL_ANS2_SIZE equ 0001h
ANSEL_ANS2_LENGTH equ 0001h
ANSEL_ANS2_MASK equ 0004h
ANSEL_ANS3_POSN equ 0003h
ANSEL_ANS3_POSITION equ 0003h
ANSEL_ANS3_SIZE equ 0001h
ANSEL_ANS3_LENGTH equ 0001h
ANSEL_ANS3_MASK equ 0008h
ANSEL_ANS4_POSN equ 0004h
ANSEL_ANS4_POSITION equ 0004h
ANSEL_ANS4_SIZE equ 0001h
ANSEL_ANS4_LENGTH equ 0001h
ANSEL_ANS4_MASK equ 0010h
ANSEL_ANS5_POSN equ 0005h
ANSEL_ANS5_POSITION equ 0005h
ANSEL_ANS5_SIZE equ 0001h
ANSEL_ANS5_LENGTH equ 0001h
ANSEL_ANS5_MASK equ 0020h
ANSEL_ANS6_POSN equ 0006h
ANSEL_ANS6_POSITION equ 0006h
ANSEL_ANS6_SIZE equ 0001h
ANSEL_ANS6_LENGTH equ 0001h
ANSEL_ANS6_MASK equ 0040h
ANSEL_ANS7_POSN equ 0007h
ANSEL_ANS7_POSITION equ 0007h
ANSEL_ANS7_SIZE equ 0001h
ANSEL_ANS7_LENGTH equ 0001h
ANSEL_ANS7_MASK equ 0080h



ANSELH equ 0189h

ANSELH_ANS8_POSN equ 0000h
ANSELH_ANS8_POSITION equ 0000h
ANSELH_ANS8_SIZE equ 0001h
ANSELH_ANS8_LENGTH equ 0001h
ANSELH_ANS8_MASK equ 0001h
ANSELH_ANS9_POSN equ 0001h
ANSELH_ANS9_POSITION equ 0001h
ANSELH_ANS9_SIZE equ 0001h
ANSELH_ANS9_LENGTH equ 0001h
ANSELH_ANS9_MASK equ 0002h
ANSELH_ANS10_POSN equ 0002h
ANSELH_ANS10_POSITION equ 0002h
ANSELH_ANS10_SIZE equ 0001h
ANSELH_ANS10_LENGTH equ 0001h
ANSELH_ANS10_MASK equ 0004h
ANSELH_ANS11_POSN equ 0003h
ANSELH_ANS11_POSITION equ 0003h
ANSELH_ANS11_SIZE equ 0001h
ANSELH_ANS11_LENGTH equ 0001h
ANSELH_ANS11_MASK equ 0008h
ANSELH_ANS12_POSN equ 0004h
ANSELH_ANS12_POSITION equ 0004h
ANSELH_ANS12_SIZE equ 0001h
ANSELH_ANS12_LENGTH equ 0001h
ANSELH_ANS12_MASK equ 0010h
ANSELH_ANS13_POSN equ 0005h
ANSELH_ANS13_POSITION equ 0005h
ANSELH_ANS13_SIZE equ 0001h
ANSELH_ANS13_LENGTH equ 0001h
ANSELH_ANS13_MASK equ 0020h



EECON1 equ 018Ch

EECON1_RD_POSN equ 0000h
EECON1_RD_POSITION equ 0000h
EECON1_RD_SIZE equ 0001h
EECON1_RD_LENGTH equ 0001h
EECON1_RD_MASK equ 0001h
EECON1_WR_POSN equ 0001h
EECON1_WR_POSITION equ 0001h
EECON1_WR_SIZE equ 0001h
EECON1_WR_LENGTH equ 0001h
EECON1_WR_MASK equ 0002h
EECON1_WREN_POSN equ 0002h
EECON1_WREN_POSITION equ 0002h
EECON1_WREN_SIZE equ 0001h
EECON1_WREN_LENGTH equ 0001h
EECON1_WREN_MASK equ 0004h
EECON1_WRERR_POSN equ 0003h
EECON1_WRERR_POSITION equ 0003h
EECON1_WRERR_SIZE equ 0001h
EECON1_WRERR_LENGTH equ 0001h
EECON1_WRERR_MASK equ 0008h
EECON1_EEPGD_POSN equ 0007h
EECON1_EEPGD_POSITION equ 0007h
EECON1_EEPGD_SIZE equ 0001h
EECON1_EEPGD_LENGTH equ 0001h
EECON1_EEPGD_MASK equ 0080h



EECON2 equ 018Dh
# 2819 "C:\\Program Files\\Microchip\\xc8\\v2.35\\pic\\include\\proc\\pic16f887.inc" 3
psect udata_shr,class=COMMON,space=1,noexec
psect udata,class=RAM,space=1,noexec
psect udata_bank0,class=BANK0,space=1,noexec
psect udata_bank1,class=BANK1,space=1,noexec
psect udata_bank2,class=BANK2,space=1,noexec
psect udata_bank3,class=BANK3,space=1,noexec
psect code,class=CODE,space=0,delta=2
psect data,class=STRCODE,space=0,delta=2,noexec
psect edata,class=EEDATA,space=3,delta=2,noexec
# 2774 "C:\\Program Files\\Microchip\\xc8\\v2.35\\pic\\include\\pic_as_chip_select.inc" 2 3
# 4 "C:\\Program Files\\Microchip\\xc8\\v2.35\\pic\\include\\pic.inc" 2 3




stk_offset SET 0
auto_size SET 0


; stack_auto defines a symbol /name/_offset which equates to the
; stack offset of the auto object in question

stack_auto MACRO name, size
name&_offset EQU stk_offset-size
stk_offset SET name&_offset
auto_size SET -stk_offset
ENDM


; stack_param defines a symbol /name/_offset which equates to the
; stack offset of the parameter object in question

stack_param MACRO name, size
name&_offset EQU stk_offset-size
stk_offset SET name&_offset
ENDM


; alloc_stack adjusts the SP to allocate space for auto objects
; it also links in to the btemp symbol so that can be used

alloc_stack MACRO
GLOBAL btemp
addfsr FSR1,auto_size
ENDM


; restore_stack adjusts the SP to remove all auto and parameter
; objects from the stack prior to returning from a function

restore_stack MACRO
addfsr FSR1,stk_offset
stk_offset SET 0
auto_size SET 0
ENDM
# 7 "C:\\Program Files\\Microchip\\xc8\\v2.35\\pic\\include\\xc.inc" 2 3
# 14 "RelojDigital_AidaToloza.s" 2

; CONFIGURACIÓN 1
  CONFIG FOSC = INTRC_NOCLKOUT
  CONFIG WDTE = OFF
  CONFIG PWRTE = OFF
  CONFIG MCLRE = OFF
  CONFIG CP = OFF
  CONFIG CPD = OFF
  CONFIG BOREN = OFF
  CONFIG IESO = OFF
  CONFIG FCMEN = OFF
  CONFIG LVP = OFF

; CONFIGURACIÓN 2
  CONFIG BOR4V = BOR40V
  CONFIG WRT = OFF


PSECT resVect, class=CODE, abs, delta=2

;--------------------------VARIABLES UNIVERSALES -------------------------------

PSECT udata_bank0

VCTMR0 EQU 250 ; VALOR DE LA FORMALA PARA ENCONTRAR N
DETE_LED EQU 63 ; VALOR PARA DETENER EL PARPADEO DE LOS LEDS
INI_TMR1L EQU 220 ; VALOR INICIAL DEL TMR1 PARA TMR1L
INI_TMR1H EQU 11 ; VALOR INICIAL DEL TMR1 PARA TMR1H
NTMR0 EQU 194 ; 194 LO QUE DA LAS FORMULAS
C_TMR1 EQU 2 ; 2 OPCIONES QUE OCURRIRAN CON SE ACTIVE LA INTERRUPCION DEL TMR1
DELAY_DISP EQU 63 ; VALOR INICIAL PARA HACER PARPADEAR LOS DISPLAY CUANDO ESTE EN MODO CONFIGURACION
C_BUZZER EQU 125 ; TIEMPO INICIAL PARA QUE SUENE EL BUZZER
INI_TMR2 EQU 125 ; VALOR DE LA FORMULA PARA ENCONTRAR LA COMPARACION DE LOS PRESCALER
VCTMR2 EQU 50 ; TIEMPO PARA EL TEMPORIZADOR
VCALARMA EQU 250 ; VALOR DE CADA CUANTO ESTARA CONTANDO LA ALARMA DEL TIMER
FIN_ALARMA EQU 60 ; VALOR PARA FINALIZAR LA ALARMA DEL TIMER

;--------------------------VARIABLES A UTILIZAR---------------------------------

MODO_TMR0: DS 1 ; SE GUARDARA CUANDO SE ENTRA A INTERRUPCION DEL TMR0 PARA EL RELOJ
ACTIVAR_LED: DS 1 ; VARIABLE PARA VER EL ESTADO DEL LED Y ENCENDERLO O APAGARLO SEGUN SEA EL CASO
MODO_TMR1: DS 1 ; SE GUARDARA CUANDO SE ENTRA A INTERRUPCION DEL TMR1 PARA EL RELOJ
CONFIG_DIS: DS 1 ; VARIABLE PARA HACER PARPADEAR LOS DISPLAY
ACTIVAR_BUZZER: DS 1 ; CONTADOR USADO PARA HACER SONAR EL BUZZER
MODO_TMR2: DS 1 ; SE GUARDARA CUANDO SE ENTRA A INTERRUPCION DEL TMR2 PARA EL RELOJ
SEG_ALARMA: DS 1 ; USADO PARA GUARDAR LOS SEGUNDO DESDE QUE SE ACTIVO EL BUZZER
MIN_ALARMA: DS 1 ; USADO PARA GUARDAR LOS MINUTOS DESDE QUE SE ACTIVO EL BUZZER
DELAY_CORTO: DS 1 ; SE GUARDAR EL RETRASO CORTO
DELAY_LARGO: DS 1 ; SE GUARDA EL RETRASO LARGO
BANDERAS_DIS: DS 1 ; DISPLAY QUE SERA ENCENDIDO
BANDERAS_MODO: DS 1 ; BANDERAS QUE INDICAN QUE ALGUNA CONDICION SE CUMPLIO
                 ; BIT 0 GUARDAR CAMBIOS
                 ; BIT 1 MODO EDICION
                 ; BIT 2 EDITAR MINUTO/MES O EDITAR MES/DIA
                 ; BIT 3 VALOR ANTERIOR DE LOS DISPLAY
                 ; BIT 4 PARPADEAR DE LOS DISPLAYS
                 ; BIT 5 SONAR EL BUZZER PARA AL GUARDAR UN DATO
                 ; BIT 6 ACTIVAR LA ALARMA DEL TIMER
BANDERAS_RB: DS 1 ; BANDERAS PARA INDICAR QUE ALGUNA CONDICION SE CUMPLIO DEL PUERTO B
                 ; BIT 0, DISMINUIR
                 ; BIT 1, AUMENTAR
                 ; BIT 2, PRESIONO ((PORTB) and 07Fh), 0
                 ; BIT 3; PRESIONO ((PORTB) and 07Fh), 1
                 ; BIT 4; PRESIONO ((PORTB) and 07Fh), 2
                 ; BIT 5; PRESIONO ((PORTB) and 07Fh), 5
ESTADO: DS 1 ; SELECCION DEL MODO DE OPERACION
NUEVO_VALOR: DS 1 ; VALOR A GUARDAR EL VALOR DEL PUERTO B
MANTENER_VALOR: DS 1 ; VALOR ANTERIOR DEL PUERTO B
DIS_PARTE1: DS 1 ; GUARDA EL VALOR EN EL DISPLAY 1 Y 2
DIS_PARTE2: DS 1 ; GUARDA EL VALOR EN EL DISPLAY 3 Y 4

;-----------------------VARIABLES PARA MODO HORA -------------------------------

SEG_HORA: DS 1 ; GUARDA EL VALOR DE LOS SEGUNDOS
MIN_HORA: DS 1 ; GUARDA EL VALOR DE LOS MINUTOS
HORAS: DS 1 ; GUARDA LA HORA

;-----------------VARIABLES PARA MODO CONFIGURACION HORA -----------------------

MINUTO_EDITAR: DS 1 ; GUARDA LOS MINUTOS CONFIGURADOS
HORA_EDITAR: DS 1 ; GUARDA LAS HORAS CONFIGURADOS

;----------------------VARIABLES PARA MODO FECHA -------------------------------

MES_BCD: DS 1 ; GUARDA EL VALOR DEL MES EN BCD
MES_BIN: DS 1 ; GUARDA EL VALOR DEL MES EN BINARIO
DIA: DS 1 ; GUARDA EL VALOR DEL DIA EN BCD
DIA_MAX: DS 1 ; GUARDA EL DIA MAXIMO POSIBLE SEGUN EL MES

;---------------VARIABLES PARA MODO CONFIGURACION FECHA-------------------------

MES_BCD_EDITAR: DS 1 ; GUARDA EL MES CONFIGURADOS EN BCD
MES_BIN_EDITAR: DS 1 ; GUARDA EL MES CONFIGURADOS EN BINARIO
DIA_EDITAR: DS 1 ; GUARDA EL DIA CONFIGURADOS

;----------------------VARIABLES PARA MODO TIMER -------------------------------

SEG_TIMER: DS 1 ; GUARDA EL VALOR DE LOS SEGUNDOS
MIN_TIMER: DS 1 ; GUARDA EL VALOR DE LOS MINUTOS

;-----------------------VARIABLES PARA MODO HORA -------------------------------

SEG_TIMER_CONFIG:DS 1 ; GUARDA LOS SEGUNDOS CONFIGURADOS
MIN_TIMER_CONFIG:DS 1 ; GUARDA LOS MINUTOS CONFIGURADOS

;--------------------------VARIABLES DE MEMORIA --------------------------------

SAVE_TEMP: DS 1 ; SE USA PARA GUARDAR TEMPORALMENTE EL VALOR ESCRITO EN EL PUERTO B
W_TEMP: DS 1
STATUS_TEMP: DS 1


;----------------------------VECTOR DEL RESET ----------------------------------

PSECT code, delta=2, abs
ORG 0x0000 ; posición 0000h para el reset

resVect:
    goto MAIN

;------------------------VECTOR DEL INTERRUPCIONES -----------------------------

PSECT intVect, class=code, delta=2, abs
ORG 0x0004

PUSH:
    MOVWF W_TEMP
    SWAPF STATUS, W
    MOVWF STATUS_TEMP

ISR:
    BTFSC INTCON, 2 ; Interrupcion de TMR0?
    GOTO INT_TMR0

    BTFSC PIR1, 0 ; Interrupcion de TMR1?
    GOTO INT_TMR1

    BTFSC PIR1, 1 ; Interrupcion de TMR2?
    GOTO INT_TMR2

    GOTO POP

POP:
    SWAPF STATUS_TEMP, W
    MOVWF STATUS
    SWAPF W_TEMP, F
    SWAPF W_TEMP, W
    RETFIE

;------------------------SUBRUTINAS DE INTERRUPCIONES---------------------------

;---------------------INTERRUPCION TIMER 0 (MODO HORA)--------------------------

INT_TMR0:
    MOVLW NTMR0
    MOVWF TMR0
    BCF INTCON, 2

    ;-------------------CONFIGURACION DE LOS SEGUNDOS---------------------------

    CONFIG_SEG:
    DECFSZ MODO_TMR0 ; SE VE CUANTO TIENE DE SEGUNDOS
    GOTO TERMINAR_CONFIG_HORA ; SE VA GUARDAR LOS VALORES
    MOVLW VCTMR0 ; EL VALOR INICIAL DEL TMR0 DE LA FORMULA SE PASA A VALOR DEL MODO
    MOVWF MODO_TMR0
    INCF SEG_HORA,F ; SE INCREMENTA EL VALOR DE LOS SEGUNDOS

    ;-------CONFIGURACION PARA INDICAR QUE SE GUARDARON LAS CONFIGURACIONES-----

    TERMINAR_CONFIG_HORA:
    BTFSS BANDERAS_MODO,6 ; SE VERIFICA SI SE ENCENDIO LA BANDERA 6
    GOTO SONAR_BUZZER ; SE VA SONAR EL BUZZER PARA INDICAR QUE SE GUARDARON LOS VALORES

    DECFSZ SEG_ALARMA ; SE VERIFICA CUANTOS MINUTOS SE TIENE
    GOTO SONAR_BUZZER

    MOVLW VCALARMA
    MOVWF SEG_ALARMA
    DECFSZ MIN_ALARMA,F
    GOTO SONAR_BUZZER

    BCF BANDERAS_MODO,6
    MOVLW FIN_ALARMA
    MOVWF MIN_ALARMA

    ;------------------CONFIGURACION PARA SONAR EL BUZZER ----------------------

    SONAR_BUZZER:

    BTFSS BANDERAS_MODO,5 ; SE VERIFICA SI SE ENCENDIO LA BANDERA 5
    GOTO PARPADEAR_DIS ; SE TERMINAR DE PARPADEAR LOS DISPLAY

    BSF PORTE,1 ; SE ACTIVA EL PUERTO DEL BUSSER
    DECF ACTIVAR_BUZZER,F
    BTFSS STATUS,2
    GOTO PARPADEAR_DIS

    MOVLW C_BUZZER
    MOVWF ACTIVAR_BUZZER
    BCF PORTE,1
    BCF BANDERAS_MODO, 5 ; SE LIMPIA LA BANDERA

    ;-----------CONFIGURACIONES PARA PARPADEAR LOS DISPLAYS---------------------

    PARPADEAR_DIS:

    DECFSZ CONFIG_DIS,F ; SI LO ANTERIOR DA 0 SE SALTA EL GOTO
    GOTO PARPADEAR_LEDS

    MOVLW DELAY_DISP
    MOVWF CONFIG_DIS

    MOVF BANDERAS_MODO,W
    ANDLW 11101111B ; SE CONSERVAN TODOS MENOS EL BIT 4
    MOVWF SAVE_TEMP
    COMF BANDERAS_MODO, W
    ANDLW 0010000B ; SE CONSERVA SOLO EL BIT4
    ADDWF SAVE_TEMP,W
    MOVWF BANDERAS_MODO

;-------------------PARPADEAR A CADA SEGUNDO LOS LEDS --------------------------

    PARPADEAR_LEDS: ; SE DETIENE DE PARPADEAR LOS LEDS PORQUE SE ESTA EN MODO CONFIGURACION

    DECFSZ ACTIVAR_LED,F ; SI DA 0 ES QUE YA PASARON 500 MS
    GOTO POP

    ;---------------SI ESTA EN MODO MODO_TODOS_NORMAL PARPADEAN CADA 500 MS----------------

    MOVF PORTE,W
    BTFSS BANDERAS_MODO,6
    ANDLW 1011B ; SE CONSERVAN TODOS MENOS ((PORTE) and 07Fh), 2
    BTFSC BANDERAS_MODO,6
    ANDLW 1001B

    MOVWF SAVE_TEMP
    COMF PORTE, W
    BTFSS BANDERAS_MODO,6
    ANDLW 0100B ; SE CONSERVA SOLO ((PORTE) and 07Fh), 2
    BTFSC BANDERAS_MODO,6
    ANDLW 0110B ; SE CONSERVA SOLO ((PORTE) and 07Fh), 2 Y ((PORTE) and 07Fh), 1 PARA HACER SONAR LA ALARMA DEL TEMPORIZADOR
    ADDWF SAVE_TEMP,W
    MOVWF PORTE
    MOVLW DETE_LED
    MOVWF ACTIVAR_LED
    GOTO POP

;----------------INTERRUPCION TIMER 1 (MODO CONFIGURACION)----------------------

INT_TMR1:

    MOVLW INI_TMR1H
    MOVWF TMR1H
    MOVLW INI_TMR1L
    MOVWF TMR1L
    BCF PIR1,0 ; SE LIMPIA EL FLAG DE LA INTERRUPCION

    DECF MODO_TMR1
    BTFSS STATUS,2 ; SI LO ANTERIOR DA 0 SE EJECUTA EL CODIGO QUE LE SIGUE
    GOTO POP

    MOVLW C_TMR1
    MOVWF MODO_TMR1
    BCF T1CON,0 ; SE APAGA EL TMR1
    BCF BANDERAS_MODO,1 ; SE SALE DEL MODO EDICION
    BCF BANDERAS_MODO,2 ; SE COLOCA EN DIA/HORA EN LA EDICION
    BSF BANDERAS_MODO,5 ; SE ACTIVA QUE SUENE EL BUZZER

    BTFSC ESTADO,0 ; SI ESTABA ACTIVO ES QUE SE ESTABA EDITANDO LA HORA
    GOTO CONGIG_HORA
    BTFSC ESTADO,1 ; SE ESTABA EN 1, ES QUE SE ESTABA EDITANDO LA FECHA
    GOTO CONFIG_FECHA
    BTFSC ESTADO,2 ; SI ESTABA EN 1, ES QUE SE ESTABA EDITANDO EL CRONOMETRO
    GOTO CONGIG_TIMER

    CONGIG_HORA: ; SE ESTABA EDITANDO LA HORA Y SE GUARDAN LOS VALORES ESTABLECIDOS
    MOVF MINUTO_EDITAR,W
    MOVWF MIN_HORA
    MOVF HORA_EDITAR,W
    MOVWF HORAS
    CLRF SEG_HORA
    GOTO POP

    CONFIG_FECHA: ; SE ESTABA EDITANDO LA FECHA Y SE GUARDAN LOS VALORES ESTABLECIDOS
    MOVF MES_BCD_EDITAR,W
    MOVWF MES_BCD
    MOVF DIA_EDITAR,W
    MOVWF DIA
    MOVF MES_BIN_EDITAR,W
    MOVWF MES_BIN
    GOTO POP

    CONGIG_TIMER:
    BSF T2CON,2 ; SE ENCIENDE EL TEMPORIZADOR
    MOVF SEG_TIMER_CONFIG,W
    MOVWF SEG_TIMER
    MOVF MIN_TIMER_CONFIG,W
    MOVWF MIN_TIMER

INT_TMR2:
    BCF PIR1,1 ; SE LIMPIA
    DECFSZ MODO_TMR2,F
    GOTO POP

    MOVLW VCTMR2
    MOVWF MODO_TMR2
    DECFSZ SEG_TIMER,F
    GOTO MODO_TIMER_NORMAL
    ;----------------- SE VERIFICA SE SE AGOTO EL TIEMPO -----------------------

    MOVLW 0
    SUBWF MIN_TIMER,W ; LA UNICA FORMA DE QUE ESTO DE 0 ES SI MINUTOS ES 0
    BTFSS STATUS,2 ; 1 SI LO ANTERIOR DA 0
    GOTO MODO_TIMER_NORMAL

    BSF BANDERAS_MODO,6 ; SUENA LA ALARMA DEL TEMPORIZADOR
    BCF T2CON,2 ; SE APAGA EL TMR2
    CLRF TMR2 ; SE LIMPIA EL REGISTRO DEL TMR2
    CLRF SEG_TIMER
    GOTO POP ; SE SALE DE LA INTERRUPCION

    MODO_TIMER_NORMAL:
    ;----------------------- SE VERIFICA SI PASA DE 00 A 59---------------------
    MOVLW 255
    SUBWF SEG_TIMER,W
    BTFSS STATUS,2 ; SI DA 0 ES QUE SI SE PASO DE 00 A 59
    GOTO POP

    MOVLW 01011001B ; 59 EN BCD
    MOVWF SEG_TIMER

    DESCONTAR_TIMER:
    ;-------------SI NO SE ACABO EL TIEMPO DE DECREMENTAN LOS MINUTOS-----------
    DECF MIN_TIMER


;-------------------------------- TABLAS ---------------------------------------
PSECT code, delta=2,abs
ORG 0x00D0

TABLA:
    CLRF PCLATH ; Limpiamos registro PCLATH
    ANDLW 0x0F ; No saltar más del tamaño de la tabla
    ADDWF PCL
    RETLW 00111111B ; 0
    RETLW 00000110B ; 1
    RETLW 01011011B ; 2
    RETLW 01001111B ; 3
    RETLW 01100110B ; 4
    RETLW 01101101B ; 5
    RETLW 01111101B ; 6
    RETLW 00000111B ; 7
    RETLW 01111111B ; 8
    RETLW 01100111B ; 9
    RETLW 01110111B ; A
    RETLW 01111100B ; B
    RETLW 00111001B ; C
    RETLW 01011110B ; D
    RETLW 01111001B ; E
    RETLW 01110001B ; F

ORG 0x00E8

    ;------------------TABLA PARA LOS DIAS DE LOS MESES-------------------------

TABLA_MESES:
    CLRF PCLATH
    BTFSC BANDERAS_MODO, 1 ; SI SE ESTA EN MODO EDICION SE PASA ESTE VALOR
    MOVF MES_BIN_EDITAR,W
    BTFSS BANDERAS_MODO,1 ; SI SE ESTA EN MODO VISUALIZACION SE PASA ESTE VALOR
    MOVF MES_BIN,W
    andlw 0x0F
    addwf PCL
    NOP ; VARIABLE PARA 0 (EN FUNCIONAMIENTO NORMAL NO DEBERIA EJECUTARSE)
    RETLW 00110010B ; 31 EN BCD ENERO
    RETLW 00101001B ; 28 EN BCD FEBRERO
    RETLW 00110010B ; 31 EN BCD MARZO
    RETLW 00110001B ; 30 EN BCD ABRIL
    RETLW 00110010B ; 31 EN BCD MAYO
    RETLW 00110001B ; 30 EN BCD JUNIO
    RETLW 00110010B ; 31 EN BCD JULIO
    RETLW 00110010B ; 31 EN BCD AGOSTO
    RETLW 00110001B ; 30 EN BCD SEPTIEMBRE
    RETLW 00110010B ; 31 EN BCD OCTUBRE
    RETLW 00110001B ; 30 EN BCD NOVIEMBRE
    RETLW 00110010B ; 31 EN BCD DICIEMBRE

;------------------------------- CONFIGURACION ---------------------------------

PSECT code, delta=2, abs
ORG 0x00120 ; posición 100h para el codigo


MAIN:
    CALL CONFIG_IO ; Configuración de I/O

CONFIG_IO:
    BSF STATUS,6
    BSF STATUS,5 ;BANCO 3

    CLRF ANSEL
    CLRF ANSELH ;PUERTOS A, E Y B COMO I/O DIGITALES


    BCF STATUS,6 ; BANCO 1


    MOVLW 255
    MOVWF TRISB ; PUERTO B COMO ENTRADA DIGITAL
    CLRF TRISA ; PUERTO A COMO SALIDA
    CLRF TRISE ; PUERTO E COMO SALIDA
    CLRF TRISC ; PUERTO C, PARA EL DISPLAY
    CLRF TRISD ; PUERTO D, PARA CONTROLAR LOS DISPLAYS

    MOVLW 00000011B ; PULL UPS ACTIVAS, PRESCALER DE 1:16 ASIGNADO AL TMR0
    MOVWF OPTION_REG
    MOVLW 0000011B ; TMR2 Y TMR1 INTERUPCCION ACTIVADA
    MOVWF PIE1

    MOVLW INI_TMR2
    MOVWF PR2 ; CUENTA 125 VECES SE EJECUTA LA INTERRUPCION CADA 20mS

    MOVLW 11100000B ; INTERRUPCIONES ACTIVADAS, TMR0 INTERRUPCION ACTIVADA, PORTB INT ACTIVADA
    MOVWF INTCON


    BCF STATUS,5 ; BANCO 0

    MOVLW 01100000B ; APAGADO, GATE MODE ES ACTIVE LOW, Y CON PREESCALER DE 1:4
    MOVWF T1CON ; SE USARA PARA EL PARPADEO DE LOS DISPLAY CUANDO SE ESTE EN MODO DE EDICION
    MOVLW 1001010B
    MOVWF T2CON ; PRESSCALER 16 POST ESCALER DE 10 SE USA PARA EL CRONOMETRO OVERFLOW CADA 20mS

    CLRF PORTD
    CLRF PORTC
    CLRF PORTE
    MOVLW NTMR0 ; CUENTA DEL TMR0 INICIA EN 131 PARA QUE LA INTERRUPCION SE EJECUTE CADA
    MOVWF TMR0 ; 4 ms
    MOVLW INI_TMR1H
    MOVWF TMR1H
    MOVLW INI_TMR1L
    MOVWF TMR1L

    MOVLW DETE_LED
    MOVWF ACTIVAR_LED
    MOVLW VCTMR0
    MOVWF MODO_TMR0
    CLRF SEG_HORA
    CLRF MIN_HORA
    CLRF HORAS
    CLRF BANDERAS_MODO
    CLRF MIN_TIMER
    CLRF SEG_TIMER
    MOVLW 255
    MOVWF NUEVO_VALOR
    MOVWF MANTENER_VALOR

    MOVLW C_TMR1
    MOVWF MODO_TMR1

    MOVLW 00000001B
    MOVWF BANDERAS_DIS
    MOVWF ESTADO
    MOVWF DIA
    MOVWF MES_BCD
    MOVWF MES_BIN
    MOVLW C_BUZZER
    MOVWF ACTIVAR_BUZZER
    MOVLW VCTMR2
    MOVWF MODO_TMR2
    MOVWF PORTA


    MOVLW FIN_ALARMA
    MOVWF MIN_ALARMA
    MOVLW VCALARMA
    MOVWF SEG_ALARMA


;-----Código que se va a estar ejecutando mientras no hayan interrupciones------

LOOP:

    MOVLW 60
    SUBWF SEG_HORA,W
    BTFSC STATUS,2 ; SI SE CONTO 1 SEGUNDO SE EJECUTA
    CALL VALOR_RELOJ
    BTFSC BANDERAS_MODO,0 ; SI SE ACTIVA LA BANDERA DE FECHA ENTONCES SE CAMBIA LA FECHA
    CALL VALOR_FECHA

    ;--------------- CONTROL DEL TEMPORIZADOR ----------------------------------
    BTFSC T2CON,2 ; SE VERIFICA QUE EL TEMPORIZADOR ESTE EN FUNCIONAMIENTO
    CALL VALOR_TEMPORIZADOR

    ;---------CONTROL DE LA PESISTENCIA DE VISION PARA LOS DISPLAYS-------------

    ADDLW 0 ;SE ASEGURA QUE EL BIT ((STATUS) and 07Fh), 0 DE STATUS ESTE EN 0 PARA QUE EL CORRIEMENTO DE BIS SEA
    BTFSS BANDERAS_DIS,3
    GOTO MODO_TODOS_NORMAL

    CLRF BANDERAS_DIS
    MOVLW 255
    ADDLW 1

    MODO_TODOS_NORMAL:
    RLF BANDERAS_DIS ; SE CORREN 1 ESPACIO A LA IZQUIERDA LOS BITS

    ;-------------------------- LECTURA DEL PUERTOB ----------------------------


    MOVF NUEVO_VALOR,W ; SI HAY UN FLANCO DE SUBIDA EN CUALQUIERA DE LOS PUERTOS ENTONCES SE CAMBIA DE ESTADO
    MOVWF MANTENER_VALOR
    CALL DELAY_US ; DA TIEMPO A QUE LA SALIDA SE ESTABILICE
    MOVF PORTB,W
    MOVWF NUEVO_VALOR


    BTFSC MANTENER_VALOR,5 ; SE VERIFICA SI SE PRESIONO EL BOTON PARA ENTRAR EN MODO EDICION
    GOTO MANTANER_ESTADO_ACTUAL

    BTFSC NUEVO_VALOR,5
    BSF BANDERAS_MODO,1



    MANTANER_ESTADO_ACTUAL: ; SE VERIFICA SI SE PRESIONO EL BOTON PARA CAMBIAR DE OPCION

    BTFSC BANDERAS_MODO,1 ; SE VERIFICA QUE NO SI SE ENCUENTRA EN EL MODO EDICION
    GOTO OPCIONES ; SI SE ENCUENTRA EN ESTE MODO NO SE ATIENDE A ((PORTB) and 07Fh), 2 PARA EL CAMBIO DE MODO

    ;SI SE ENCUENTRA EN MODO VISUALIZACION, FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 2
    BTFSC MANTENER_VALOR,2 ; SI EL ANTERIOR ES 1 SE VERIFICA QUE EL VALOR ACTUAL SEA 0
    GOTO OPCIONES

    BTFSS NUEVO_VALOR,2 ; SI ES 0 SE CAMBIA DE ESTADO
    GOTO OPCIONES ; SE LLEGA A AQUI SI SE DETECTA UN FLANCO DE SUBIDA
    BTFSS ESTADO,2 ; SI ES 0 ES QUE TODAVIA NO SE HA ENTRADO A LA ESTADO 3
    GOTO OPCIONES_NORMAL

    MOVLW 1
    MOVWF ESTADO
    GOTO OPCIONES

    OPCIONES_NORMAL:
    MOVLW 0
    ADDLW 0 ; SE ASEGURA QUE EL BIT C DE STATUS ESTE EN 0
    RLF ESTADO


OPCIONES:
    MOVF ESTADO,W
    MOVWF PORTA ; SE VISUALIZA QUE ESTADO ESTA SELECCIONADA
    BTFSC ESTADO,0
    GOTO OPCION_RELOJ
    BTFSC ESTADO,1
    GOTO OPCION_FECHA
    BTFSC ESTADO,2
    GOTO OPCION_TIMER
    GOTO LOOP

    OPCION_RELOJ: ; SE VERIFICA SI SE ENCUENTRA EN MODO EDITAR O NO
    BTFSS BANDERAS_MODO,1
    GOTO NO_EDITAR_HORA
    GOTO SI_EDITAR_HORA

    NO_EDITAR_HORA:
    MOVF MIN_HORA,W
    MOVWF DIS_PARTE1
    MOVF HORAS,W
    MOVWF DIS_PARTE2
    CALL DISPLAY_NO_EDITAR

    GOTO LOOP

    SI_EDITAR_HORA:
    CALL EDITAR_HORA
    MOVF MINUTO_EDITAR,W
    MOVWF DIS_PARTE1
    MOVF HORA_EDITAR,W
    MOVWF DIS_PARTE2
    CALL DISPLAY_EDITAR
    GOTO LOOP

    OPCION_FECHA:
    BTFSS BANDERAS_MODO,1
    GOTO NO_EDITAR_FECHA
    GOTO SI_EDITAR_FECHA

    NO_EDITAR_FECHA:
    MOVF DIA,W
    MOVWF DIS_PARTE2
    MOVF MES_BCD,W
    MOVWF DIS_PARTE1
    CALL DISPLAY_NO_EDITAR

    GOTO LOOP

    SI_EDITAR_FECHA:
    CALL EDITAR_FECHA
    MOVF MES_BCD_EDITAR,W
    MOVWF DIS_PARTE1
    MOVF DIA_EDITAR,W
    MOVWF DIS_PARTE2
    CALL DISPLAY_EDITAR
    GOTO LOOP

    OPCION_TIMER:
    BTFSS BANDERAS_MODO,1
    GOTO NO_EDITAR_TIMER
    GOTO SI_EDITAR_TIMER

    NO_EDITAR_TIMER:
    BTFSC MANTENER_VALOR,1 ; SI SE HACE UN FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 1 SE APAGA LA ALARMA
    GOTO SEGUIR_NO_EDITAR

    BTFSS NUEVO_VALOR,1
    GOTO SEGUIR_NO_EDITAR

    BCF BANDERAS_MODO,6
    BCF PORTE,1
    MOVLW VCALARMA
    MOVWF SEG_ALARMA
    MOVLW FIN_ALARMA
    MOVWF MIN_ALARMA

    SEGUIR_NO_EDITAR:
    MOVF SEG_TIMER,W
    MOVWF DIS_PARTE1
    MOVF MIN_TIMER,W
    MOVWF DIS_PARTE2
    CALL DISPLAY_NO_EDITAR
    GOTO LOOP

    SI_EDITAR_TIMER:
    CALL EDITAR_TEMPORIZADOR
    MOVF SEG_TIMER_CONFIG,W
    MOVWF DIS_PARTE1
    MOVF MIN_TIMER_CONFIG,W
    MOVWF DIS_PARTE2
    CALL DISPLAY_EDITAR

    GOTO LOOP


;--------------------- SUBRUTINAS DE DISPLAY NORMAL-----------------------------

    DISPLAY_NO_EDITAR:
    BTFSC BANDERAS_DIS,1
    GOTO DISP_1_2
    BTFSC BANDERAS_DIS,2
    GOTO DISP_2_1
    BTFSC BANDERAS_DIS,3
    GOTO DISP_2_2

    MOVF DIS_PARTE1,W ; SI NINGUNO DE LOS ANTERIORES SE DIO ES QUE SE TENIA QUE ENTRAR AQUI
    ANDLW 00001111B ; SE CONSERVA EL NIBBLE MENOS SIGNFICATIVO
    CALL TABLA
    GOTO MOSTRAR_VALOR

    DISP_1_2:
    SWAPF DIS_PARTE1,W
    ANDLW 00001111B ; SE CONSERVA EL VALOR DEL BIT MENOS SIGNIFICATIVO
    CALL TABLA
    GOTO MOSTRAR_VALOR

    DISP_2_1:
    MOVF DIS_PARTE2,W
    ANDLW 00001111B
    CALL TABLA
    GOTO MOSTRAR_VALOR

    DISP_2_2:
    SWAPF DIS_PARTE2,W
    ANDLW 00001111B
    CALL TABLA

    MOSTRAR_VALOR:
    CLRF PORTD
    MOVWF PORTC
    MOVF BANDERAS_DIS,W
    MOVWF PORTD
    RETURN

DISPLAY_EDITAR:
    MOVLW 0 ; W SOLO SE SOBREESCRIBE SI EL DISPLAY TIENE QUE ESTAR ENCENDIDO
    BTFSC BANDERAS_DIS,1
    GOTO DISPLAY_1_2_EDITAR
    BTFSC BANDERAS_DIS,2
    GOTO DISPLAY_2_1_EDITAR
    BTFSC BANDERAS_DIS,3
    GOTO DISPLAY_2_2_EDITAR


    BTFSS BANDERAS_MODO,4 ; SI SE LLEGA AQUI ES QUE ESTE ERA EL QUE SE TENIA QUE ENCENDER
    GOTO DISPLAY_1_1_EDITAR_NORMAL


    BTFSS BANDERAS_MODO,2
    GOTO MOSTRAR_DISPLAY_EDITAR

    DISPLAY_1_1_EDITAR_NORMAL:
    MOVF DIS_PARTE1,W
    ANDLW 00001111B ; SE CONSERVA EL NIBBLE MENOS SIGNFICATIVO
    CALL TABLA
    GOTO MOSTRAR_DISPLAY_EDITAR

    DISPLAY_1_2_EDITAR:
    BTFSS BANDERAS_MODO,4
    GOTO DISPLAY_1_2_EDITAR_NORMAL

    BTFSS BANDERAS_MODO,2
    GOTO MOSTRAR_DISPLAY_EDITAR

    DISPLAY_1_2_EDITAR_NORMAL:
    SWAPF DIS_PARTE1,W
    ANDLW 00001111B ; SE CONSERVA EL VALOR DEL BIT MENOS SIGNIFICATIVO
    CALL TABLA
    GOTO MOSTRAR_DISPLAY_EDITAR

    DISPLAY_2_1_EDITAR:
     BTFSS BANDERAS_MODO,4
    GOTO DISPLAY_2_1_EDITAR_NORMAL

    BTFSC BANDERAS_MODO,2
    GOTO MOSTRAR_DISPLAY_EDITAR ; SE APAGAN TODOS LOS BITS DEL PUERTO C

    DISPLAY_2_1_EDITAR_NORMAL:
    MOVF DIS_PARTE2,W
    ANDLW 00001111B
    CALL TABLA
    GOTO MOSTRAR_DISPLAY_EDITAR

    DISPLAY_2_2_EDITAR:
    BTFSS BANDERAS_MODO,4
    GOTO DISPLAY_2_2_EDITAR_NORMAL

    BTFSC BANDERAS_MODO,2
    GOTO MOSTRAR_DISPLAY_EDITAR ; SE APAGAN TODOS LOS BITS DEL PUERTO C

    DISPLAY_2_2_EDITAR_NORMAL:
    SWAPF DIS_PARTE2,W
    ANDLW 00001111B
    CALL TABLA

    MOSTRAR_DISPLAY_EDITAR:
    CLRF PORTD
    MOVWF PORTC
    MOVF BANDERAS_DIS,W
    MOVWF PORTD
    RETURN


;---------------- SUBRUTINAS PRA EL CONTROL DE LOS DATOS -----------------------

CORRECCION_BCD_AUMENTO: ; PARA ESTA RUTA SE USA EL PASO POR REFERENCIA DE PARAMETRO, USANDO EL DIRECCIONAMIENTO INDIRECTO
    BCF BANDERAS_RB,1 ; PARA QUE NO SE TENGA QUE LIMPIAR DE FORMA EXTERNA
    MOVF INDF,W ; VALOR AL QUE APUNTA EL SFR SE MUEVE W
    ANDLW 00001111B ; SE QUEDA CON EL DIGITO MENOR
    SUBLW 10 ; SI ES 10 ES QUE SE DEBE DE CORREGIR
    BTFSS STATUS,2
    RETURN

    BSF BANDERAS_RB,1 ; SE INDICA QUE SE TUVO QUE REALIZAR LA CORRECCION
    MOVLW 6
    ADDWF INDF,F ; SE LE SUMA 6 PARA CORREGIR
    RETURN ; SE REGRESA

CORRECCION_BCD_DISMINUCION: ; PARA ESTA RUTA SE USA EL PASO POR REFERENCIA DE PARAMETRO, USANDO EL DIRECCIONAMIENTO INDIRECTO

    BCF BANDERAS_RB,0 ; PARA QUE NO SE TENGA QUE LIMPIAR DE FORMA EXTERNA
    MOVF INDF,W ; VALOR AL QUE APUNTA EL SFR SE MUEVE W
    ANDLW 00001111B ; SE QUEDA CON EL DIGITO MENOR
    SUBLW 15 ; SI ES 15 ES QUE SE DEBE DE CORREGIR
    BTFSS STATUS,2
    RETURN

    BSF BANDERAS_RB,0 ; SE INDICA QUE SE TUVO QUE REALIZAR LA CORRECCION
    MOVLW 6
    SUBWF INDF,F ; SE LE RESTA 6 PARA CORREGIR
    RETURN ; SE REGRESA

VALOR_TEMPORIZADOR: ; EN ESTA SUBRUTINA UNICAMENTE SE CORRIGEN LOS VALORES BCD
    MOVLW SEG_TIMER ; EL VALOR DE LA VARIABLE SEGUNDOS SE DISMINUYE EN LA INTERRUPCION DEL TMR2 AQUI SE CORRIGE EL BCD
    MOVWF FSR ; SE PASA LA DIRECCION DE ESTA VARIABLE A SFR PARA EL PASO POR REFERENCIA
    CALL CORRECCION_BCD_DISMINUCION ;SE CORRIGE EL BCD DE SEGUNDOS

    MOVLW MIN_TIMER
    MOVWF FSR ; PASO POR REFERENCIA
    CALL CORRECCION_BCD_DISMINUCION ;SE CORRIGE EL BCD
    RETURN

VALOR_FECHA: ; SUBRUTINA ENCARGADA DE REALIZAR EL CONTROL DE LA HORA Y LA FECHA DEL RELOJ
    BCF BANDERAS_MODO,0 ; SE APAGA LA BANDERA DE CAMBIO DE FECHA
    INCF DIA,F ; SE AUMENTA EL VALOR

    MOVLW DIA
    MOVWF FSR ; PASO POR REFERENCIA
    CALL CORRECCION_BCD_AUMENTO ; SE CORRIGE LA CODIFICACION BCD

    CALL TABLA_MESES ; AQUI SE VERIFICA SI EL NUEVO VALOR PARA EL DIA ES VALIDO O SI YA SE ENCUENTRA EN EL MES SIGUIENTE
    SUBWF DIA,W
    BTFSS STATUS,2 ; SI LO ANTERIOR DA 0 SE SALTA LA SIGUENTE INSTRUCCION
    RETURN

    MOVLW 1 ; SI SE SALTA AQUI SIGUE
    MOVWF DIA
    INCF MES_BIN,F
    INCF MES_BCD,F

    MOVLW MES_BCD ; SE CORRIGE EL BCD SI ES NECESARIO
    MOVWF FSR ; PASO POR REFERENCIA
    CALL CORRECCION_BCD_AUMENTO ; SE CORRIGE

    MOVLW 13 ; SE VERIFICA QUE NO SE PASE DE 12 MESES
    SUBWF MES_BIN,W
    BTFSS STATUS,2 ; SI DA 0 SE SALTA LA SIGUEINTE INSTRUCCION
    RETURN

    MOVLW 1 ; SE REINICIA LA CUENTA
    MOVWF MES_BIN
    MOVWF MES_BCD
    RETURN ; FIN DEL VALOR FECHA

VALOR_RELOJ: ; SE CONTROLA EN VALOR DEL RELOJ
    INCF MIN_HORA,F
    CLRF SEG_HORA

    MOVLW MIN_HORA
    MOVWF FSR ; PASO POR REFERENCIA DE LA VARIABLE
    CALL CORRECCION_BCD_AUMENTO ; SE CORRIGE

    MOVLW 01100000B ; SE VERIFICA QUE LLEGUE A 60
    SUBWF MIN_HORA,W
    BTFSS STATUS,2
    RETURN ; SI NO ES 60 NO ES NECESARIO SUMAR 1 A LAS HORAS

    CLRF MIN_HORA ; SI SI LLEGO A 60 SE INCREMENTAN LAS HORAS
    INCF HORAS, F

    MOVLW 00100100B ; SE VERIFICA QUE NO SE LLEGE A 24
    SUBWF HORAS,W
    BTFSS STATUS, 2 ; SI LLEGA A ESTO SE LIMPIA EL VALOR DE HORAS Y TERMINA LA RUTINA
    GOTO CORRECCION_HORA

    CLRF HORAS
    BSF BANDERAS_MODO,0 ; ESTE BIT INDICA QUE HAY QUE INCREMENTAR LA FECHA
    RETURN ; SI ES 24 SE SABE QUE NO ES NECESARIO CORREGIR LA CODIFICACION BCD

    CORRECCION_HORA:
    MOVLW HORAS
    MOVWF FSR ; PASO POR REFERNCIA
    CALL CORRECCION_BCD_AUMENTO ; SE CORRIGE EL BCD
    RETURN ; FIN DE LA CORRECCION

EDITAR_HORA: ; CUANDO SE ENTRA EN ESTE MODO ((PORTB) and 07Fh), 2 REALIZA LA FUNCION DE SELECTOR DE EDICION DE HORA O MINUTO


    BTFSC BANDERAS_MODO,3 ; ((PORTB) and 07Fh), 5 DETERMINA CUANDO SE SALE DE ESTE MODO
    GOTO SI_YA_SE_ENTRO_ANTES ; SE ENTRA A ESTA PARTE SOLO CUANDO ES LA PRIMERA VEZ

    BSF BANDERAS_MODO,3 ; PARA QUE NO SE VUELVA A ENTRAR AQUI HASTA QUE SE SALGA DEL MODO EDICION
    MOVF HORAS,W
    MOVWF HORA_EDITAR

    BSF T1CON,0 ; SE ACTIVA EL TIMER 1

    MOVF MIN_HORA,W
    MOVWF MINUTO_EDITAR ; SE GUARDAN LOS VALORES EN EL INSTANTE QUE SE ENTRA AL MODO DE EDICION

    MOVF NUEVO_VALOR,W ; SE ACTUALIZAN ESTOS REGISTROS YA QUE SI NO SE HACE, AL SER LA CONDICION
    MOVWF MANTENER_VALOR ; DE ENTRADA IGUAL QUE LA DE SALIDA, SOLO SE VA A EJECUTAR 1 VEZ
    CALL DELAY_US ; DA TIEMPO A QUE LA SALIDA SE ESTABILICE
    MOVF PORTB,W
    MOVWF NUEVO_VALOR

    SI_YA_SE_ENTRO_ANTES: ; SE EVITA EL PARPADEO DE LOS LEDS DEL CENTRO
    BSF PORTE,2
    CALL FLANCO_SUBIDA_RB0 ; SE REVISAN LOS FLANCOS DE SUBIDA
    CALL FLANCO_SUBIDA_RB1 ; SE MIRA SI HUBO UN FLANCO EN AUMENTAR O DISMINUIR


    CALL FLANCO_SUBIDA_RB2 ; SE HACE EL CAMBIO ENTRE 0 O 1 PARA EL VALOR A EDITAR (SE VERIFICA QUE HAYA OCURRIDO FLANCO DE SUBIDA)
    BTFSS BANDERAS_RB,4 ; SI ESTE ES 1 ES QUE SI HUBO FLANCO DE SUBIDA
    GOTO CAMBIAR ; SE HACE EL CAMBIO DEL VALOR A EDITAR

    BTFSS BANDERAS_MODO,2 ; SE VE SI ESTA EN 1
    GOTO CAMBIAR_0

    BCF BANDERAS_MODO,2 ; SE LIMPIA SI ESTA EN 1
    GOTO CAMBIAR

    CAMBIAR_0: ; SI NO ESTA EN 1 ESTA EN CERO ENTONCES
    BSF BANDERAS_MODO,2

    CAMBIAR:
    BTFSC BANDERAS_MODO,2 ; SE VE SI LA EDICION ESTA EN HORAS(1) O MINUTOS(0)
    GOTO EDIT_HOUR


    EDIT_MINUTE:
    BTFSS BANDERAS_RB,2 ; SI ESTA BANDERA ESTA EN 1 ES QUE HUBO FLANCO DE SUBIDA
    GOTO INCREMENTAR_MINUTE
    ;--------SI HUBO UN FLANCO DE SUBIDA SE EN ((PORTB) and 07Fh), 0 SE EJECUTA ESTO DECREMENTAR ---------------
    DECF MINUTO_EDITAR,F
    ;------------SE CORRIGE EL BCD DE LOS MINUTOS--------------------
    ;PRIMERO SE VERIFICA SI SE PASO DE 00 A 59
    MOVLW 255 ;ESTE VALOR HABRIA SI SE LE RESTA 1 A 0X00H
    SUBWF MINUTO_EDITAR,W
    BTFSS STATUS,2 ;SI ES 1 SE SALTA EL GOTO
    GOTO CORREGIR_BCD_MINUTO_EDITAR

    MOVLW 01011001B ;59 EN BCD
    MOVWF MINUTO_EDITAR

    CORREGIR_BCD_MINUTO_EDITAR:
    MOVLW MINUTO_EDITAR
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_DISMINUCION

    INCREMENTAR_MINUTE:
    ;---------------------- SE VERIFICA SI SE DEBE INCREMENTAR -------------------------
    BTFSS BANDERAS_RB,3
    GOTO SALIR
    ;----------- SI SE LLEGA HASTA AQUI ES QUE SE DEBIA INCREMENTAR ----------------------
    INCF MINUTO_EDITAR,F
    ;----------------CORRECION DE BCD CUANDO SE PASA DE X9 A (X+1)0
    MOVLW MINUTO_EDITAR
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_AUMENTO
    ;-----------------VERIFICAR SI SE PASA DE 59 A 00
    MOVLW 01100000B;60 EN BCD
    SUBWF MINUTO_EDITAR,W
    BTFSC STATUS,2 ;SI DA 0 SE REINICIA
    CLRF MINUTO_EDITAR

    GOTO SALIR

    EDIT_HOUR:
    ;SI HUBO UN FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 0 SE DECREMENTA EN 1 LAS HORAS
    ;------SE VERIFICA SI SE DEBE DECREMENTAR------------------
    BTFSS BANDERAS_RB, 2 ;((PORTB) and 07Fh), 0
    GOTO INCREMENTAR_HOUR
    ;--------SI HUBO UN FLANCO DE SUBIDA SE EN ((PORTB) and 07Fh), 0 SE EJECUTA ESTO ---------------
    DECF HORA_EDITAR,F
    ;--- CORRECCION DEL BCD ----------
    ;PRIMERO SE VERIFICA SI SE PASO DE 00 A 24
    MOVLW 255;ESTE VALOR HABRIA SI SE LE RESTA 1 A 0X00H
    SUBWF HORA_EDITAR,W
    BTFSS STATUS,2 ;SI ES 1 SE SALTA EL GOTO
    GOTO CORREGIR_BCD_HORA_EDITAR

    MOVLW 00100011B ;23 EN BCD
    MOVWF HORA_EDITAR
    ;---------------------------------------------------------------------------------------------------------------------
    CORREGIR_BCD_HORA_EDITAR:
    MOVLW HORA_EDITAR
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_DISMINUCION
    ;-------------------------------------------------------------------------------------------------------------------
    INCREMENTAR_HOUR:
    ;---------------SE VERIFICA SI SE DEBE INCREMENTAR-----------------------------------------------
    BTFSS BANDERAS_RB,3
    GOTO SALIR
    ;----------- SI SE LLEGA HASTA AQUI ES QUE SE DEBIA INCREMENTAR ----------------------
    INCF HORA_EDITAR,F

    ;----------------CORRECION DE BCD CUANDO SE PASA DE X9 A (X+1)0
    MOVLW HORA_EDITAR
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_AUMENTO
    ;-----------------VERIFICAR SI SE PASA DE 23 A 00
    MOVLW 00100100B ;24 EN BCD
    SUBWF HORA_EDITAR,W
    BTFSC STATUS,2 ;SI DA 0 SE REINICIA
    CLRF HORA_EDITAR
    ;------- LUEGO DE TODO SE LLEGA A ESTE PUNTO --------------------------------------------------
    SALIR:
    ;------- SE VERIFICA QUE SI SE HA SALIDO SOLO PULSANDO EL BOTON (SALIDA SIN GUARDAR DATOS)--------
    CALL FLANCO_SUBIDA_RB5
    BTFSS BANDERAS_RB,5 ;((PORTB) and 07Fh), 5
    RETURN
    ;-------------- SI HUBO FLANCO DE SUBIDA SE LLEGA A ESTE PUNTO -----------------------------------
    BCF BANDERAS_MODO,3 ;SE DESHABILITA EL BIT DE VERIFICACION DE PRIMERA VEZ ENTRANDO A EDITAR HORA
    BCF BANDERAS_MODO,2 ;SE COLOCA EN EDITAR MINUTO/MES
    BCF BANDERAS_MODO,1 ;SE DESHABILITA EL MODO DE EDICION
    ;REINICIO DEL TMR1
    MOVLW INI_TMR1H
    MOVWF TMR1H
    MOVLW INI_TMR1L
    MOVWF TMR1L
    MOVLW C_TMR1
    MOVWF MODO_TMR1
    BCF T1CON,0 ;SE APAGA EL TMR1
    RETURN

EDITAR_FECHA:
        ;CUANDO SE ENTRA EN ESTE MODO ((PORTB) and 07Fh), 2 REALIZA LA FUNCION DE SELECTOR DE EDICION DE HORA O MINUTO
    ;((PORTB) and 07Fh), 5 DETERMINA CUANDO SE SALE DE ESTE MODO,
    BTFSC BANDERAS_MODO,3
    GOTO SI_YA_SE_ENTRO_ANTES_FECHA
    ;-----------------SE ENTRA A ESTA PARTE SOLO CUANDO ES LA PRIMERA VEZ --------------------------------------------
    BSF BANDERAS_MODO,3 ;PARA QUE NO SE VUELVA A ENTRAR AQUI HASTA QUE SE SALGA DEL MODO EDICION
    MOVF DIA,W
    MOVWF DIA_EDITAR

    BSF T1CON,0 ;SE ACTIVA EL TIMER 1

    MOVF MES_BCD,W
    MOVWF MES_BCD_EDITAR ;SE GUARDAN LOS VALORES EN EL INSTANTE QUE SE ENTRA AL MODO DE EDICION

    MOVF MES_BIN,W
    MOVWF MES_BIN_EDITAR
    MOVF NUEVO_VALOR,W ; SE ACTUALIZAN ESTOS REGISTROS YA QUE SI NO SE HACE, AL SER LA CONDICION
    MOVWF MANTENER_VALOR ;DE ENTRADA IGUAL QUE LA DE SALIDA, SOLO SE VA A EJECUTAR 1 VEZ
    CALL DELAY_US ;DA TIEMPO A QUE LA SALIDA SE ESTABILICE
    MOVF PORTB,W
    MOVWF NUEVO_VALOR
    ;-------SE VERIFICA SI ES EL MINUTO O LA HORA QUE SE VA A EDITAR---------------------------------------------
    ;-----------------------------------------------------------------------------------------------------------------------------------
    SI_YA_SE_ENTRO_ANTES_FECHA:
    ;-------------------- SE EVITA EL PARPADEO DE LOS LEDS DEL CENTRO ----------------------------------------
    BSF PORTE,2
   ;--------------------------------- SE REVISAN LOS FLANCOS DE SUBIDA -----------------------------------------
    CALL FLANCO_SUBIDA_RB0
    CALL FLANCO_SUBIDA_RB1 ;SE MIRA SI HUBO UN FLANCO EN AUMENTAR O DISMINUIR
    ;-------------------------------------------------------------------------------------------------------------------------------
    ;SE HACE EL CAMBIO ENTRE 0 O 1 PARA EL VALOR A EDITAR (SE VERIFICA QUE HAYA OCURRIDO FLANCO DE SUBIDA)
    CALL FLANCO_SUBIDA_RB2
    BTFSS BANDERAS_RB,4 ;FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 2
    GOTO CAMBIAR_FECHA
   ;---------SE HACE EL CAMBIO DEL VALOR A EDITAR -----------------
    BTFSS BANDERAS_MODO,2 ;SE VE SI ESTA EN 1
    GOTO CAMBIAR_1
    BCF BANDERAS_MODO,2 ;SE LIMPIA SI ESTA EN 1
    GOTO CAMBIAR_FECHA

    CAMBIAR_1: ;SI NO ESTA EN 1 ESTA EN CERO ENTONCES
    BSF BANDERAS_MODO,2
    ;-------------------------------------------------------------------------------------------

    CAMBIAR_FECHA:
    CALL TABLA_MESES ;SE GUARDA PARA SABER EL NUMERO MAXIMO DE DIAS EN EL MES SELECCIONADO
    MOVWF DIA_MAX ;SE GUARDA EN DIA MAX

    ;--------SE VERIFICA QUE EDITAR DIA NO SEA MAYOR QUE EL DIA ESTABLECIDO PARA EL MES-------------
    MOVF DIA_MAX,W
    SUBWF DIA_EDITAR,W
    BTFSS STATUS, 0 ; SI C=1 QUIERE DECIR QUE DIA_MAX<= DIA_EDITAR Y ENTONCES SE CORRIGE
    GOTO DECISION_FECHA
    ;-----SI DIA_MAX <= DIA_EDITAR ENTONCES DIA_EDITAR= DIA_MAX-1----------------------------
    DECF DIA_MAX,W
    MOVWF DIA_EDITAR
  ;----------------------------------------------------------------------------------------------------------------------------
    DECISION_FECHA:
    BTFSS BANDERAS_MODO,2 ;SE MIRA SI LO QUE SE DESEA EDITAR ES EL DIA O EL MES
    GOTO EDIT_MONTH
    GOTO EDIT_DAY

    EDIT_DAY:
    ;----------------------------------- DISMINUIR --------------------------------------------------------------
    DECREMENTAR_DAY:
   ; --------------------------------SE COMPRUEBA QUE HAYA UN FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 0 ----------------------
    BTFSS BANDERAS_RB,2 ;FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 0
    GOTO INCREMENTAR_DAY
    ;--------SI HUBO UN FLANCO DE SUBIDA SE EN ((PORTB) and 07Fh), 0 SE EJECUTA ESTO DECREMENTAR ---------------
    DECFSZ DIA_EDITAR,F ;SI AL DECREMENTAR DA 0 ENTONCES HUBO UNDERFLOW
    GOTO CORREGIR_BCD_DIA_EDITAR

    DECF DIA_MAX,W
    MOVWF DIA_EDITAR
    ;------------------------------------------------------------------------
    CORREGIR_BCD_DIA_EDITAR:
    MOVLW DIA_EDITAR
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_DISMINUCION
    ;------------------------------------------------------------------------------------------------------------------------------
    INCREMENTAR_DAY:
    ;---------------------- SE VERIFICA SI SE DEBE INCREMENTAR(FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 1) -------------------------
    BTFSS BANDERAS_RB,3
    GOTO SALIR_FECHA
    ;------------------------------ SI SE VERIFICA QUE SE DEBE INCREMENTAR SE EJECUTA ESTO------------------
    INCF DIA_EDITAR,F

   ;SE CORRIGE EL BCD
    MOVLW DIA_EDITAR
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_AUMENTO
    ;SE VERIFICA QUE NO SE HAYA PASADO DEL DIA MAXIMO PERMITIDO
    MOVF DIA_MAX,W
    SUBWF DIA_EDITAR,W
    BTFSS STATUS,2 ; Z=1 SI DIA_MAX = DIA_EDITAR SE LIMPIAN LOS DIAS
    GOTO SALIR_FECHA ;SE SALE DE LA RUTINA

    MOVLW 1
    MOVWF DIA_EDITAR
    GOTO SALIR_FECHA

    EDIT_MONTH:
   ; --------------------------------SE COMPRUEBA QUE HAYA UN FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 0 ----------------------
    BTFSS BANDERAS_RB,2
    GOTO INCREMENTAR_MONTH
    ;------------------------------------------------------------------------------------------------------------------------------------
    ;--------------------------------- SE DECREMENTA SI SE DETECTA UN FLANCO DE SUBIDA------------------------
    DECF MES_BCD_EDITAR,F
    DECFSZ MES_BIN_EDITAR,F ;SI DA CERO ES QUE HUBO UNDERFLOW Y SE COLOCA UN 1
    GOTO CORREGIR_BCD_MES_EDITAR

    MOVLW 12
    MOVWF MES_BIN_EDITAR
    MOVLW 0x12 ; 12 EN BCD
    MOVWF MES_BCD_EDITAR

    CORREGIR_BCD_MES_EDITAR:
    ;--------- SE CORRIGE EL BCD -------------------------------------------------------------
    MOVLW MES_BCD_EDITAR
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_DISMINUCION
    ;-------------------------------------------------------------------------------------------------
    INCREMENTAR_MONTH:
    ;---------------------- SE VERIFICA SI SE DEBE INCREMENTAR(FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 1) -------------------------
    BTFSS BANDERAS_RB,3
    GOTO SALIR_FECHA
    ;------------------------------ SI SE VERIFICA QUE SE DEBE INCREMENTAR SE EJECUTA ESTO------------------
    INCF MES_BCD_EDITAR,F
    INCF MES_BIN_EDITAR,F
    ;-------- SE VERIFICA EL PASO DE 12 A 00 ---------------------------
    MOVLW 13
    SUBWF MES_BIN_EDITAR,W
    BTFSS STATUS,2
    GOTO CORREGIR_BCD_MES_INCREMENTAR

    MOVLW 1
    MOVWF MES_BIN_EDITAR
    MOVWF MES_BCD_EDITAR

    CORREGIR_BCD_MES_INCREMENTAR:
    MOVLW MES_BCD_EDITAR
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_AUMENTO
    ;------- LUEGO DE TODO SE LLEGA A ESTE PUNTO --------------------------------------------------
    SALIR_FECHA:
    ;------- SE VERIFICA QUE SI SE HA SALIDO SOLO PULSANDO EL BOTON (SALIDA SIN GUARDAR DATOS)--------
    CALL FLANCO_SUBIDA_RB5 ;SE VERIFICA QUE HAYA FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 5
    BTFSS BANDERAS_RB,5 ;((PORTB) and 07Fh), 5
    RETURN

    ;-------------- SI HUBO FLANCO DE SUBIDA SE LLEGA A ESTE PUNTO -----------------------------------
    BCF BANDERAS_MODO,3 ;SE DESHABILITA EL BIT DE VERIFICACION DE PRIMERA VEZ ENTRANDO A EDITAR HORA
    BCF BANDERAS_MODO,2 ;SE COLOCA EN EDITAR MINUTO/DIA
    BCF BANDERAS_MODO,1 ;SE DESHABILITA EL MODO DE EDICION

    MOVLW INI_TMR1H
    MOVWF TMR1H
    MOVLW INI_TMR1L
    MOVWF TMR1L

    MOVLW C_TMR1
    MOVWF MODO_TMR1
    BCF T1CON,0 ;SE APAGA EL TMR1

    RETURN

EDITAR_TEMPORIZADOR:
    ;CUANDO SE ENTRA EN ESTE MODO ((PORTB) and 07Fh), 2 REALIZA LA FUNCION DE SELECTOR DE EDICION DE HORA O MINUTO
    ;((PORTB) and 07Fh), 5 DETERMINA CUANDO SE SALE DE ESTE MODO,
    BTFSC BANDERAS_MODO,3
    GOTO SI_YA_SE_ENTRO_ANTES_TEMPORIZADOR
    ;-----------------SE ENTRA A ESTA PARTE SOLO CUANDO ES LA PRIMERA VEZ --------------------------------------------
    BSF BANDERAS_MODO,3 ;PARA QUE NO SE VUELVA A ENTRAR AQUI HASTA QUE SE SALGA DEL MODO EDICION

    MOVF SEG_TIMER,W
    SUBLW 0 ;SI ES CERO LO ANTERIOR Z=1
    BTFSS STATUS,2 ;SE VERIFICA QUE LOS SEGUNDOS SEAN 0
    GOTO IF_NOT_CERO
    ;YA QUE EL TIEMPO MINIMO PARA CONFIGURAR ES 1 SEGUNDO SE TIENE QUE VERIFICAR QUE EL TEMPORIZADOR
    ;NUNCA SE COLOQUE EN 00 MINUTOS Y 00 SEGUNDOS AL EDITAR,
    MOVF MIN_TIMER,W
    SUBLW 0 ;UNICAMENTE SI W ES SERO Z=1
    BTFSS STATUS,2 ;SE VERIFICA QUE LOS MINUTOS SEAN 0
    GOTO IF_NOT_CERO
    ; SI ES 0 MINUTOS Y 0 SEGUNDOS SE COLOCA EN 0 MINUTOS Y 1 SEGUNDO
    MOVLW 1
    MOVWF SEG_TIMER_CONFIG
    GOTO CONTINUE

    IF_NOT_CERO:
    MOVF SEG_TIMER,W
    MOVWF SEG_TIMER_CONFIG

    CONTINUE:
    BSF T1CON,0 ;SE ACTIVA EL TIMER 1

    MOVF MIN_TIMER,W
    MOVWF MIN_TIMER_CONFIG ;SE GUARDAN LOS VALORES EN EL INSTANTE QUE SE ENTRA AL MODO DE EDICION

    MOVF NUEVO_VALOR,W ; SE ACTUALIZAN ESTOS REGISTROS YA QUE SI NO SE HACE, AL SER LA CONDICION
    MOVWF MANTENER_VALOR ;DE ENTRADA IGUAL QUE LA DE SALIDA, SOLO SE VA A EJECUTAR 1 VEZ
    CALL DELAY_US ;DA TIEMPO A QUE LA SALIDA SE ESTABILICE
    MOVF PORTB,W
    MOVWF NUEVO_VALOR
    ;-----------------------------------------------------------------------------------------------------------------------------------
    SI_YA_SE_ENTRO_ANTES_TEMPORIZADOR:
    ;-------------------- SE EVITA EL PARPADEO DE LOS LEDS DEL CENTRO ----------------------------------------
    BSF PORTE,2
    ;-------------------------------------------------------------------------------------------------------------------------------
    ;SE HACE EL CAMBIO ENTRE 0 O 1 PARA EL VALOR A EDITAR (SE VERIFICA QUE HAYA OCURRIDO FLANCO DE SUBIDA)
    CALL FLANCO_SUBIDA_RB0
    CALL FLANCO_SUBIDA_RB1
    CALL FLANCO_SUBIDA_RB2
    BTFSS BANDERAS_RB,4
    GOTO CAMBIAR_TEMPORIZADOR
    ;---------SE HACE EL CAMBIO DEL VALOR A EDITAR -----------------
    BTFSS BANDERAS_MODO,2 ;SE VE SI ESTA EN 1
    GOTO CAMBIAR_0_TEMPORIZADOR

    BCF BANDERAS_MODO,2 ;SE LIMPIA SI ESTA EN 1
    GOTO CAMBIAR_TEMPORIZADOR

    CAMBIAR_0_TEMPORIZADOR: ;SI NO ESTA EN 1 ESTA EN CERO ENTONCES
    BSF BANDERAS_MODO,2
    ;-------------------------------------------------------------------------------------------
    CAMBIAR_TEMPORIZADOR:
    BTFSC BANDERAS_MODO,2 ; SE VE SI LA EDICION ESTA EN HORAS(1) O MINUTOS(0)
    GOTO EDIT_MINUTE_TEMPORIZADOR

    EDIT_SECOND:
    ;---------SE VERIFICA SI SE DEBE DECREMENTAR--------------------------------------
    DECREMENTAR_SECOND:
    BTFSS BANDERAS_RB,2 ;((PORTB) and 07Fh), 0
    GOTO INCREMENTAR_SECOND
    ;--------SI HUBO UN FLANCO DE SUBIDA SE EN ((PORTB) and 07Fh), 0 SE EJECUTA ESTO DECREMENTAR ---------------
    DECF SEG_TIMER_CONFIG,F
    ;SE VERIFICA SI MIN_TIMER_CONFIG ES DIFERENCE DE CERO
    MOVF MIN_TIMER_CONFIG,W
    SUBLW 0 ;SOLO SI ES 0 Z=1
    BTFSS STATUS,2
    GOTO CORREGIR_BCD_TEMP_SEG_DEC
    ;-------- SI MINUTOS ES CERO SE EJECUTA ESTO -----------------
    MOVF SEG_TIMER_CONFIG,W
    SUBLW 0 ;SI ESTO DA CERO ENTONCES SE COLOCA EN 59
    BTFSS STATUS,2
    GOTO CORREGIR_BCD_TEMP_SEG_DEC

    MOVLW 01011001B ;59 EN BCD
    MOVWF SEG_TIMER_CONFIG

    CORREGIR_BCD_TEMP_SEG_DEC:
    ;--- CORRECCION DEL BCD ----------
    ;PRIMERO SE VERIFICA SI SE PASO DE 00 A 59
    MOVLW 255 ;ESTE VALOR HABRIA SI SE LE RESTA 1 A 0X00H
    SUBWF SEG_TIMER_CONFIG,W
    BTFSS STATUS,2 ;SI ES 1 SE SALTA EL GOTO
    GOTO CORREGIR_BCD_SEGUNDO_TEMPORIZADOR_EDITAR

    MOVLW 01011001B ;59 EN BCD
    MOVWF SEG_TIMER_CONFIG

    CORREGIR_BCD_SEGUNDO_TEMPORIZADOR_EDITAR:
    MOVLW SEG_TIMER_CONFIG
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_DISMINUCION
    INCREMENTAR_SECOND:
    ;---------------------- SE VERIFICA SI SE DEBE INCREMENTAR -------------------------
    BTFSS BANDERAS_RB,3 ;((PORTB) and 07Fh), 1
    GOTO SALIR_TEMPORIZADOR

    ;----------- SI SE LLEGA HASTA AQUI ES QUE SE DEBIA INCREMENTAR ----------------------
    INCF SEG_TIMER_CONFIG,F
    ;SE VERIFICA SI MIN_TIMER_CONFIG ES DIFERENCE DE CERO
    MOVF MIN_TIMER_CONFIG,W
    SUBLW 0 ;SOLO SI ES 0 Z=1
    BTFSS STATUS,2
    GOTO CORREGIR_BCD_TEMP_SEG_INC
    ;-------- SI MINUTOS ES CERO SE EJECUTA ESTO -----------------
    MOVF SEG_TIMER_CONFIG,W
    SUBLW 01011010B ;SI ESTO DA CERO
    BTFSS STATUS,2
    GOTO CORREGIR_BCD_TEMP_SEG_INC

    MOVLW 1 ;59 EN BCD
    MOVWF SEG_TIMER_CONFIG
    CORREGIR_BCD_TEMP_SEG_INC:
    ;----------------CORRECION DE BCD CUANDO SE PASA DE X9 A (X+1)0
    MOVLW SEG_TIMER_CONFIG
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_AUMENTO
    ;-----------------VERIFICAR SI SE PASA DE 59 A 00
    VERIFICAR_OVERFLOW_SEGUNDOS_TEMPORIZADOR_EDITAR:
    MOVLW 01100000B ;60 EN BCD
    SUBWF SEG_TIMER_CONFIG,W
    BTFSC STATUS,2 ;SI DA 0 SE REINICIA
    CLRF SEG_TIMER_CONFIG

    GOTO SALIR_TEMPORIZADOR

    EDIT_MINUTE_TEMPORIZADOR:
    ;------------------------ CADA VEZ QUE SE ENTRA AQUI SE VERIFICA SI SEGUNDOS ES 0 PARA ESTABLECER EL TIEMPO MINIMO----
    MOVLW 0
    SUBWF SEG_TIMER_CONFIG,W
    BTFSS STATUS,2
    GOTO VER_PORTB
    ;SI SEG_HORA ES 0 ENTONCES SE VERIFICA QUE MINUTOS SEA 0
    MOVLW 0
    SUBWF MIN_TIMER_CONFIG,W
    BTFSS STATUS,2
    GOTO VER_PORTB

    ;SI SE LLEGA HASTA AQUI ENTONCES ES QUE SE DEBE CORREGIR PARA NO DAR ESTADO DE PONER 0 MIN 0 SEG
    MOVLW 1
    MOVWF SEG_TIMER_CONFIG

    VER_PORTB:
    ;------SE VERIFICA SI SE DEBE DECREMENTAR------------------
    BTFSS BANDERAS_RB,2 ;((PORTB) and 07Fh), 0
    GOTO INCREMENTAR_MINUTE_TEMPORIZADOR
    ;--------SIm HUBO UN FLANCO DE SUBIDA SE EN ((PORTB) and 07Fh), 0 SE EJECUTA ESTO ---------------
    DECF MIN_TIMER_CONFIG,F
    ;--- CORRECCION DEL BCD ----------
    ;PRIMERO SE VERIFICA SI SE PASO DE 00 A 99
    MOVLW 255 ;ESTE VALOR HABRIA SI SE LE RESTA 1 A 0X00H
    SUBWF MIN_TIMER_CONFIG,W
    BTFSS STATUS,2 ;SI ES 1 SE SALTA EL GOTO
    GOTO CORREGIR_BCD_MINUTOS_TEMPORIZADOR_EDITAR

    MOVLW 10011001B ;99 EN BCD
    MOVWF MIN_TIMER_CONFIG

    CORREGIR_BCD_MINUTOS_TEMPORIZADOR_EDITAR:
    MOVLW MIN_TIMER_CONFIG
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_DISMINUCION
    ;--------------------------------------------------------------------------------------------------------------------
    INCREMENTAR_MINUTE_TEMPORIZADOR:
    ;---------------SE VERIFICA SI SE DEBE INCREMENTAR-----------------------------------------------
    BTFSS BANDERAS_RB,3 ;((PORTB) and 07Fh), 1
    GOTO SALIR_TEMPORIZADOR

    ;----------- SI SE LLEGA HASTA AQUI ES QUE SE DEBIA INCREMENTAR ----------------------
    INCF MIN_TIMER_CONFIG,F
    ;----------------CORRECION DE BCD CUANDO SE PASA DE X9 A (X+1)0
    MOVLW MIN_TIMER_CONFIG
    MOVWF FSR ;PASO POR REFERENCIA
    CALL CORRECCION_BCD_AUMENTO
    ;-----------------VERIFICAR SI SE PASA DE 99 A 00
    MOVLW 10100000B
    SUBWF MIN_TIMER_CONFIG,W
    BTFSC STATUS,2 ;SI DA 0 SE REINICIA
    CLRF MIN_TIMER_CONFIG
    ;------- LUEGO DE TODO SE LLEGA A ESTE PUNTO --------------------------------------------------

    SALIR_TEMPORIZADOR:
    ;------- SE VERIFICA QUE SI SE HA SALIDO SOLO PULSANDO EL BOTON (SALIDA SIN GUARDAR DATOS)--------
    CALL FLANCO_SUBIDA_RB5
    BTFSS BANDERAS_RB,5
    RETURN


    ;-------------- SI HUBO FLANCO DE SUBIDA SE LLEGA A ESTE PUNTO -----------------------------------
    BCF BANDERAS_MODO,3 ;SE DESHABILITA EL BIT DE VERIFICACION DE PRIMERA VEZ ENTRANDO A EDITAR HORA
    BCF BANDERAS_MODO,2 ;SE COLOCA EN EDITAR MINUTO/DIA
    BCF BANDERAS_MODO,1 ;SE DESHABILITA EL MODO DE EDICION

    MOVLW INI_TMR1H
    MOVWF TMR1H
    MOVLW INI_TMR1L
    MOVWF TMR1L

    MOVLW C_TMR1
    MOVWF MODO_TMR1
    BCF T1CON,0 ;SE APAGA EL TMR1

    RETURN
 ;-------------------------------- INTERACCION CON PERIFERICOS -----------------------------------------------------------------
 ;EN ESTA SECCION DEL CODIGO SE ENCUENTRAN RUTINAS QUE SE ENCARGAN REGISTRAR LA INTERACCION
 ; CON LAS ENTRADAS EXTERIORES AL PIC, COMO PULSACIONES DE BOTONES
 FLANCO_SUBIDA_RB0: ;SE DETECTA UN FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 0
    BCF BANDERAS_RB,2 ;SE LIMPIA PARA QUE NO SE TENGA QUE HACER DEFORMA EXTERNA
    BTFSC MANTENER_VALOR,0
    RETURN ;SI SE EJECUTA ESTO ES QUE ESTA EN 1 O HUBO FLANCO DE BAJADA

    BTFSC NUEVO_VALOR,0
    BSF BANDERAS_RB, 2 ;SI SE EJECUTA ESTO ES QUE SI HUBO FLANCO DE SUBIDA
    RETURN

FLANCO_SUBIDA_RB1: ;SE DETECTA UN FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 0
    BCF BANDERAS_RB,3 ;SE LIMPIA PARA QUE NO SE TENGA QUE HACER DEFORMA EXTERNA
    BTFSC MANTENER_VALOR,1
    RETURN ;SI SE EJECUTA ESTO ES QUE ESTA EN 1 O HUBO FLANCO DE BAJADA

    BTFSC NUEVO_VALOR,1
    BSF BANDERAS_RB, 3 ;SI SE EJECUTA ESTO ES QUE SI HUBO FLANCO DE SUBIDA
    RETURN

FLANCO_SUBIDA_RB2: ;SE DETECTA UN FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 0
    BCF BANDERAS_RB,4 ;SE LIMPIA PARA QUE NO SE TENGA QUE HACER DEFORMA EXTERNA
    BTFSC MANTENER_VALOR,2
    RETURN ;SI SE EJECUTA ESTO ES QUE ESTA EN 1 O HUBO FLANCO DE BAJADA

    BTFSC NUEVO_VALOR,2
    BSF BANDERAS_RB, 4 ;SI SE EJECUTA ESTO ES QUE SI HUBO FLANCO DE SUBIDA
    RETURN

FLANCO_SUBIDA_RB5: ;SE DETECTA UN FLANCO DE SUBIDA EN ((PORTB) and 07Fh), 0
    BCF BANDERAS_RB,5 ;SE LIMPIA PARA QUE NO SE TENGA QUE HACER DEFORMA EXTERNA
    BTFSC MANTENER_VALOR,5
    RETURN ;SI SE EJECUTA ESTO ES QUE ESTA EN 1 O HUBO FLANCO DE BAJADA

    BTFSC NUEVO_VALOR,5
    BSF BANDERAS_RB, 5 ;SI SE EJECUTA ESTO ES QUE SI HUBO FLANCO DE SUBIDA
    RETURN

DELAY_MS: ;RETARDO DE 1.015 mS
    MOVLW 2
    MOVWF DELAY_LARGO

REPITE:
    CALL DELAY_US
    DECFSZ DELAY_LARGO
    GOTO REPITE
    RETURN

DELAY_US: ;RETARDO DE 501 uS
    MOVLW 166
    MOVWF DELAY_CORTO
    DECFSZ DELAY_CORTO, F
    GOTO $-1
    RETURN
    END
